{"version":3,"sources":["src/js/types.js","src/js/defaults.js","src/js/support.js","node_modules/loadjs/dist/loadjs.umd.js","src/js/utils.js","src/js/console.js","src/js/fullscreen.js","src/js/i18n.js","src/js/captions.js","src/js/ui.js","src/js/html5.js","src/js/controls.js","src/js/listeners.js","src/js/storage.js","src/js/plugins/ads.js","src/js/plugins/youtube.js","src/js/plugins/vimeo.js","src/js/media.js","src/js/source.js","src/js/plyr.js"],"names":["providers","html5","youtube","vimeo","types","audio","video","defaults","enabled","title","debug","autoplay","autopause","seekTime","volume","muted","duration","displayDuration","invertTime","toggleInvert","ratio","clickToPlay","hideControls","showPosterOnEnd","disableContextMenu","loadSprite","iconPrefix","iconUrl","blankVideo","quality","default","options","loop","active","speed","selected","keyboard","focused","global","tooltips","controls","seek","captions","language","navigator","userLanguage","split","fullscreen","fallback","iosNative","storage","key","settings","i18n","restart","rewind","play","pause","fastForward","played","buffered","currentTime","mute","unmute","enableCaptions","disableCaptions","enterFullscreen","exitFullscreen","frameTitle","normal","start","end","all","reset","disabled","advertisement","urls","api","googleIMA","listeners","pip","airplay","events","selectors","editable","container","wrapper","labels","buttons","inputs","display","buffer","progress","menu","classNames","embed","ads","control","type","provider","stopped","playing","loading","error","hover","tooltip","cues","hidden","isIos","isTouch","uiSupported","noTransition","value","badge","open","supported","tabFocus","attributes","id","keys","google","publisherId","range","factory","devnull","bundleIdCache","bundleResultCache","bundleCallbackQueue","publish","bundleId","pathsNotFound","q","length","splice","executeCallbacks","args","depsNotFound","call","success","loadFile","path","callbackFn","numTries","isCss","e","doc","document","async","maxTries","numRetries","beforeCallbackFn","before","pathStripped","replace","test","createElement","rel","href","src","undefined","onload","onerror","onbeforeload","ev","result","sheet","cssText","x","defaultPrevented","head","appendChild","loadjs","paths","arg1","arg2","trim","fn","i","numWaiting","push","loadFiles","ready","deps","bundleIds","r","subscribe","done","isDefined","module","exports","utils","is","plyr","input","this","instanceof","window","Plyr","object","getConstructor","Object","number","Number","isNaN","string","String","boolean","Boolean","function","Function","array","nullOrUndefined","Array","isArray","weakMap","WeakMap","nodeList","NodeList","element","Element","textNode","Text","event","Event","cue","TextTrackCue","VTTCue","track","TextTrack","kind","url","empty","constructor","getBrowser","isIE","documentMode","isWebkit","documentElement","style","userAgent","isIPhone","platform","fetch","responseType","arguments","Promise","resolve","reject","request","XMLHttpRequest","addEventListener","JSON","parse","responseText","response","Error","statusText","send","loadScript","hasId","exists","querySelectorAll","toggleHidden","setAttribute","support","cached","localStorage","getItem","data","injectSprite","content","then","setItem","stringify","catch","innerHTML","body","insertBefore","childNodes","generateId","prefix","Math","floor","random","wrap","elements","targets","from","reverse","forEach","index","child","cloneNode","parent","parentNode","sibling","nextSibling","text","setAttributes","textContent","insertAfter","target","insertElement","removeElement","removeChild","emptyElement","lastChild","replaceElement","newChild","oldChild","replaceChild","entries","_ref","_ref2","slicedToArray","getAttributesFromSelector","sel","existingAttributes","existing","s","selector","className","parts","charAt","class","toggleClass","toggle","contains","classList","hasClass","removeAttribute","matches","prototype","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","includes","getElements","getElement","querySelector","findElements","config","seekTooltip","warn","toggleNativeControls","getFocusElement","activeElement","trapFocus","focusable","first","last","trap","keyCode","shiftKey","focus","preventDefault","on","off","toggleListener","callback","passive","capture","Node","passiveListeners","dispatchEvent","bubbles","detail","CustomEvent","assign","toggleState","pressed","getAttribute","state","getPercentage","current","max","toFixed","getHours","parseInt","getMinutes","getSeconds","formatTime","time","displayHours","inverted","format","slice","hours","mins","secs","replaceAll","find","RegExp","toString","toTitleCase","toUpperCase","substr","toLowerCase","toPascalCase","toCamelCase","extend","_len","sources","_key","source","shift","defineProperty","apply","concat","toConsumableArray","dedupe","filter","item","indexOf","closest","reduce","prev","curr","abs","getProviderByUrl","parseYouTubeId","match","$2","parseVimeoId","parseUrl","parser","getUrlParams","search","startsWith","params","hash","_hash$split","_hash$split2","val","decodeURIComponent","buildUrlParams","map","encodeURIComponent","join","stripHTML","fragment","createDocumentFragment","firstChild","innerText","getAspectRatio","width","height","getRatio","w","h","transitionEndEvent","WebkitTransition","MozTransition","OTransition","transition","repaint","setTimeout","offsetHeight","check","playsinline","ui","browser","canPlayInline","rangeInput","webkitSetPresentationMode","WebKitPlaybackTargetAvailabilityEvent","mime","media","isHTML5","canPlayType","isVideo","isAudio","textTracks","get","touch","transitions","reducedMotion","matchMedia","noop","Console","classCallCheck","console","log","bind","onChange","button","player","toggleFallback","scrollPosition","scrollX","y","scrollY","scrollTo","overflow","Fullscreen","_this","name","update","native","webkitEnterFullscreen","requestFullscreen","webkitExitFullscreen","action","cancelFullScreen","exit","enter","fullscreenElement","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","some","pre","{seektime}","{title}","setup","stored","isYouTube","setCaptionsMenu","getTracks","tracks","URL","hostname","location","protocol","blob","createObjectURL","setLanguage","show","setCue","mode","currentTrack","getCurrentTrack","activeCues","isVimeo","enableTextTrack","_this2","getLabel","label","setText","getCueAsHTML","caption","addStyleHook","build","inject","updateVolume","timeUpdate","checkPlaying","setTitle","isEmbed","iframe","paused","toggleControls","checkLoading","clearTimeout","timers","checkFailed","_this3","failed","networkState","setRange","updateRangeFill","setProgress","getElementsByTagName","nodeValue","updateProgress","updateTimeDisplay","invert","seeking","durationUpdate","hasDuration","updateSeekTooltip","getSources","getQualityOptions","sizes","set","load","cancelRequests","setProperty","getIconUrl","absolute","svg4everybody","createIcon","iconPath","icon","createElementNS","role","use","setAttributeNS","createLabel","attr","createBadge","createButton","buttonType","labelPressed","iconPressed","createRange","for","min","step","autocomplete","aria-labelledby","aria-valuemin","aria-valuemax","aria-valuenow","createProgress","aria-hidden","suffix","createTime","createMenuItem","list","checked","radio","faux","insertAdjacentHTML","percent","clientRect","getBoundingClientRect","visible","_toggle","pageX","left","parseFloat","toggleTab","setting","tab","tabs","pane","panes","setQualityMenu","checkMenu","sort","a","b","sorting","getBadge","updateSetting","lang","unshift","setSpeedMenu","_this4","values","toggleMenu","form","isMenuItem","isButton","stopPropagation","getTabSize","clone","position","opacity","scrollWidth","scrollHeight","showTab","getElementById","size","restore","propertyName","create","_this5","aria-haspopup","aria-controls","aria-expanded","aria-labelled-by","tabindex","inner","home","back","_this6","seektime","Listeners","lastKey","handleKey","firstTouch","code","which","repeat","altKey","ctrlKey","metaKey","togglePlay","increaseVolume","decreaseVolume","forward","toggleCaptions","hasAudio","initialized","managerPromise","ended","inputEvent","proxy","defaultHandler","customHandlerKey","customHandler","returned","hasCustomHandler","webkitDirectionInvertedFromDevice","direction","deltaY","deltaX","Storage","store","json","removeItem","Ads","displayContainer","manager","loader","cuePoints","safetyTimer","countdownTimer","ima","trigger","startSafetyTimer","clearSafetyTimer","setupIMA","setVpaidMode","ImaSdkSettings","VpaidMode","ENABLED","setLocale","AdDisplayContainer","requestAds","AdsLoader","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","AdsRequest","adTagUrl","tagUrl","linearAdSlotWidth","offsetWidth","linearAdSlotHeight","nonLinearAdSlotWidth","nonLinearAdSlotHeight","forceNonLinearFullSlot","clearInterval","setInterval","getRemainingTime","AdsRenderingSettings","restoreCustomPlaybackStateOnAdBreakComplete","enablePreloading","getAdsManager","getCuePoints","cuePoint","seekElement","cuePercentage","setVolume","AdEvent","onAdEvent","_this7","ad","getAd","LOADED","pollCountdown","isLinear","ALL_ADS_COMPLETED","loadAds","CONTENT_PAUSE_REQUESTED","pauseContent","CONTENT_RESUME_REQUESTED","resumeContent","STARTED","MIDPOINT","COMPLETE","IMPRESSION","CLICK","cancel","_this8","contentComplete","seekedTime","discardAdBreak","resize","ViewMode","NORMAL","_this9","initialize","init","adError","zIndex","_this10","destroy","_this11","handlers","handler","_this12","AV_PUBLISHERID","AV_CHANNELID","AV_URL","cb","Date","now","AV_WIDTH","AV_HEIGHT","AV_CDIM2","base","mapQualityUnit","setAspectRatio","YT","Player","onYouTubeReadyCallbacks","onYouTubeIframeAPIReady","getTitle","videoId","getVideoData","items","snippet","paddingBottom","currentId","playerVars","showinfo","iv_load_policy","modestbranding","disablekb","widget_referrer","cc_load_policy","cc_lang_pref","onError","message","onPlaybackQualityChange","onPlaybackRateChange","instance","playbackRate","getPlaybackRate","onReady","playVideo","pauseVideo","stop","stopVideo","getDuration","getCurrentTime","seekTo","setPlaybackRate","getPlaybackQuality","setPlaybackQuality","getVideoUrl","getAvailablePlaybackRates","buffering","getVideoLoadedFraction","lastBuffered","onStateChange","Vimeo","padding","offset","transform","byline","portrait","transparent","gesture","disableTextTrack","setCurrentTime","setLoop","currentSrc","getVideoWidth","getVideoHeight","dimensions","setAutopause","getVideoTitle","getTextTracks","seconds","insertElements","attribute","change","crossorigin","poster","jQuery","original","tagName","truthy","hasAttribute","webkitShowPlaybackTargetPicker","delay","isEnterFullscreen","soft","clear","unload","readyState","targetTime","fauxDuration","realDuration","mozHasAudio","webkitAudioDecodedByteCount","audioTracks","states","webkitPresentationMode","inline"],"mappings":"uLAIO,IAAMA,EAAY,CACrBC,MAAO,QACPC,QAAS,UACTC,MAAO,SAGEC,EAAQ,CACjBC,MAAO,QACPC,MAAO,SCRLC,EAAW,CAEbC,SAAS,EAGTC,MAAO,GAGPC,OAAO,EAGPC,UAAU,EAGVC,WAAW,EAGXC,SAAU,GAGVC,OAAQ,EACRC,OAAO,EAGPC,SAAU,KAIVC,iBAAiB,EAGjBC,YAAY,EAGZC,cAAc,EAGdC,MAAO,OAGPC,aAAa,EAGbC,cAAc,EAGdC,iBAAiB,EAGjBC,oBAAoB,EAGpBC,YAAY,EACZC,WAAY,OACZC,QAAS,qCAGTC,WAAY,uCAGZC,QAAS,CACLC,QAAS,IACTC,QAAS,CACL,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,YAKRC,KAAM,CACFC,QAAQ,GAMZC,MAAO,CACHC,SAAU,EACVJ,QAAS,CACL,GACA,IACA,EACA,KACA,IACA,KACA,IAKRK,SAAU,CACNC,SAAS,EACTC,QAAQ,GAIZC,SAAU,CACNC,UAAU,EACVC,MAAM,GAIVC,SAAU,CACNT,QAAQ,EACRU,UAAWC,UAAUD,UAAYC,UAAUC,cAAcC,MAAM,KAAK,IAIxEC,WAAY,CACRvC,SAAS,EACTwC,UAAU,EACVC,WAAW,GAIfC,QAAS,CACL1C,SAAS,EACT2C,IAAK,QAITX,SAAU,CACN,aAGA,OAEA,WACA,eACA,OACA,SACA,WACA,WACA,MACA,UACA,cAEJY,SAAU,CACN,WACA,UACA,SAIJC,KAAM,CACFC,QAAS,UACTC,OAAQ,yBACRC,KAAM,OACNC,MAAO,QACPC,YAAa,0BACbjB,KAAM,OACNkB,OAAQ,SACRC,SAAU,WACVC,YAAa,eACb7C,SAAU,WACVF,OAAQ,SACRgD,KAAM,OACNC,OAAQ,SACRC,eAAgB,kBAChBC,gBAAiB,mBACjBC,gBAAiB,mBACjBC,eAAgB,kBAChBC,WAAY,qBACZ1B,SAAU,WACVU,SAAU,WACVlB,MAAO,QACPmC,OAAQ,SACRxC,QAAS,UACTG,KAAM,OACNsC,MAAO,QACPC,IAAK,MACLC,IAAK,MACLC,MAAO,QACPC,SAAU,WACVlE,QAAS,UACTmE,cAAe,MAInBC,KAAM,CACFzE,MAAO,CACH0E,IAAK,0CAET3E,QAAS,CACL2E,IAAK,sCAETC,UAAW,CACPD,IAAK,uDAKbE,UAAW,CACPtC,KAAM,KACNe,KAAM,KACNC,MAAO,KACPH,QAAS,KACTC,OAAQ,KACRG,YAAa,KACbI,KAAM,KACNhD,OAAQ,KACR4B,SAAU,KACVK,WAAY,KACZiC,IAAK,KACLC,QAAS,KACT/C,MAAO,KACPL,QAAS,KACTG,KAAM,KACNW,SAAU,MAIduC,OAAQ,CAGJ,QACA,WACA,UACA,UACA,UACA,UACA,iBACA,YACA,aACA,iBACA,aACA,eACA,OACA,QACA,QACA,UACA,SACA,UACA,aACA,YAGA,kBACA,iBACA,kBACA,mBACA,iBACA,iBACA,gBACA,QAGA,cACA,gBACA,mBAGA,YACA,kBACA,mBACA,YACA,cACA,cACA,iBACA,gBACA,YAKJC,UAAW,CACPC,SAAU,6CACVC,UAAW,QACX7C,SAAU,CACN6C,UAAW,KACXC,QAAS,mBAEbC,OAAQ,cACRC,QAAS,CACLhC,KAAM,qBACNC,MAAO,sBACPH,QAAS,wBACTC,OAAQ,uBACRG,YAAa,6BACbI,KAAM,qBACNpB,SAAU,yBACVK,WAAY,2BACZiC,IAAK,oBACLC,QAAS,wBACT7B,SAAU,yBACVpB,KAAM,sBAEVyD,OAAQ,CACJhD,KAAM,qBACN3B,OAAQ,uBACRoB,MAAO,sBACPS,SAAU,yBACVd,QAAS,yBAEb6D,QAAS,CACL7B,YAAa,uBACb7C,SAAU,wBACV2E,OAAQ,0BACRhC,OAAQ,0BACR3B,KAAM,wBACNlB,OAAQ,0BAEZ8E,SAAU,kBACVlD,SAAU,kBACVmD,KAAM,CACFhE,QAAS,kCAKjBiE,WAAY,CACRxF,MAAO,sBACPyF,MAAO,oBACPC,IAAK,YACLC,QAAS,gBACTC,KAAM,YACNC,SAAU,YACVC,QAAS,gBACTC,QAAS,gBACTC,QAAS,gBACTC,MAAO,kBACPC,MAAO,cACPC,QAAS,gBACTC,KAAM,aACNC,OAAQ,gBACRrF,aAAc,sBACdsF,MAAO,eACPC,QAAS,iBACTC,YAAa,gBACbC,aAAc,sBACdlB,KAAM,CACFmB,MAAO,oBACPC,MAAO,cACPC,KAAM,mBAEVxE,SAAU,CACNlC,QAAS,yBACTyB,OAAQ,yBAEZc,WAAY,CACRvC,QAAS,2BACTwC,SAAU,6BAEdgC,IAAK,CACDmC,UAAW,sBACXlF,OAAQ,oBAEZgD,QAAS,CACLkC,UAAW,0BACXlF,OAAQ,wBAEZmF,SAAU,mBAIdC,WAAY,CACRtB,MAAO,CACHI,SAAU,qBACVmB,GAAI,uBAKZC,KAAM,CACFC,OAAQ,MAKZxB,IAAK,CACDxF,SAAS,EACTiH,YAAa,8GChPPC,mBChJb,IAAeC,EAAAA,EAQR,WAMR,IAAIC,EAAU,aACVC,EAAgB,GAChBC,EAAoB,GACpBC,EAAsB,GAmD1B,SAASC,EAAQC,EAAUC,GAEzB,GAAKD,EAAL,CAEA,IAAIE,EAAIJ,EAAoBE,GAM5B,GAHAH,EAAkBG,GAAYC,EAGzBC,EAGL,KAAOA,EAAEC,QACPD,EAAE,GAAGF,EAAUC,GACfC,EAAEE,OAAO,EAAG,IAUhB,SAASC,EAAiBC,EAAMC,GAE1BD,EAAKE,OAAMF,EAAO,CAACG,QAASH,IAG5BC,EAAaJ,QAASG,EAAKhC,OAASqB,GAASY,IAC3CD,EAAKG,SAAWd,GAASW,GASjC,SAASI,EAASC,EAAMC,EAAYN,EAAMO,GACxC,IAKIC,EACAC,EANAC,EAAMC,SACNC,EAAQZ,EAAKY,MACbC,GAAYb,EAAKc,YAAc,GAAK,EACpCC,EAAmBf,EAAKgB,QAAU3B,EAClC4B,EAAeZ,EAAKa,QAAQ,cAAe,IAI/CX,EAAWA,GAAY,EAEnB,iBAAiBY,KAAKd,IACxBG,GAAQ,GAGRC,EAAIC,EAAIU,cAAc,SACpBC,IAAM,aACRZ,EAAEa,KAAOL,GACA,+BAA+BE,KAAKd,IAE7CI,EAAIC,EAAIU,cAAc,QACpBG,IAAMN,IAGRR,EAAIC,EAAIU,cAAc,WACpBG,IAAMlB,EACRI,EAAEG,WAAkBY,IAAVZ,GAA6BA,GAGzCH,EAAEgB,OAAShB,EAAEiB,QAAUjB,EAAEkB,aAAe,SAAUC,GAChD,IAAIC,EAASD,EAAGjE,KAAK,GAIrB,GAAI6C,GAAS,cAAeC,EAC1B,IACOA,EAAEqB,MAAMC,QAAQlC,SAAQgC,EAAS,KACtC,MAAOG,GAGPH,EAAS,IAKb,GAAc,KAAVA,IAEFtB,GAAY,GAGGM,EACb,OAAOT,EAASC,EAAMC,EAAYN,EAAMO,GAK5CD,EAAWD,EAAMwB,EAAQD,EAAGK,oBAII,IAA9BlB,EAAiBV,EAAMI,IAAcC,EAAIwB,KAAKC,YAAY1B,GA+ChE,SAAS2B,EAAOC,EAAOC,EAAMC,GAC3B,IAAI7C,EACAM,EASJ,GANIsC,GAAQA,EAAKE,OAAM9C,EAAW4C,GAGlCtC,GAAQN,EAAW6C,EAAOD,IAAS,GAG/B5C,EAAU,CACZ,GAAIA,KAAYJ,EACd,KAAM,SAENA,EAAcI,IAAY,GArDhC,SAAmB2C,EAAO/B,EAAYN,GAIpC,IAGIyC,EACAC,EAJAC,GAFJN,EAAQA,EAAMO,KAAOP,EAAQ,CAACA,IAEPxC,OACnBmC,EAAIW,EACJhD,EAAgB,GAqBpB,IAhBA8C,EAAK,SAASpC,EAAMwB,EAAQI,GAM1B,GAJc,KAAVJ,GAAelC,EAAciD,KAAKvC,GAIxB,KAAVwB,EAAe,CACjB,IAAII,EACC,OADiBtC,EAAciD,KAAKvC,KAI3CsC,GACiBrC,EAAWX,IAIzB+C,EAAE,EAAGA,EAAIV,EAAGU,IAAKtC,EAASiC,EAAMK,GAAID,EAAIzC,GA+B7C6C,CAAUR,EAAO,SAAU1C,GAEzBI,EAAiBC,EAAML,GAGvBF,EAAQC,EAAUC,IACjBK,GAiDL,OAxCAoC,EAAOU,MAAQ,SAAeC,EAAM/C,GAOlC,OAxOF,SAAmBgD,EAAW1C,GAE5B0C,EAAYA,EAAUJ,KAAOI,EAAY,CAACA,GAE1C,IAGIP,EACA/C,EACAuD,EALAhD,EAAe,GACfyC,EAAIM,EAAUnD,OACd8C,EAAaD,EAejB,IARAD,EAAK,SAAU/C,EAAUC,GACnBA,EAAcE,QAAQI,EAAa2C,KAAKlD,KAE5CiD,GACiBrC,EAAWL,IAIvByC,KACLhD,EAAWsD,EAAUN,IAGrBO,EAAI1D,EAAkBG,IAEpB+C,EAAG/C,EAAUuD,IAKXzD,EAAoBE,GAAYF,EAAoBE,IAAa,IACnEkD,KAAKH,GAkMTS,CAAUH,EAAM,SAAU9C,GAExBF,EAAiBC,EAAMC,KAGlBmC,GAQTA,EAAOe,KAAO,SAAczD,GAC1BD,EAAQC,EAAU,KAOpB0C,EAAOlG,MAAQ,WACboD,EAAgB,GAChBC,EAAoB,GACpBC,EAAsB,IAQxB4C,EAAOgB,UAAY,SAAmB1D,GACpC,OAAOA,KAAYJ,GAKd8C,GA9RHiB,EAAAC,QAAiBlE,05BCKfmE,EAAQ,CAEVC,GAAI,CACAC,KADA,SACKC,GACD,OAAOC,KAAKC,WAAWF,EAAOG,OAAOC,OAEzCC,OAJA,SAIOL,GACH,OAAOC,KAAKK,eAAeN,KAAWO,QAE1CC,OAPA,SAOOR,GACH,OAAOC,KAAKK,eAAeN,KAAWS,SAAWA,OAAOC,MAAMV,IAElEW,OAVA,SAUOX,GACH,OAAOC,KAAKK,eAAeN,KAAWY,QAE1CC,QAbA,SAaQb,GACJ,OAAOC,KAAKK,eAAeN,KAAWc,SAE1CC,SAhBA,SAgBSf,GACL,OAAOC,KAAKK,eAAeN,KAAWgB,UAE1CC,MAnBA,SAmBMjB,GACF,OAAQC,KAAKiB,gBAAgBlB,IAAUmB,MAAMC,QAAQpB,IAEzDqB,QAtBA,SAsBQrB,GACJ,OAAOC,KAAKC,WAAWF,EAAOG,OAAOmB,UAEzCC,SAzBA,SAyBSvB,GACL,OAAOC,KAAKC,WAAWF,EAAOG,OAAOqB,WAEzCC,QA5BA,SA4BQzB,GACJ,OAAOC,KAAKC,WAAWF,EAAOG,OAAOuB,UAEzCC,SA/BA,SA+BS3B,GACL,OAAOC,KAAKK,eAAeN,KAAW4B,MAE1CC,MAlCA,SAkCM7B,GACF,OAAOC,KAAKC,WAAWF,EAAOG,OAAO2B,QAEzCC,IArCA,SAqCI/B,GACA,OAAOC,KAAKC,WAAWF,EAAOG,OAAO6B,eAAiB/B,KAAKC,WAAWF,EAAOG,OAAO8B,SAExFC,MAxCA,SAwCMlC,GACF,OAAOC,KAAKC,WAAWF,EAAOmC,aAAgBlC,KAAKiB,gBAAgBlB,IAAUC,KAAKU,OAAOX,EAAMoC,OAEnGC,IA3CA,SA2CIrC,GACA,OAAQC,KAAKiB,gBAAgBlB,IAAU,oFAAmFvC,KAAKuC,IAEnIkB,gBA9CA,SA8CgBlB,GACZ,OAAOA,MAAAA,GAEXsC,MAjDA,SAiDMtC,GACF,OACIC,KAAKiB,gBAAgBlB,KACnBC,KAAKU,OAAOX,IAAUC,KAAKgB,MAAMjB,IAAUC,KAAKsB,SAASvB,MAAYA,EAAM7D,QAC5E8D,KAAKI,OAAOL,KAAWO,OAAOjF,KAAK0E,GAAO7D,QAGnD+D,WAxDA,SAwDWF,EAAOuC,GACd,OAAOzB,QAAQd,GAASuC,GAAevC,aAAiBuC,IAE5DjC,eA3DA,SA2DeN,GACX,OAAQC,KAAKiB,gBAAgBlB,GAA6B,KAApBA,EAAMuC,cAKpDC,WAnEU,WAoEN,MAAO,CACHC,OAAgCxF,SAASyF,aACzCC,SAAU,qBAAsB1F,SAAS2F,gBAAgBC,QAAU,OAAOpF,KAAK9G,UAAUmM,WACzFC,SAAU,kBAAkBtF,KAAK9G,UAAUqM,UAC3CrI,MAAO,uBAAuB8C,KAAK9G,UAAUqM,YAMrDC,MA9EU,SA8EJZ,GAA4B,IAAvBa,EAAuBC,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,GAAAA,UAAA,GAAR,OACtB,OAAO,IAAIC,QAAQ,SAACC,EAASC,GACzB,IACI,IAAMC,EAAU,IAAIC,eAGpB,KAAM,oBAAqBD,GACvB,OAGJA,EAAQE,iBAAiB,OAAQ,WAC7B,GAAqB,SAAjBP,EACA,IACIG,EAAQK,KAAKC,MAAMJ,EAAQK,eAC7B,MAAO7G,GACLsG,EAAQE,EAAQK,mBAGpBP,EAAQE,EAAQM,YAIxBN,EAAQE,iBAAiB,QAAS,WAC9B,MAAM,IAAIK,MAAMP,EAAQQ,cAG5BR,EAAQtI,KAAK,MAAOoH,GAAK,GAGzBkB,EAAQL,aAAeA,EAEvBK,EAAQS,OACV,MAAOjH,GACLuG,EAAOvG,OAMnBkH,WArHU,SAqHC5B,GACP,OAAO,IAAIe,QAAQ,SAACC,EAASC,GACzB5E,EAAO2D,EAAK,CACR5F,QAAS4G,EACT/I,MAAOgJ,OAMnB9N,WA/HU,SA+HC6M,EAAKhH,GACZ,GAAKwE,EAAMC,GAAGa,OAAO0B,GAArB,CAIA,IACM6B,EAAQrE,EAAMC,GAAGa,OAAOtF,GAGxB8I,EAAS,WAAA,OAAMlH,SAASmH,iBAAT,IAA8B/I,GAAMc,QAgBzD,IAAK+H,IAAUC,IAAU,CAErB,IAAM/K,EAAY6D,SAASS,cAAc,OAQzC,GAPAmC,EAAMwE,aAAajL,GAAW,GAE1B8K,GACA9K,EAAUkL,aAAa,KAAMjJ,GAI7BkJ,EAAQtN,QAAS,CACjB,IAAMuN,EAASrE,OAAOsE,aAAaC,QA/B5B,SA+B6CrJ,GAGpD,GAFsB,OAAXmJ,EAEG,CACV,IAAMG,EAAOjB,KAAKC,MAAMa,GAExB,YADAI,EAAapI,KAAKpD,EAAWuL,EAAKE,UAM1ChF,EACKoD,MAAMZ,GACNyC,KAAK,SAAA3G,GACE0B,EAAMC,GAAGwC,MAAMnE,KAIfoG,EAAQtN,SACRkJ,OAAOsE,aAAaM,QAlDrB,SAmDc1J,EACTqI,KAAKsB,UAAU,CACXH,QAAS1G,KAKrByG,EAAapI,KAAKpD,EAAW+E,MAEhC8G,MAAM,eAtDf,SAASL,EAAaD,GAEdT,GAASC,MAKblE,KAAKiF,UAAYP,EAGjB1H,SAASkI,KAAKC,aAAanF,KAAMhD,SAASkI,KAAKE,WAAW,OAiDlEC,WArMU,SAqMCC,GACP,OAAUA,EAAV,IAAoBC,KAAKC,MAAsB,IAAhBD,KAAKE,WAIxCC,KA1MU,SA0MLC,EAAUvM,GAEX,IAAMwM,EAAUD,EAASzJ,OAASyJ,EAAW,CAACA,GAI9CzE,MAAM2E,KAAKD,GACNE,UACAC,QAAQ,SAACvE,EAASwE,GACf,IAAMC,EAAQD,EAAQ,EAAI5M,EAAQ8M,WAAU,GAAQ9M,EAG9C+M,EAAS3E,EAAQ4E,WACjBC,EAAU7E,EAAQ8E,YAIxBL,EAAMzH,YAAYgD,GAKd6E,EACAF,EAAOhB,aAAac,EAAOI,GAE3BF,EAAO3H,YAAYyH,MAMnCxI,cAzOU,SAyOIzD,EAAMmB,EAAYoL,GAE5B,IAAM/E,EAAUxE,SAASS,cAAczD,GAavC,OAVI4F,EAAMC,GAAGO,OAAOjF,IAChByE,EAAM4G,cAAchF,EAASrG,GAI7ByE,EAAMC,GAAGa,OAAO6F,KAChB/E,EAAQiF,YAAcF,GAInB/E,GAIXkF,YA5PU,SA4PElF,EAASmF,GACjBA,EAAOP,WAAWjB,aAAa3D,EAASmF,EAAOL,cAInDM,cAjQU,SAiQI5M,EAAMmM,EAAQhL,EAAYoL,GAEpCJ,EAAO3H,YAAYoB,EAAMnC,cAAczD,EAAMmB,EAAYoL,KAI7DM,cAvQU,SAuQIrF,GACL5B,EAAMC,GAAG2B,QAAQA,IAAa5B,EAAMC,GAAG2B,QAAQA,EAAQ4E,cAIxDxG,EAAMC,GAAGyB,SAASE,IAAY5B,EAAMC,GAAGmB,MAAMQ,GAC7CN,MAAM2E,KAAKrE,GAASuE,QAAQnG,EAAMiH,eAItCrF,EAAQ4E,WAAWU,YAAYtF,KAInCuF,aArRU,SAqRGvF,GAGT,IAHkB,IACZtF,EAAWsF,EAAQ4D,WAAnBlJ,OAECA,EAAS,GACZsF,EAAQsF,YAAYtF,EAAQwF,WAC5B9K,GAAU,GAKlB+K,eA/RU,SA+RKC,EAAUC,GACrB,OAAKvH,EAAMC,GAAG2B,QAAQ2F,IAAcvH,EAAMC,GAAG2B,QAAQ2F,EAASf,aAAgBxG,EAAMC,GAAG2B,QAAQ0F,IAI/FC,EAASf,WAAWgB,aAAaF,EAAUC,GAEpCD,GALI,MASfV,cA1SU,SA0SIhF,EAASrG,GACdyE,EAAMC,GAAG2B,QAAQA,KAAY5B,EAAMC,GAAGwC,MAAMlH,IAIjDmF,OAAO+G,QAAQlM,GAAY4K,QAAQ,SAAAuB,GAG7B,IAAAC,EAAAC,EAAAF,EAAA,GAFFrQ,EAEEsQ,EAAA,GADFzM,EACEyM,EAAA,GACF/F,EAAQ6C,aAAapN,EAAK6D,MAKlC2M,0BAxTU,SAwTgBC,EAAKC,GAM3B,IAAK/H,EAAMC,GAAGa,OAAOgH,IAAQ9H,EAAMC,GAAGwC,MAAMqF,GACxC,MAAO,GAGX,IAAMvM,EAAa,GACbyM,EAAWD,EA0CjB,OAxCAD,EAAI9Q,MAAM,KAAKmP,QAAQ,SAAA8B,GAEnB,IAAMC,EAAWD,EAAEhJ,OACbkJ,EAAYD,EAASvK,QAAQ,IAAK,IAIlCyK,EAHWF,EAASvK,QAAQ,SAAU,IAGrB3G,MAAM,KACvBK,EAAM+Q,EAAM,GACZlN,EAAQkN,EAAM9L,OAAS,EAAI8L,EAAM,GAAGzK,QAAQ,QAAS,IAAM,GAKjE,OAFcuK,EAASG,OAAO,IAG1B,IAAK,IAEGrI,EAAMC,GAAGO,OAAOwH,IAAahI,EAAMC,GAAGa,OAAOkH,EAASM,SACtDN,EAASM,OAAT,IAAsBH,GAG1B5M,EAAW+M,MAAQH,EACnB,MAEJ,IAAK,IAED5M,EAAWC,GAAK0M,EAASvK,QAAQ,IAAK,IACtC,MAEJ,IAAK,IAEDpC,EAAWlE,GAAO6D,KASvBK,GAIXgN,YAjXU,SAiXE3G,EAASuG,EAAWK,GAC5B,GAAIxI,EAAMC,GAAG2B,QAAQA,GAAU,CAC3B,IAAM6G,EAAW7G,EAAQ8G,UAAUD,SAASN,GAI5C,OAFAvG,EAAQ8G,UAAUF,EAAS,MAAQ,UAAUL,GAErCK,IAAWC,IAAeD,GAAUC,EAGhD,OAAO,MAIXE,SA9XU,SA8XD/G,EAASuG,GACd,OAAOnI,EAAMC,GAAG2B,QAAQA,IAAYA,EAAQ8G,UAAUD,SAASN,IAInE3D,aAnYU,SAmYG5C,EAAS4G,GACbxI,EAAMC,GAAG2B,QAAQA,KAIlB4G,EACA5G,EAAQ6C,aAAa,SAAU,IAE/B7C,EAAQgH,gBAAgB,YAKhCC,QAhZU,SAgZFjH,EAASsG,GACb,IAAMY,EAAY,CAAEjH,QAAAA,SAMpB,IAAMgH,EAAUC,EAAUD,SAAWC,EAAUC,uBAAyBD,EAAUE,oBAAsBF,EAAUG,mBAJlH,WACI,OAAO3H,MAAM2E,KAAK7I,SAASmH,iBAAiB2D,IAAWgB,SAAS9I,OAKpE,OAAOyI,EAAQlM,KAAKiF,EAASsG,IAIjCiB,YA7ZU,SA6ZEjB,GACR,OAAO9H,KAAK2F,SAASxM,UAAUgL,iBAAiB2D,IAIpDkB,WAlaU,SAkaClB,GACP,OAAO9H,KAAK2F,SAASxM,UAAU8P,cAAcnB,IAKjDoB,aAxaU,WAyaN,IAuCI,OAtCAlJ,KAAK2F,SAASrP,SAAWsJ,EAAMoJ,WAAWzM,KAAKyD,KAAMA,KAAKmJ,OAAOlQ,UAAU3C,SAAS8C,SAGpF4G,KAAK2F,SAASrM,QAAU,CACpBhC,KAAMsI,EAAMmJ,YAAYxM,KAAKyD,KAAMA,KAAKmJ,OAAOlQ,UAAUK,QAAQhC,MACjEC,MAAOqI,EAAMoJ,WAAWzM,KAAKyD,KAAMA,KAAKmJ,OAAOlQ,UAAUK,QAAQ/B,OACjEH,QAASwI,EAAMoJ,WAAWzM,KAAKyD,KAAMA,KAAKmJ,OAAOlQ,UAAUK,QAAQlC,SACnEC,OAAQuI,EAAMoJ,WAAWzM,KAAKyD,KAAMA,KAAKmJ,OAAOlQ,UAAUK,QAAQjC,QAClEG,YAAaoI,EAAMoJ,WAAWzM,KAAKyD,KAAMA,KAAKmJ,OAAOlQ,UAAUK,QAAQ9B,aACvEI,KAAMgI,EAAMoJ,WAAWzM,KAAKyD,KAAMA,KAAKmJ,OAAOlQ,UAAUK,QAAQ1B,MAChEkB,IAAK8G,EAAMoJ,WAAWzM,KAAKyD,KAAMA,KAAKmJ,OAAOlQ,UAAUK,QAAQR,KAC/DC,QAAS6G,EAAMoJ,WAAWzM,KAAKyD,KAAMA,KAAKmJ,OAAOlQ,UAAUK,QAAQP,SACnE7B,SAAU0I,EAAMoJ,WAAWzM,KAAKyD,KAAMA,KAAKmJ,OAAOlQ,UAAUK,QAAQpC,UACpEV,SAAUoJ,EAAMoJ,WAAWzM,KAAKyD,KAAMA,KAAKmJ,OAAOlQ,UAAUK,QAAQ9C,UACpEK,WAAY+I,EAAMoJ,WAAWzM,KAAKyD,KAAMA,KAAKmJ,OAAOlQ,UAAUK,QAAQzC,aAI1EmJ,KAAK2F,SAASjM,SAAWkG,EAAMoJ,WAAWzM,KAAKyD,KAAMA,KAAKmJ,OAAOlQ,UAAUS,UAG3EsG,KAAK2F,SAASpM,OAAS,CACnBhD,KAAMqJ,EAAMoJ,WAAWzM,KAAKyD,KAAMA,KAAKmJ,OAAOlQ,UAAUM,OAAOhD,MAC/D3B,OAAQgL,EAAMoJ,WAAWzM,KAAKyD,KAAMA,KAAKmJ,OAAOlQ,UAAUM,OAAO3E,SAIrEoL,KAAK2F,SAASnM,QAAU,CACpBC,OAAQmG,EAAMoJ,WAAWzM,KAAKyD,KAAMA,KAAKmJ,OAAOlQ,UAAUO,QAAQC,QAClE3E,SAAU8K,EAAMoJ,WAAWzM,KAAKyD,KAAMA,KAAKmJ,OAAOlQ,UAAUO,QAAQ1E,UACpE6C,YAAaiI,EAAMoJ,WAAWzM,KAAKyD,KAAMA,KAAKmJ,OAAOlQ,UAAUO,QAAQ7B,cAIvEiI,EAAMC,GAAG2B,QAAQxB,KAAK2F,SAASjM,YAC/BsG,KAAK2F,SAASnM,QAAQ4P,YAAcpJ,KAAK2F,SAASjM,SAASuP,cAAvB,IAAyCjJ,KAAKmJ,OAAOvP,WAAWW,WAGjG,EACT,MAAOF,GAOL,OALA2F,KAAKxL,MAAM6U,KAAK,kEAAmEhP,GAGnF2F,KAAKsJ,sBAAqB,IAEnB,IAKfC,gBA7dU,WA8dN,IAAIpT,EAAU6G,SAASwM,cAQvB,OAHIrT,EAHCA,GAAWA,IAAY6G,SAASkI,KAGvBlI,SAASiM,cAAc,UAFvB,MASlBQ,UA1eU,WA0egC,IAAhCjI,EAAgC0B,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,GAAAA,UAAA,GAAtB,KAAMkF,EAAgBlF,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,IAAAA,UAAA,GACtC,GAAKtD,EAAMC,GAAG2B,QAAQA,GAAtB,CAIA,IAAMkI,EAAY9J,EAAMmJ,YAAYxM,KAAKyD,KAAM,2DACzC2J,EAAQD,EAAU,GAClBE,EAAOF,EAAUA,EAAUxN,OAAS,GAEpC2N,EAAO,SAAAjI,GAET,GAAkB,QAAdA,EAAM3K,KAAmC,IAAlB2K,EAAMkI,QAAjC,CAKA,IAAM3T,EAAUyJ,EAAM2J,kBAElBpT,IAAYyT,GAAShI,EAAMmI,SAIpB5T,IAAYwT,GAAS/H,EAAMmI,WAElCH,EAAKI,QACLpI,EAAMqI,mBALNN,EAAMK,QACNpI,EAAMqI,oBAQV7B,EACAxI,EAAMsK,GAAGlK,KAAK2F,SAASxM,UAAW,UAAW0Q,GAAM,GAEnDjK,EAAMuK,IAAInK,KAAK2F,SAASxM,UAAW,UAAW0Q,GAAM,KAK5DO,eA/gBU,SA+gBKzE,EAAU/D,EAAOyI,GAA2D,IAAjDjC,EAAiDlF,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,IAAAA,UAAA,GAAjCoH,IAAiCpH,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,KAAAA,UAAA,GAAjBqH,EAAiBrH,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,IAAAA,UAAA,GAEvF,IAAItD,EAAMC,GAAGwC,MAAMsD,KAAa/F,EAAMC,GAAGwC,MAAMT,IAAWhC,EAAMC,GAAGiB,SAASuJ,GAK5E,GAAIzK,EAAMC,GAAGyB,SAASqE,IAAa/F,EAAMC,GAAGmB,MAAM2E,GAE9CzE,MAAM2E,KAAKF,GAAUI,QAAQ,SAAAvE,GACrBA,aAAmBgJ,MACnB5K,EAAMwK,eAAe7N,KAAK,KAAMiF,EAASI,EAAOyI,EAAUjC,EAAQkC,EAASC,SAJvF,CAYA,IAAMvR,EAAS4I,EAAMhL,MAAM,KAIvBf,EAAU0U,EAGVjG,EAAQmG,mBACR5U,EAAU,CAENyU,QAAAA,EAEAC,QAAAA,IAKRvR,EAAO+M,QAAQ,SAAA/L,GACX2L,EAASyC,EAAS,mBAAqB,uBAAuBpO,EAAMqQ,EAAUxU,OAKtFqU,GAzjBU,SAyjBP1I,GAAiE,IAAxDxI,EAAwDkK,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,GAAAA,UAAA,GAA/C,GAAImH,EAA2CnH,UAAA,GAAjCoH,IAAiCpH,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,KAAAA,UAAA,GAAjBqH,EAAiBrH,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,IAAAA,UAAA,GAChEtD,EAAMwK,eAAe5I,EAASxI,EAAQqR,GAAU,EAAMC,EAASC,IAInEJ,IA9jBU,SA8jBN3I,GAAiE,IAAxDxI,EAAwDkK,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,GAAAA,UAAA,GAA/C,GAAImH,EAA2CnH,UAAA,GAAjCoH,IAAiCpH,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,KAAAA,UAAA,GAAjBqH,EAAiBrH,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,IAAAA,UAAA,GACjEtD,EAAMwK,eAAe5I,EAASxI,EAAQqR,GAAU,EAAOC,EAASC,IAIpEG,cAnkBU,SAmkBIlJ,GAAkD,IAAzCxH,EAAyCkJ,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,GAAAA,UAAA,GAAlC,GAAIyH,EAA8BzH,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,IAAAA,UAAA,GAAb0H,EAAa1H,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,GAAAA,UAAA,GAAJ,GAExD,GAAKtD,EAAMC,GAAG2B,QAAQA,KAAY5B,EAAMC,GAAGwC,MAAMrI,GAAjD,CAKA,IAAM4H,EAAQ,IAAIiJ,YAAY7Q,EAAM,CAChC2Q,QAAAA,EACAC,OAAQtK,OAAOwK,OAAO,GAAIF,EAAQ,CAC9B9K,KAAMF,EAAMC,GAAGC,KAAKE,MAAQA,KAAO,SAK3CwB,EAAQkJ,cAAc9I,KAK1BmJ,YAvlBU,SAulBEvJ,EAASzB,GAEjB,GAAIH,EAAMC,GAAGmB,MAAMQ,IAAY5B,EAAMC,GAAGyB,SAASE,GAC7CN,MAAM2E,KAAKrE,GAASuE,QAAQ,SAAAY,GAAA,OAAU/G,EAAMmL,YAAYpE,EAAQ5G,UAKpE,GAAKH,EAAMC,GAAG2B,QAAQA,GAAtB,CAKA,IAAMwJ,EAAmD,SAAzCxJ,EAAQyJ,aAAa,gBAC/BC,EAAQtL,EAAMC,GAAGe,QAAQb,GAASA,GAASiL,EAGjDxJ,EAAQ6C,aAAa,eAAgB6G,KAIzCC,cA5mBU,SA4mBIC,EAASC,GACnB,OAAgB,IAAZD,GAAyB,IAARC,GAAa7K,OAAOC,MAAM2K,IAAY5K,OAAOC,MAAM4K,GAC7D,GAGHD,EAAUC,EAAM,KAAKC,QAAQ,IAIzCC,SArnBU,SAqnBDzQ,GACL,OAAO0Q,SAAU1Q,EAAQ,GAAK,GAAM,GAAI,KAE5C2Q,WAxnBU,SAwnBC3Q,GACP,OAAO0Q,SAAU1Q,EAAQ,GAAM,GAAI,KAEvC4Q,WA3nBU,SA2nBC5Q,GACP,OAAO0Q,SAAS1Q,EAAQ,GAAI,KAIhC6Q,WAhoBU,WAgoBmD,IAAlDC,EAAkD1I,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,GAAAA,UAAA,GAA3C,EAAG2I,EAAwC3I,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,IAAAA,UAAA,GAAlB4I,EAAkB5I,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,IAAAA,UAAA,GAEzD,IAAKtD,EAAMC,GAAGU,OAAOqL,GACjB,OAAO5L,KAAK2L,WAAW,KAAME,EAAcC,GAI/C,IAAMC,EAAS,SAAAjR,GAAA,OAAS,IAAIA,GAAQkR,OAAO,IAGvCC,EAAQjM,KAAKuL,SAASK,GACpBM,EAAOlM,KAAKyL,WAAWG,GACvBO,EAAOnM,KAAK0L,WAAWE,GAU7B,OAPIC,GAAgBI,EAAQ,EACxBA,GAAA,IAEAA,EAAQ,IAIFH,EAAW,IAAM,IAAKG,EAAQF,EAAOG,GAA/C,IAAwDH,EAAOI,IAInEC,WA1pBU,WA0pBsC,IAArCrM,EAAqCmD,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,GAAAA,UAAA,GAA7B,GAAImJ,EAAyBnJ,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,GAAAA,UAAA,GAAlB,GAAI3F,EAAc2F,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,GAAAA,UAAA,GAAJ,GACxC,OAAOnD,EAAMxC,QAAQ,IAAI+O,OAAOD,EAAKE,WAAWhP,QAAQ,6BAA6B,QAAS,KAAMA,EAAQgP,aAIhHC,YA/pBU,WAgqBN,OADoBtJ,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,GAAAA,UAAA,GAAJ,IACHqJ,WAAWhP,QAAQ,SAAU,SAAAgJ,GAAA,OAAQA,EAAK0B,OAAO,GAAGwE,cAAgBlG,EAAKmG,OAAO,GAAGC,iBAIpGC,aApqBU,WAoqBe,IACjBlM,GADiBwC,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,GAAAA,UAAA,GAAJ,IACEqJ,WAYnB,OATA7L,EAASd,EAAMwM,WAAW1L,EAAQ,IAAK,KAGvCA,EAASd,EAAMwM,WAAW1L,EAAQ,IAAK,KAGvCA,EAASd,EAAM4M,YAAY9L,GAGpBd,EAAMwM,WAAW1L,EAAQ,IAAK,KAIzCmM,YArrBU,WAqrBc,IAChBnM,GADgBwC,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,GAAAA,UAAA,GAAJ,IACGqJ,WAMnB,OAHA7L,EAASd,EAAMgN,aAAalM,IAGduH,OAAO,GAAG0E,cAAgBjM,EAAOsL,MAAM,IAIzDc,OAhsBU,WAgsBsB,IAAA,IAAzBnG,EAAyBzD,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,GAAAA,UAAA,GAAhB,GAAgB6J,EAAA7J,UAAAhH,OAAT8Q,EAAS9L,MAAA6L,EAAA,EAAAA,EAAA,EAAA,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAATD,EAASC,EAAA,GAAA/J,UAAA+J,GAC5B,IAAKD,EAAQ9Q,OACT,OAAOyK,EAGX,IAAMuG,EAASF,EAAQG,QAEvB,OAAKvN,EAAMC,GAAGO,OAAO8M,IAIrB5M,OAAOjF,KAAK6R,GAAQnH,QAAQ,SAAA9O,GACpB2I,EAAMC,GAAGO,OAAO8M,EAAOjW,KAClBqJ,OAAOjF,KAAKsL,GAAQmC,SAAS7R,IAC9BqJ,OAAOwK,OAAOnE,EAAdyG,EAAA,GAAyBnW,EAAM,KAGnC2I,EAAMkN,OAAOnG,EAAO1P,GAAMiW,EAAOjW,KAEjCqJ,OAAOwK,OAAOnE,EAAdyG,EAAA,GAAyBnW,EAAMiW,EAAOjW,OAIvC2I,EAAMkN,OAANO,MAAAzN,EAAA,CAAa+G,GAAb2G,6HAAAC,CAAwBP,MAfpBrG,GAmBf6G,OA3tBU,SA2tBHxM,GACH,OAAKpB,EAAMC,GAAGmB,MAAMA,GAIbA,EAAMyM,OAAO,SAACC,EAAM1H,GAAP,OAAiBhF,EAAM2M,QAAQD,KAAU1H,IAHlDhF,GAOf4M,QApuBU,SAouBF5M,EAAOlG,GACX,OAAK8E,EAAMC,GAAGmB,MAAMA,IAAWA,EAAM9E,OAI9B8E,EAAM6M,OAAO,SAACC,EAAMC,GAAP,OAAgBxI,KAAKyI,IAAID,EAAOjT,GAASyK,KAAKyI,IAAIF,EAAOhT,GAASiT,EAAOD,IAHlF,MAOfG,iBA7uBU,SA6uBO7L,GAEb,MAAI,wDAAwD5E,KAAK4E,GACtDtO,EAAUE,QAIjB,uDAAuDwJ,KAAK4E,GACrDtO,EAAUG,MAGd,MAIXia,eA5vBU,SA4vBK9L,GACX,GAAIxC,EAAMC,GAAGwC,MAAMD,GACf,OAAO,KAIX,OAAOA,EAAI+L,MADG,gEACY7B,OAAO8B,GAAKhM,GAI1CiM,aAtwBU,SAswBGjM,GACT,GAAIxC,EAAMC,GAAGwC,MAAMD,GACf,OAAO,KAGX,GAAIxC,EAAMC,GAAGU,OAAOC,OAAO4B,IACvB,OAAOA,EAIX,OAAOA,EAAI+L,MADG,mCACY7B,OAAO8B,GAAKhM,GAI1CkM,SApxBU,SAoxBDlM,GACL,IAAMmM,EAASvR,SAASS,cAAc,KAEtC,OADA8Q,EAAO5Q,KAAOyE,EACPmM,GAIXC,aA3xBU,SA2xBGzO,GACT,IAAI0O,EAAS1O,GAGTA,EAAM2O,WAAW,YAAc3O,EAAM2O,WAAW,eAC7CD,EAAWzO,KAAKsO,SAASvO,GAAzB0O,QAGP,OAAIzO,KAAKH,GAAGwC,MAAMoM,GACP,KAGIA,EAAOzC,MAAMyC,EAAOd,QAAQ,KAAO,GAAG/W,MAAM,KAE7CiX,OAAO,SAACc,EAAQC,GAAS,IAAAC,EAI/BD,EAAKhY,MAAM,KAJoBkY,EAAAtH,EAAAqH,EAAA,GAE/B5X,EAF+B6X,EAAA,GAG/BC,EAH+BD,EAAA,GAMnC,OAAOxO,OAAOwK,OAAO6D,EAAdvB,EAAA,GAAyBnW,EAAM+X,mBAAmBD,MAC1D,KAIPE,eApzBU,SAozBKlP,GACX,OAAKH,EAAMC,GAAGO,OAAOL,GAIdO,OAAOjF,KAAK0E,GACdmP,IAAI,SAAAjY,GAAA,OAAUkY,mBAAmBlY,GAA7B,IAAqCkY,mBAAmBpP,EAAM9I,MAClEmY,KAAK,KALC,IASfC,UA/zBU,SA+zBAnC,GACN,IAAMoC,EAAWtS,SAASuS,yBACpB/N,EAAUxE,SAASS,cAAc,OAGvC,OAFA6R,EAAS9Q,YAAYgD,GACrBA,EAAQyD,UAAYiI,EACboC,EAASE,WAAWC,WAI/BC,eAx0BU,SAw0BKC,EAAOC,GAClB,IACM1a,EADW,SAAX2a,EAAYC,EAAGC,GAAJ,OAAiB,IAANA,EAAUD,EAAID,EAASE,EAAGD,EAAIC,GAC5CF,CAASF,EAAOC,GAC9B,OAAUD,EAAQza,EAAlB,IAA2B0a,EAAS1a,GAIxC8a,yBACI,IAAMxO,EAAUxE,SAASS,cAAc,QAEjCzE,EAAS,CACXiX,iBAAkB,sBAClBC,cAAe,gBACfC,YAAa,gCACbC,WAAY,iBAGVpW,EAAOsG,OAAOjF,KAAKrC,GAAQqT,KAAK,SAAAzK,GAAA,YAAkC/D,IAAzB2D,EAAQoB,MAAMhB,KAE7D,QAAOhC,EAAMC,GAAGa,OAAO1G,IAAQhB,EAAOgB,IAI1CqW,QA/1BU,SA+1BF7O,GACJ8O,WAAW,WACP1Q,EAAMwE,aAAa5C,GAAS,GAC5BA,EAAQ+O,aACR3Q,EAAMwE,aAAa5C,GAAS,IAC7B,KFt2BL8C,EAAU,CAEZnQ,MAAO,gBAAiB6I,SAASS,cAAc,SAC/CrJ,MAAO,gBAAiB4I,SAASS,cAAc,SAI/C+S,MAPY,SAONxW,EAAMC,EAAUwW,GAClB,IAAI9X,GAAM,EACN+X,GAAK,EACHC,EAAU/Q,EAAM2C,aAChBqO,EAAgBD,EAAQ7N,UAAY2N,GAAenM,EAAQmM,YAEjE,OAAWxW,EAAX,IAAuBD,GACnB,IAAK,cAED0W,GADA/X,EAAM2L,EAAQlQ,QACFkQ,EAAQuM,cAAgBF,EAAQ7N,UAAY8N,GACxD,MAEJ,IAAK,cAEDF,GADA/X,EAAM2L,EAAQnQ,QACFmQ,EAAQuM,WACpB,MAEJ,IAAK,gBACL,IAAK,cACDlY,GAAM,EACN+X,EAAKpM,EAAQuM,cAAgBF,EAAQ7N,UAAY8N,GACjD,MAEJ,QAEIF,GADA/X,EAAM2L,EAAQnQ,OAASmQ,EAAQlQ,QACnBkQ,EAAQuM,WAG5B,MAAO,CACHlY,IAAAA,EACA+X,GAAAA,IAMR5X,KACoB8G,EAAM2C,aACNO,UAAYlD,EAAMC,GAAGiB,SAASlB,EAAMnC,cAAc,SAASqT,2BAK/E/X,QAAS6G,EAAMC,GAAGiB,SAASZ,OAAO6Q,uCAIlCN,YAAa,gBAAiBzT,SAASS,cAAc,SAKrDuT,KA3DY,SA2DPhX,GAAM,IACCiX,EAAUjR,KAAViR,MAER,IAEI,IAAKjR,KAAKkR,UAAYtR,EAAMC,GAAGiB,SAASmQ,EAAME,aAC1C,OAAO,EAIX,GAAInX,EAAK8O,SAAS,WACd,OAAOmI,EAAME,YAAYnX,GAAMuD,QAAQ,KAAM,IAIjD,GAAIyC,KAAKoR,QACL,OAAQpX,GACJ,IAAK,aACD,OAAOiX,EAAME,YAAY,oCAAoC5T,QAAQ,KAAM,IAE/E,IAAK,YACD,OAAO0T,EAAME,YAAY,8CAA8C5T,QAAQ,KAAM,IAEzF,IAAK,YACD,OAAO0T,EAAME,YAAY,8BAA8B5T,QAAQ,KAAM,IAEzE,QACI,OAAO,OAEZ,GAAIyC,KAAKqR,QACZ,OAAQrX,GACJ,IAAK,aACD,OAAOiX,EAAME,YAAY,eAAe5T,QAAQ,KAAM,IAE1D,IAAK,YACD,OAAO0T,EAAME,YAAY,8BAA8B5T,QAAQ,KAAM,IAEzE,IAAK,YACD,OAAO0T,EAAME,YAAY,yBAAyB5T,QAAQ,KAAM,IAEpE,QACI,OAAO,GAGrB,MAAOT,GACL,OAAO,EAIX,OAAO,GAIXwU,WAAY,eAAgBtU,SAASS,cAAc,SAKnDgN,iBAAmB,WAEf,IAAIxP,GAAY,EAChB,IACI,IAAMpF,EAAUyK,OAAO8M,eAAe,GAAI,UAAW,CACjDmE,IADiD,WAG7C,OADAtW,GAAY,EACL,QAGfiF,OAAOsD,iBAAiB,OAAQ,KAAM3N,GACxC,MAAOiH,IAIT,OAAO7B,EAfQ,GAmBnB4V,YACUrV,EAAQwB,SAASS,cAAc,SACrCjC,EAAMxB,KAAO,QACS,UAAfwB,EAAMxB,MAKjBwX,MAAO,iBAAkBxU,SAAS2F,gBAGlC8O,aAA0C,IAA7B7R,EAAMoQ,mBAInB0B,cAAe,eAAgBxR,QAAUA,OAAOyR,WAAW,4BAA4BlJ,SG1JrFmJ,EAAO,aAEQC,EAAAA,WACjB,SAAAA,IAA6B,IAAjBvd,EAAiB4O,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,IAAAA,UAAA,GAAA4O,EAAA9R,KAAA6R,GACzB7R,KAAK1L,QAAU4L,OAAO6R,SAAWzd,EAE7B0L,KAAK1L,SACL0L,KAAKgS,IAAI,2DAMb,OAAOhS,KAAK1L,QAAUyM,SAAS2H,UAAUuJ,KAAK1V,KAAKwV,QAAQC,IAAKD,SAAWH,+BAI3E,OAAO5R,KAAK1L,QAAUyM,SAAS2H,UAAUuJ,KAAK1V,KAAKwV,QAAQ1I,KAAM0I,SAAWH,gCAI5E,OAAO5R,KAAK1L,QAAUyM,SAAS2H,UAAUuJ,KAAK1V,KAAKwV,QAAQ1X,MAAO0X,SAAWH,QAnBhEC,GCCflB,EAAU/Q,EAAM2C,aAEtB,SAAS2P,IACL,GAAKlS,KAAK1L,QAAV,CAKA,IAAM6d,EAASnS,KAAKoS,OAAOzM,SAASrM,QAAQzC,WACxC+I,EAAMC,GAAG2B,QAAQ2Q,IACjBvS,EAAMmL,YAAYoH,EAAQnS,KAAKjK,QAInC6J,EAAM8K,cAAc1K,KAAK2G,OAAQ3G,KAAKjK,OAAS,kBAAoB,kBAAkB,GAGhF4a,EAAQjW,OACTkF,EAAM6J,UAAUlN,KAAKyD,KAAKoS,OAAQpS,KAAK2G,OAAQ3G,KAAKjK,SAI5D,SAASsc,IAA+B,IAAhBjK,EAAgBlF,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,IAAAA,UAAA,GAEhCkF,EACApI,KAAKsS,eAAiB,CAClBjU,EAAG6B,OAAOqS,SAAW,EACrBC,EAAGtS,OAAOuS,SAAW,GAGzBvS,OAAOwS,SAAS1S,KAAKsS,eAAejU,EAAG2B,KAAKsS,eAAeE,GAI/DxV,SAASkI,KAAKtC,MAAM+P,SAAWvK,EAAS,SAAW,GAGnDxI,EAAMuI,YAAYnI,KAAK2G,OAAQ3G,KAAKoS,OAAOjJ,OAAOvP,WAAW/C,WAAWC,SAAUsR,GAGlF8J,EAAS3V,KAAKyD,UAGZ4S,EAAAA,WACF,SAAAA,EAAYR,GAAQ,IAAAS,EAAA7S,KAAA8R,EAAA9R,KAAA4S,GAEhB5S,KAAKoS,OAASA,EAGdpS,KAAKsF,OAASsN,EAAWtN,OACzBtF,KAAK8S,KAAOF,EAAWE,KAGvB9S,KAAKsS,eAAiB,CAAEjU,EAAG,EAAGmU,EAAG,GAIjC5S,EAAMsK,GAAGlN,SAA0B,OAAhBgD,KAAKsF,OAAkB,qBAA0BtF,KAAKsF,OAAtD,mBAAgF,WAE/F4M,EAAS3V,KAAKsW,KAIlBjT,EAAMsK,GAAGlK,KAAKoS,OAAOzM,SAASxM,UAAW,WAAY,SAAAyI,GAE7CiR,EAAKT,OAAOzM,SAASrP,SAAS+R,SAASzG,EAAM+E,SAIjDkM,EAAKzK,WAITpI,KAAK+S,oDAwED/S,KAAK1L,QACL0L,KAAKoS,OAAO5d,MAAMwd,KAAOY,EAAWI,OAAS,SAAW,YAAxD,uBAEAhT,KAAKoS,OAAO5d,MAAMwd,IAAI,kDAI1BpS,EAAMuI,YAAYnI,KAAKoS,OAAOzM,SAASxM,UAAW6G,KAAKoS,OAAOjJ,OAAOvP,WAAW/C,WAAWvC,QAAS0L,KAAK1L,yCAKpG0L,KAAK1L,UAKNqc,EAAQjW,OAASsF,KAAKoS,OAAOjJ,OAAOtS,WAAWE,UAC3CiJ,KAAKoS,OAAOjY,SACZ6F,KAAK2G,OAAOsM,wBAERL,EAAWI,OAEXhT,KAAKsF,OAEL1F,EAAMC,GAAGwC,MAAMrC,KAAKsF,SAC5BtF,KAAK2G,OAAU3G,KAAKsF,OAApB,UAAoCtF,KAAK8S,QAFzC9S,KAAK2G,OAAOuM,oBAFZb,EAAe9V,KAAKyD,MAAM,mCAU9B,GAAKA,KAAK1L,QAKV,GAAIqc,EAAQjW,OAASsF,KAAKoS,OAAOjJ,OAAOtS,WAAWE,UAC/CiJ,KAAK2G,OAAOwM,uBACZnT,KAAKoS,OAAO9a,YACT,GAAKsb,EAAWI,OAEhB,GAAKhT,KAAKsF,QAEV,IAAK1F,EAAMC,GAAGwC,MAAMrC,KAAKsF,QAAS,CACrC,IAAM8N,EAAyB,QAAhBpT,KAAKsF,OAAmB,SAAW,OAClDtI,SAAAA,GAAYgD,KAAKsF,OAAS8N,EAASpT,KAAK8S,cAHvC9V,SAASqW,kBAAoBrW,SAAS/E,gBAAgBsE,KAAKS,eAF5DqV,EAAe9V,KAAKyD,MAAM,oCAWzBA,KAAKjK,OAGNiK,KAAKsT,OAFLtT,KAAKuT,wCApFT,OACKX,EAAWI,QAAUhT,KAAKoS,OAAOjJ,OAAOtS,WAAWC,WACpDkJ,KAAKoS,OAAOjJ,OAAOtS,WAAWvC,SAC9B0L,KAAKoS,OAAOnX,UAAUyV,IACtB1Q,KAAKoS,OAAOhB,uCAMhB,QAAKpR,KAAK1L,UAKLse,EAAWI,QAIChT,KAAKsF,OAAsCtI,SAAAA,GAAYgD,KAAKsF,OAAStF,KAAK8S,KAA/B,WAA7B9V,SAASwW,qBAErBxT,KAAK2G,OALb/G,EAAM2I,SAASvI,KAAK2G,OAAQ3G,KAAKoS,OAAOjJ,OAAOvP,WAAW/C,WAAWC,0CAUhF,OAAO6Z,EAAQjW,OAASsF,KAAKoS,OAAOjJ,OAAOtS,WAAWE,UAAYiJ,KAAKoS,OAAOnB,MAAQjR,KAAKoS,OAAOzM,SAASxM,2CA9D3G,SAAU6D,SAASyW,mBAAqBzW,SAAS0W,yBAA2B1W,SAAS2W,sBAAwB3W,SAAS4W,oDAMtH,GAAIhU,EAAMC,GAAGiB,SAAS9D,SAAS/E,gBAC3B,MAAO,GAIX,IAAI6C,EAAQ,GAgBZ,MAfiB,CACb,SACA,MACA,MAGK+Y,KAAK,SAAAC,GACV,SAAIlU,EAAMC,GAAGiB,SAAS9D,SAAY8W,EAAZ,qBAAqClU,EAAMC,GAAGiB,SAAS9D,SAAY8W,EAAZ,wBACzEhZ,EAAQgZ,GACD,KAMRhZ,+BAIP,MAAuB,QAAhBkF,KAAKsF,OAAmB,aAAe,mBAlEhDsN,GC5CAzb,EAAO,WACkB,IAAvBF,EAAuBiM,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,GAAAA,UAAA,GAAjB,GAAIiG,EAAajG,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,GAAAA,UAAA,GAAJ,GACnB,GAAItD,EAAMC,GAAGwC,MAAMpL,IAAQ2I,EAAMC,GAAGwC,MAAM8G,KAAY7I,OAAOjF,KAAK8N,EAAOhS,MAAM2R,SAAS7R,GACpF,MAAO,GAGX,IAAIyJ,EAASyI,EAAOhS,KAAKF,GAEnBsG,EAAU,CACZwW,aAAc5K,EAAOxU,SACrBqf,UAAW7K,EAAO5U,OAUtB,OAPA+L,OAAO+G,QAAQ9J,GAASwI,QAAQ,SAAAuB,GAG1B,IAAAC,EAAAC,EAAAF,EAAA,GAFFrQ,EAEEsQ,EAAA,GADFzM,EACEyM,EAAA,GACF7G,EAASd,EAAMwM,WAAW1L,EAAQzJ,EAAK6D,KAGpC4F,GChBTlK,EAAW,CAEbyd,MAFa,WAIT,GAAKjU,KAAK/E,UAAUyV,GAApB,CAKA,IAAMwD,EAASlU,KAAKhJ,QAAQua,IAAI,YAWhC,GATK3R,EAAMC,GAAGwC,MAAM6R,KAChBlU,KAAKxJ,SAASC,SAAWyd,GAGzBtU,EAAMC,GAAGwC,MAAMrC,KAAKxJ,SAASC,YAC7BuJ,KAAKxJ,SAASC,SAAWuJ,KAAKmJ,OAAO3S,SAASC,SAASkW,gBAItD/M,EAAMC,GAAGe,QAAQZ,KAAKxJ,SAAST,QAAS,CACzC,IAAMA,EAASiK,KAAKhJ,QAAQua,IAAI,YAE5B3R,EAAMC,GAAGe,QAAQ7K,GACjBiK,KAAKxJ,SAAST,OAASA,EAEvBiK,KAAKxJ,SAAST,OAASiK,KAAKmJ,OAAO3S,SAAST,OAKpD,IAAKiK,KAAKoR,SAAWpR,KAAKmU,WAAcnU,KAAKkR,UAAY5M,EAAQgN,WAEzD1R,EAAMC,GAAGmB,MAAMhB,KAAKmJ,OAAO7S,WAAa0J,KAAKmJ,OAAO7S,SAASwS,SAAS,aAAe9I,KAAKmJ,OAAOjS,SAAS4R,SAAS,aACnHxS,EAAS8d,gBAAgB7X,KAAKyD,UAHtC,CAUKJ,EAAMC,GAAG2B,QAAQxB,KAAK2F,SAASnP,YAChCwJ,KAAK2F,SAASnP,SAAWoJ,EAAMnC,cAAc,MAAOmC,EAAM6H,0BAA0BzH,KAAKmJ,OAAOlQ,UAAUzC,WAE1GoJ,EAAM8G,YAAY1G,KAAK2F,SAASnP,SAAUwJ,KAAK2F,SAASvM,UAI5DwG,EAAMuI,YAAYnI,KAAK2F,SAASxM,UAAW6G,KAAKmJ,OAAOvP,WAAWpD,SAASlC,SAAUsL,EAAMC,GAAGwC,MAAM7L,EAAS6d,UAAU9X,KAAKyD,QAG5H,IAAMsU,EAAS9d,EAAS6d,UAAU9X,KAAKyD,MAGvC,IAAIJ,EAAMC,GAAGwC,MAAMiS,GAAnB,CASA,GAJgB1U,EAAM2C,aAIVC,MAAQtC,OAAOqU,IAAK,CAC5B,IAAM5O,EAAW3F,KAAKiR,MAAM9M,iBAAiB,SAE7CjD,MAAM2E,KAAKF,GAAUI,QAAQ,SAAA9D,GACzB,IAAMrE,EAAMqE,EAAMgJ,aAAa,OACzBtN,EAAOiC,EAAM0O,SAAS1Q,GAExBD,EAAK6W,WAAatU,OAAOuU,SAAS9W,KAAK6W,UAAY,CACnD,QACA,UACF1L,SAASnL,EAAK+W,WACZ9U,EACKoD,MAAMpF,EAAK,QACXiH,KAAK,SAAA8P,GACF1S,EAAMoC,aAAa,MAAOnE,OAAOqU,IAAIK,gBAAgBD,MAExD3P,MAAM,WACHpF,EAAMiH,cAAc5E,OAOxCzL,EAASqe,YAAYtY,KAAKyD,MAG1BxJ,EAASse,KAAKvY,KAAKyD,MAGfJ,EAAMC,GAAGmB,MAAMhB,KAAKmJ,OAAO7S,WAAa0J,KAAKmJ,OAAO7S,SAASwS,SAAS,aAAe9I,KAAKmJ,OAAOjS,SAAS4R,SAAS,aACnHxS,EAAS8d,gBAAgB7X,KAAKyD,UAKtC6U,YAnGa,WAmGC,IAAAhC,EAAA7S,KAEV,GAAIA,KAAKkR,SAAWlR,KAAKoR,QAAS,CAC9B5a,EAAS6d,UAAU9X,KAAKyD,MAAM+F,QAAQ,SAAA9D,GAElCrC,EAAMsK,GAAGjI,EAAO,YAAa,SAAAL,GAAA,OAASpL,EAASue,OAAOxY,KAAKsW,EAAMjR,KAIjEK,EAAM+S,KAAO,WAIjB,IAAMC,EAAeze,EAAS0e,gBAAgB3Y,KAAKyD,MAG/CJ,EAAMC,GAAGoC,MAAMgT,IAEX/T,MAAM2E,KAAKoP,EAAaE,YAAc,IAAIjZ,QAC1C1F,EAASue,OAAOxY,KAAKyD,KAAMiV,QAG5BjV,KAAKoV,SAAWpV,KAAKxJ,SAAST,QACrCiK,KAAKnG,MAAMwb,gBAAgBrV,KAAKvJ,WAKxC4d,UA/Ha,WAiIT,OAAIzU,EAAMC,GAAGoB,gBAAgBjB,KAAKiR,OACvB,GAIJ/P,MAAM2E,KAAK7F,KAAKiR,MAAMK,YAAc,IAAI7D,OAAO,SAAAxL,GAAA,MAAS,CAC3D,WACA,aACF6G,SAAS7G,EAAME,SAIrB+S,gBA7Ia,WA6IK,IAAAI,EAAAtV,KACRsU,EAAS9d,EAAS6d,UAAU9X,KAAKyD,MAEvC,IAAKsU,EAAOpY,OACR,OAAO,KAIX,IAAI+F,EAAQqS,EAAOjI,KAAK,SAAApK,GAAA,OAASA,EAAMxL,SAASkW,gBAAkB2I,EAAK7e,YAGlEwL,IACDA,EAAQrC,EAAMoJ,WAAWzM,KAAKyD,KAAM,mBAInCiC,KACAA,EADOuF,EACE8M,EADF,GAAA,IAIZ,OAAOrS,GAIXsT,SArKa,SAqKJtT,GACL,IAAIgT,EAAehT,EAMnB,OAJKrC,EAAMC,GAAGoC,MAAMgT,IAAiB3Q,EAAQgN,YAActR,KAAKxJ,SAAST,SACrEkf,EAAeze,EAAS0e,gBAAgB3Y,KAAKyD,OAG7CJ,EAAMC,GAAGoC,MAAMgT,GACVrV,EAAMC,GAAGwC,MAAM4S,EAAaO,OAI5B5V,EAAMC,GAAGwC,MAAM4S,EAAaxe,UAI1BU,EAAS,UAAW6I,KAAKmJ,QAHrBlH,EAAMxL,SAASgW,cAJfwI,EAAaO,MAUrBre,EAAS,WAAY6I,KAAKmJ,SAIrC4L,OA5La,SA4LNhV,GAEH,IAAMkC,EAAQrC,EAAMC,GAAG+B,MAAM7B,GAASA,EAAM4G,OAAS5G,EAC7CoV,EAAelT,EAAfkT,WACFpf,EAASof,EAAWjZ,QAAUiZ,EAAW,GAI3ClT,IAHiBzL,EAAS0e,gBAAgB3Y,KAAKyD,QAQ/CJ,EAAMC,GAAGiC,IAAI/L,GACbS,EAASif,QAAQlZ,KAAKyD,KAAMjK,EAAO2f,gBAEnClf,EAASif,QAAQlZ,KAAKyD,KAAM,MAGhCJ,EAAM8K,cAAcnO,KAAKyD,KAAMA,KAAKiR,MAAO,eAI/CwE,QAnNa,SAmNL1V,GAEJ,GAAKC,KAAK/E,UAAUyV,GAIpB,GAAI9Q,EAAMC,GAAG2B,QAAQxB,KAAK2F,SAASnP,UAAW,CAC1C,IAAMoO,EAAUhF,EAAMnC,cAAc,QAGpCmC,EAAMmH,aAAa/G,KAAK2F,SAASnP,UAGjC,IAAMmf,EAAW/V,EAAMC,GAAGoB,gBAAgBlB,GAAiB,GAARA,EAG/CH,EAAMC,GAAGa,OAAOiV,GAChB/Q,EAAQ6B,YAAckP,EAAQ9W,OAE9B+F,EAAQpG,YAAYmX,GAIxB3V,KAAK2F,SAASnP,SAASgI,YAAYoG,QAEnC5E,KAAKxL,MAAM6U,KAAK,qCAKxByL,KAjPa,WAmPT,IAAI/e,EAASiK,KAAKhJ,QAAQua,IAAI,YAGzB3R,EAAMC,GAAGe,QAAQ7K,GAGlBiK,KAAKxJ,SAAST,OAASA,EAFpBA,EAAWiK,KAAKmJ,OAAO3S,SAAvBT,OAKHA,IACA6J,EAAMuI,YAAYnI,KAAK2F,SAASxM,UAAW6G,KAAKmJ,OAAOvP,WAAWpD,SAAST,QAAQ,GACnF6J,EAAMmL,YAAY/K,KAAK2F,SAASrM,QAAQ9C,UAAU,MC/PxDka,EAAK,CACPkF,aADO,WAEHhW,EAAMuI,YAAYnI,KAAK2F,SAASxM,UAAW6G,KAAKmJ,OAAOlQ,UAAUE,UAAUoE,QAAQ,IAAK,KAAK,GAC7FqC,EAAMuI,YAAYnI,KAAK2F,SAASxM,UAAW6G,KAAKmJ,OAAOvP,WAAWgB,YAAaoF,KAAK/E,UAAUyV,KAIlGpH,qBAPO,WAO8BpG,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,IAAAA,UAAA,IACnBlD,KAAKkR,QACflR,KAAKiR,MAAM5M,aAAa,WAAY,IAEpCrE,KAAKiR,MAAMzI,gBAAgB,aAKnCqN,MAhBO,WAgBC,IAAAhD,EAAA7S,KAMJ,GAHAA,KAAKnH,UAAUoY,SAGVjR,KAAK/E,UAAUyV,GAOhB,OANA1Q,KAAKxL,MAAM6U,KAAX,0BAA0CrJ,KAAK/F,SAA/C,IAA2D+F,KAAKhG,WAGhE0W,EAAGpH,qBAAqB/M,KAAKyD,MAAM,GAOlCJ,EAAMC,GAAG2B,QAAQxB,KAAK2F,SAASrP,YAEhCA,EAASwf,OAAOvZ,KAAKyD,MAGrBA,KAAKnH,UAAUvC,YAIdsJ,EAAMC,GAAG2B,QAAQxB,KAAK2F,SAASrP,YAKpCoa,EAAGpH,qBAAqB/M,KAAKyD,MAG7BxJ,EAASyd,MAAM1X,KAAKyD,MAGpBA,KAAKpL,OAAS,KAGdoL,KAAKnL,MAAQ,KAGbmL,KAAKhK,MAAQ,KAGbgK,KAAKlK,KAAO,KAGZkK,KAAKrK,QAAU,KAGf+a,EAAGqF,aAAaxZ,KAAKyD,MAGrB0Q,EAAGsF,WAAWzZ,KAAKyD,MAGnB0Q,EAAGuF,aAAa1Z,KAAKyD,MAGrBA,KAAKb,OAAQ,EAGbmR,WAAW,WACP1Q,EAAM8K,cAAcnO,KAAKsW,EAAMA,EAAK5B,MAAO,UAC5C,GAGHP,EAAGwF,SAAS3Z,KAAKyD,QAIrBkW,SAzFO,WA2FH,IAAIV,EAAQre,EAAS,OAAQ6I,KAAKmJ,QAmBlC,GAhBIvJ,EAAMC,GAAGa,OAAOV,KAAKmJ,OAAO5U,SAAWqL,EAAMC,GAAGwC,MAAMrC,KAAKmJ,OAAO5U,SAClEihB,GAAAA,KAAcxV,KAAKmJ,OAAO5U,MAG1ByL,KAAK2F,SAASxM,UAAUkL,aAAa,aAAcrE,KAAKmJ,OAAO5U,QAI/DqL,EAAMC,GAAGyB,SAAStB,KAAK2F,SAASrM,QAAQhC,OACxC4J,MAAM2E,KAAK7F,KAAK2F,SAASrM,QAAQhC,MAAMyO,QAAQ,SAAAoM,GAC3CA,EAAO9N,aAAa,aAAcmR,KAMtCxV,KAAKmW,QAAS,CACd,IAAMC,EAASxW,EAAMoJ,WAAWzM,KAAKyD,KAAM,UAE3C,IAAKJ,EAAMC,GAAG2B,QAAQ4U,GAClB,OAIWxW,EAAMC,GAAGwC,MAAMrC,KAAKmJ,OAAO5U,QAASyL,KAAKmJ,OAAO5U,MAE/D6hB,EAAO/R,aAAa,QAASlN,EAAS,aAAc6I,KAAKmJ,WAKjE8M,aA7HO,WA+HHrW,EAAMuI,YAAYnI,KAAK2F,SAASxM,UAAW6G,KAAKmJ,OAAOvP,WAAWO,QAAS6F,KAAK7F,SAChFyF,EAAMuI,YAAYnI,KAAK2F,SAASxM,UAAW6G,KAAKmJ,OAAOvP,WAAWM,QAAS8F,KAAKqW,QAGhFzW,EAAMmL,YAAY/K,KAAK2F,SAASrM,QAAQhC,KAAM0I,KAAK7F,SAGnD6F,KAAKsW,gBAAgBtW,KAAK7F,UAI9Boc,aA1IO,SA0IM3U,GAAO,IAAA0T,EAAAtV,KAChBA,KAAK5F,QAAU,CACX,UACA,WACF0O,SAASlH,EAAM5H,MAGjBwc,aAAaxW,KAAKyW,OAAOrc,SAGzB4F,KAAKyW,OAAOrc,QAAUkW,WAAW,WAE7B1Q,EAAMuI,YAAYmN,EAAK3P,SAASxM,UAAWmc,EAAKnM,OAAOvP,WAAWQ,QAASkb,EAAKlb,SAGhFkb,EAAKgB,eAAehB,EAAKlb,UAC1B4F,KAAK5F,QAAU,IAAM,IAI5Bsc,YA9JO,WA8JO,IAAAC,EAAA3W,KAEVA,KAAK4W,OAAqC,IAA5B5W,KAAKiR,MAAM4F,aAErB7W,KAAK4W,SACLhX,EAAMuI,YAAYnI,KAAK2F,SAASxM,UAAW6G,KAAKmJ,OAAOvP,WAAWQ,SAAS,GAC3EwF,EAAMuI,YAAYnI,KAAK2F,SAASxM,UAAW6G,KAAKmJ,OAAOvP,WAAWS,OAAO,IAI7Emc,aAAaxW,KAAKyW,OAAOG,QAGzB5W,KAAKyW,OAAOrc,QAAUkW,WAAW,WAE7B1Q,EAAMuI,YAAYwO,EAAKhR,SAASxM,UAAWwd,EAAKxN,OAAOvP,WAAWQ,QAASuc,EAAKvc,SAGhFuc,EAAKL,eAAeK,EAAKvc,UAC1B4F,KAAK5F,QAAU,IAAM,IAI5B2b,aArLO,WAsLE/V,KAAK/E,UAAUyV,KAKhB9Q,EAAMC,GAAG2B,QAAQxB,KAAK2F,SAASpM,OAAO3E,SACtC8b,EAAGoG,SAASva,KAAKyD,KAAMA,KAAK2F,SAASpM,OAAO3E,OAAQoL,KAAKnL,MAAQ,EAAImL,KAAKpL,QAI1EgL,EAAMC,GAAG2B,QAAQxB,KAAK2F,SAASrM,QAAQ1B,OACvCgI,EAAMmL,YAAY/K,KAAK2F,SAASrM,QAAQ1B,KAAMoI,KAAKnL,OAAyB,IAAhBmL,KAAKpL,UAKzEkiB,SAtMO,SAsMEnQ,GAAmB,IAAX7L,EAAWoI,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,GAAAA,UAAA,GAAH,EAChBtD,EAAMC,GAAG2B,QAAQmF,KAKtBA,EAAO7L,MAAQA,EAGfxE,EAASygB,gBAAgBxa,KAAKyD,KAAM2G,KAIxCqQ,YAnNO,SAmNKrQ,EAAQ5G,GAChB,IAAMjF,EAAQ8E,EAAMC,GAAGU,OAAOR,GAASA,EAAQ,EACzCrG,EAAWkG,EAAMC,GAAG2B,QAAQmF,GAAUA,EAAS3G,KAAK2F,SAASnM,QAAQC,OAG3E,GAAImG,EAAMC,GAAG2B,QAAQ9H,GAAW,CAC5BA,EAASoB,MAAQA,EAGjB,IAAM0a,EAAQ9b,EAASud,qBAAqB,QAAQ,GAChDrX,EAAMC,GAAG2B,QAAQgU,KACjBA,EAAMpQ,WAAW,GAAG8R,UAAYpc,KAM5Cqc,eApOO,SAoOQvV,GACX,GAAK5B,KAAK/E,UAAUyV,IAAO9Q,EAAMC,GAAG+B,MAAMA,GAA1C,CAIA,IAAI9G,EAAQ,EAEZ,GAAI8G,EACA,OAAQA,EAAM5H,MAEV,IAAK,aACL,IAAK,UACDc,EAAQ8E,EAAMuL,cAAcnL,KAAKrI,YAAaqI,KAAKlL,UAGhC,eAAf8M,EAAM5H,MACN0W,EAAGoG,SAASva,KAAKyD,KAAMA,KAAK2F,SAASpM,OAAOhD,KAAMuE,GAGtD,MAGJ,IAAK,UACL,IAAK,WACD4V,EAAGsG,YAAYza,KAAKyD,KAAMA,KAAK2F,SAASnM,QAAQC,OAAwB,IAAhBuG,KAAKtI,aAW7E0f,kBAvQO,WAuQsD,IAA3CzQ,EAA2CzD,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,GAAAA,UAAA,GAAlC,KAAM0I,EAA4B1I,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,GAAAA,UAAA,GAArB,EAAG4I,EAAkB5I,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,IAAAA,UAAA,GAEzD,GAAKtD,EAAMC,GAAG2B,QAAQmF,IAAY/G,EAAMC,GAAGU,OAAOqL,GAAlD,CAKA,IAAMC,EAAejM,EAAM2L,SAASvL,KAAKlL,UAAY,EAGrD6R,EAAOF,YAAc7G,EAAM+L,WAAWC,EAAMC,EAAcC,KAI9DkK,WArRO,SAqRIpU,GAEP,IAAMyV,GAAUzX,EAAMC,GAAG2B,QAAQxB,KAAK2F,SAASnM,QAAQ1E,WAAakL,KAAKmJ,OAAOnU,WAGhF0b,EAAG0G,kBAAkB7a,KAAKyD,KAAMA,KAAK2F,SAASnM,QAAQ7B,YAAa0f,EAASrX,KAAKlL,SAAWkL,KAAKrI,YAAcqI,KAAKrI,YAAa0f,GAG7HzV,GAAwB,eAAfA,EAAM5H,MAAyBgG,KAAKiR,MAAMqG,SAKvD5G,EAAGyG,eAAe5a,KAAKyD,KAAM4B,IAIjC2V,eAtSO,WAuSH,GAAKvX,KAAK/E,UAAUyV,GAApB,CAKA,IAAM8G,EAAc5X,EAAMC,GAAG2B,QAAQxB,KAAK2F,SAASnM,QAAQ1E,WAGtD0iB,GAAexX,KAAKmJ,OAAOpU,iBAAmBiL,KAAKqW,QACpD3F,EAAG0G,kBAAkB7a,KAAKyD,KAAMA,KAAK2F,SAASnM,QAAQ7B,YAAaqI,KAAKlL,UAIxE0iB,GACA9G,EAAG0G,kBAAkB7a,KAAKyD,KAAMA,KAAK2F,SAASnM,QAAQ1E,SAAUkL,KAAKlL,UAIzEwB,EAASmhB,kBAAkBlb,KAAKyD,SC3TlCjM,EAAQ,CACV2jB,WADU,WAEN,OAAK1X,KAAKkR,QAIHlR,KAAKiR,MAAM9M,iBAAiB,UAHxB,MAOfwT,kBAVU,WAWN,IAAK3X,KAAKkR,QACN,OAAO,KAIX,IAAMlE,EAAUjZ,EAAM2jB,WAAWnb,KAAKyD,MAEtC,GAAIJ,EAAMC,GAAGwC,MAAM2K,GACf,OAAO,KAIX,IAAM4K,EAAQ1W,MAAM2E,KAAKmH,GAASS,OAAO,SAAAP,GAAA,OAAWtN,EAAMC,GAAGwC,MAAM6K,EAAOjC,aAAa,WAGvF,OAAIrL,EAAMC,GAAGwC,MAAMuV,GACR,KAIJhY,EAAM4N,OAAOoK,EAAM1I,IAAI,SAAAhC,GAAA,OAAU1M,OAAO0M,EAAOjC,aAAa,aAGvE6B,OAlCU,WAmCN,GAAK9M,KAAKkR,QAAV,CAIA,IAAMkB,EAASpS,KAGfM,OAAO8M,eAAegF,EAAOnB,MAAO,UAAW,CAC3CM,IAD2C,WAGvC,IAAMvE,EAAUjZ,EAAM2jB,WAAWnb,KAAK6V,GAEtC,GAAIxS,EAAMC,GAAGwC,MAAM2K,GACf,OAAO,KAGX,IAAMvE,EAAUvH,MAAM2E,KAAKmH,GAASS,OAAO,SAAAP,GAAA,OAAUA,EAAOjC,aAAa,SAAWmH,EAAOlF,SAE3F,OAAItN,EAAMC,GAAGwC,MAAMoG,GACR,KAGJjI,OAAOiI,EAAQ,GAAGwC,aAAa,UAE1C4M,IAjB2C,SAiBvC9X,GAEA,IAAMiN,EAAUjZ,EAAM2jB,WAAWnb,KAAK6V,GAEtC,IAAIxS,EAAMC,GAAGwC,MAAM2K,GAAnB,CAKA,IAAMvE,EAAUvH,MAAM2E,KAAKmH,GAASS,OAAO,SAAAP,GAAA,OAAU1M,OAAO0M,EAAOjC,aAAa,WAAalL,IAG7F,IAAIH,EAAMC,GAAGwC,MAAMoG,GAAnB,CAKA,IAAMxN,EAAYwN,EAAQgF,OAAO,SAAAP,GAAA,OAAU5I,EAAQ0M,KAAKzU,KAAK6V,EAAQlF,EAAOjC,aAAa,WAGzF,IAAIrL,EAAMC,GAAGwC,MAAMpH,GAAnB,CAKA2E,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,oBAAoB,EAAO,CACtEtb,QAASoK,IA1BN,IA8BCpI,EAAyBya,EAAzBza,YAAawC,EAAYiY,EAAZjY,QAGrBiY,EAAOnB,MAAMrT,IAAM3C,EAAU,GAAGgQ,aAAa,OAG7CmH,EAAOnB,MAAM6G,OAGT3d,GACAiY,EAAO9a,OAIX8a,EAAOza,YAAcA,EAGrBiI,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,iBAAiB,EAAO,CACnEtb,QAASoK,YAQzBgY,eAnHU,WAoHD/X,KAAKkR,UAKVtR,EAAMiH,cAAc9S,EAAM2jB,cAK1B1X,KAAKiR,MAAM5M,aAAa,MAAOrE,KAAKmJ,OAAOzT,YAK3CsK,KAAKiR,MAAM6G,OAGX9X,KAAKxL,MAAMwd,IAAI,iCCjIjBrB,EAAU/Q,EAAM2C,aAEhBjM,EAAW,CAEbygB,gBAFa,SAEGpQ,GAIZ,IAAMnL,EAAQoE,EAAMC,GAAG+B,MAAM+E,GAAUA,EAAOA,OAASA,EAGlD/G,EAAMC,GAAG2B,QAAQhG,IAAyC,UAA/BA,EAAMyP,aAAa,UAKnDzP,EAAM6I,aAAa,gBAAiB7I,EAAMV,OAGrC6V,EAAQjO,UAKblH,EAAMoH,MAAMoV,YAAY,UAAcxc,EAAMV,MAAQU,EAAM6P,IAAM,IAAhE,OAIJ4M,WA1Ba,WA2BT,MAAO,CACH7V,IAAKpC,KAAKmJ,OAAO1T,QACjByiB,SAAkD,IAAxClY,KAAKmJ,OAAO1T,QAAQkY,QAAQ,SAAkBgD,EAAQnO,OAAStC,OAAOiY,gBAKxFC,WAlCa,SAkCFpe,EAAMmB,GACb,IACM1F,EAAUa,EAAS2hB,WAAW1b,KAAKyD,MACnCqY,GAAe5iB,EAAQyiB,SAAyB,GAAdziB,EAAQ2M,KAA1C,IAAsDpC,KAAKmJ,OAAO3T,WAGlE8iB,EAAOtb,SAASub,gBALJ,6BAK+B,OACjD3Y,EAAM4G,cACF8R,EACA1Y,EAAMkN,OAAO3R,EAAY,CACrBqd,KAAM,eACN9O,UAAW,WAKnB,IAAM+O,EAAMzb,SAASub,gBAfH,6BAe8B,OAC1C7b,EAAU2b,EAAV,IAAsBre,EAc5B,MATI,SAAUye,EACVA,EAAIC,eAAe,+BAAgC,OAAQhc,GAE3D+b,EAAIC,eAAe,+BAAgC,aAAchc,GAIrE4b,EAAK9Z,YAAYia,GAEVH,GAIXK,YArEa,SAqED3e,EAAM4e,GACd,IAAIrS,EAAOpP,EAAS6C,EAAMgG,KAAKmJ,QACzBhO,EAAamF,OAAOwK,OAAO,GAAI8N,GAErC,OAAQ5e,GACJ,IAAK,MACDuM,EAAO,MACP,MAEJ,IAAK,UACDA,EAAO,UAaf,MANI,UAAWpL,EACXA,EAAW+M,OAAX,IAAwBlI,KAAKmJ,OAAOvP,WAAWa,OAE/CU,EAAW+M,MAAQlI,KAAKmJ,OAAOvP,WAAWa,OAGvCmF,EAAMnC,cAAc,OAAQtC,EAAYoL,IAInDsS,YAhGa,SAgGDtS,GACR,GAAI3G,EAAMC,GAAGwC,MAAMkE,GACf,OAAO,KAGX,IAAMxL,EAAQ6E,EAAMnC,cAAc,OAAQ,CACtCyK,MAAOlI,KAAKmJ,OAAOvP,WAAWD,KAAKmB,QAavC,OAVAC,EAAMyD,YACFoB,EAAMnC,cACF,OACA,CACIyK,MAAOlI,KAAKmJ,OAAOvP,WAAWD,KAAKoB,OAEvCwL,IAIDxL,GAIX+d,aAvHa,SAuHAC,EAAYH,GACrB,IAAMzG,EAASvS,EAAMnC,cAAc,UAC7BtC,EAAamF,OAAOwK,OAAO,GAAI8N,GACjC5e,EAAO4F,EAAMiN,YAAYkM,GAEzB3Q,GAAS,EACToN,OAAAA,EACA8C,OAAAA,EACAU,OAAAA,EACAC,OAAAA,EAeJ,OAbM,SAAU9d,IACZA,EAAWnB,KAAO,UAGlB,UAAWmB,EACPA,EAAW+M,MAAMY,SAAS9I,KAAKmJ,OAAOvP,WAAWG,WACjDoB,EAAW+M,OAAX,IAAwBlI,KAAKmJ,OAAOvP,WAAWG,SAGnDoB,EAAW+M,MAAQlI,KAAKmJ,OAAOvP,WAAWG,QAItCgf,GACJ,IAAK,OACD3Q,GAAS,EACToN,EAAQ,OACRwD,EAAe,QACfV,EAAO,OACPW,EAAc,QACd,MAEJ,IAAK,OACD7Q,GAAS,EACToN,EAAQ,OACRwD,EAAe,SACfV,EAAO,SACPW,EAAc,QACd,MAEJ,IAAK,WACD7Q,GAAS,EACToN,EAAQ,iBACRwD,EAAe,kBACfV,EAAO,eACPW,EAAc,cACd,MAEJ,IAAK,aACD7Q,GAAS,EACToN,EAAQ,kBACRwD,EAAe,iBACfV,EAAO,mBACPW,EAAc,kBACd,MAEJ,IAAK,aACD9d,EAAW+M,OAAX,IAAwBlI,KAAKmJ,OAAOvP,WAAWG,QAA/C,aACAC,EAAO,OACPwb,EAAQ,OACR8C,EAAO,OACP,MAEJ,QACI9C,EAAQxb,EACRse,EAAOS,EAqCf,OAjCI3Q,GAEA+J,EAAO3T,YAAYlI,EAAS8hB,WAAW7b,KAAKyD,KAAMiZ,EAAa,CAAE/Q,MAAO,mBACxEiK,EAAO3T,YAAYlI,EAAS8hB,WAAW7b,KAAKyD,KAAMsY,EAAM,CAAEpQ,MAAO,uBAGjEiK,EAAO3T,YAAYlI,EAASqiB,YAAYpc,KAAKyD,KAAMgZ,EAAc,CAAE9Q,MAAO,oBAC1EiK,EAAO3T,YAAYlI,EAASqiB,YAAYpc,KAAKyD,KAAMwV,EAAO,CAAEtN,MAAO,wBAGnE/M,EAAW,iBAAkB,EAC7BA,EAAW,cAAgBhE,EAASqe,EAAOxV,KAAKmJ,UAEhDgJ,EAAO3T,YAAYlI,EAAS8hB,WAAW7b,KAAKyD,KAAMsY,IAClDnG,EAAO3T,YAAYlI,EAASqiB,YAAYpc,KAAKyD,KAAMwV,KAIvD5V,EAAMkN,OAAO3R,EAAYyE,EAAM6H,0BAA0BzH,KAAKmJ,OAAOlQ,UAAUK,QAAQU,GAAOmB,IAE9FyE,EAAM4G,cAAc2L,EAAQhX,GAGf,SAATnB,GACK4F,EAAMC,GAAGmB,MAAMhB,KAAK2F,SAASrM,QAAQU,MACtCgG,KAAK2F,SAASrM,QAAQU,GAAQ,IAGlCgG,KAAK2F,SAASrM,QAAQU,GAAMiF,KAAKkT,IAEjCnS,KAAK2F,SAASrM,QAAQU,GAAQmY,EAG3BA,GAIX+G,YAlOa,SAkODlf,EAAMmB,GAEd,IAAMqa,EAAQ5V,EAAMnC,cAChB,QACA,CACI0b,IAAKhe,EAAWC,GAChBA,GAAOD,EAAWC,GAAlB,SACA8M,MAAOlI,KAAKmJ,OAAOvP,WAAWa,QAElCtD,EAAS6C,EAAMgG,KAAKmJ,SAIlBpJ,EAAQH,EAAMnC,cAChB,QACAmC,EAAMkN,OACFlN,EAAM6H,0BAA0BzH,KAAKmJ,OAAOlQ,UAAUM,OAAOS,IAC7D,CACIA,KAAM,QACNof,IAAK,EACL/N,IAAK,IACLgO,KAAM,IACNve,MAAO,EACPwe,aAAc,MAEdd,KAAM,SACNe,kBAAsBpe,EAAWC,GAAjC,SACAoe,gBAAiB,EACjBC,gBAAiB,IACjBC,gBAAiB,GAErBve,IASR,OALA6E,KAAK2F,SAASpM,OAAOS,GAAQ+F,EAG7BzJ,EAASygB,gBAAgBxa,KAAKyD,KAAMD,GAE7B,CACHyV,MAAAA,EACAzV,MAAAA,IAKR4Z,eAjRa,SAiRE3f,EAAMmB,GACjB,IAAMzB,EAAWkG,EAAMnC,cACnB,WACAmC,EAAMkN,OACFlN,EAAM6H,0BAA0BzH,KAAKmJ,OAAOlQ,UAAUO,QAAQQ,IAC9D,CACIof,IAAK,EACL/N,IAAK,IACLvQ,MAAO,EACP0d,KAAM,eACNoB,eAAe,GAEnBze,IAKR,GAAa,WAATnB,EAAmB,CACnBN,EAAS8E,YAAYoB,EAAMnC,cAAc,OAAQ,KAAM,MAEvD,IAAIoc,EAAS,GACb,OAAQ7f,GACJ,IAAK,SACD6f,EAAS1iB,EAAS,SAAU6I,KAAKmJ,QACjC,MAEJ,IAAK,SACD0Q,EAAS1iB,EAAS,WAAY6I,KAAKmJ,QAO3CzP,EAAS+M,YAAT,KAA4BoT,EAAOlN,cAKvC,OAFA3M,KAAK2F,SAASnM,QAAQQ,GAAQN,EAEvBA,GAIXogB,WA5Ta,SA4TF9f,GACP,IAAMb,EAAYyG,EAAMnC,cAAc,MAAO,CACzCyK,MAAO,eAiBX,OAdA/O,EAAUqF,YACNoB,EAAMnC,cACF,OACA,CACIyK,MAAOlI,KAAKmJ,OAAOvP,WAAWa,QAElCtD,EAAS6C,EAAMgG,KAAKmJ,UAI5BhQ,EAAUqF,YAAYoB,EAAMnC,cAAc,OAAQmC,EAAM6H,0BAA0BzH,KAAKmJ,OAAOlQ,UAAUO,QAAQQ,IAAQ,UAExHgG,KAAK2F,SAASnM,QAAQQ,GAAQb,EAEvBA,GAIX4gB,eAnVa,SAmVEjf,EAAOkf,EAAMhgB,EAAMzF,GAAsC,IAA/BwG,EAA+BmI,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,GAAAA,UAAA,GAAvB,KAAM+W,EAAiB/W,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,IAAAA,UAAA,GAC9DwK,EAAO9N,EAAMnC,cAAc,MAE3B+X,EAAQ5V,EAAMnC,cAAc,QAAS,CACvCyK,MAAOlI,KAAKmJ,OAAOvP,WAAWG,UAG5BmgB,EAAQta,EAAMnC,cAChB,QACAmC,EAAMkN,OAAOlN,EAAM6H,0BAA0BzH,KAAKmJ,OAAOlQ,UAAUM,OAAOS,IAAQ,CAC9EA,KAAM,QACN8Y,KAAAA,QAAc9Y,EACdc,MAAAA,EACAmf,QAAAA,EACA/R,MAAO,mBAITiS,EAAOva,EAAMnC,cAAc,OAAQ,CAAEmc,eAAe,IAE1DpE,EAAMhX,YAAY0b,GAClB1E,EAAMhX,YAAY2b,GAClB3E,EAAM4E,mBAAmB,YAAa7lB,GAElCqL,EAAMC,GAAG2B,QAAQzG,IACjBya,EAAMhX,YAAYzD,GAGtB2S,EAAKlP,YAAYgX,GACjBwE,EAAKxb,YAAYkP,IAIrB+J,kBApXa,SAoXK7V,GAAO,IAAAiR,EAAA7S,KAErB,GACKA,KAAKmJ,OAAO9S,SAASE,MACrBqJ,EAAMC,GAAG2B,QAAQxB,KAAK2F,SAASpM,OAAOhD,OACtCqJ,EAAMC,GAAG2B,QAAQxB,KAAK2F,SAASnM,QAAQ4P,cACtB,IAAlBpJ,KAAKlL,SAJT,CAUA,IAAIulB,EAAU,EACRC,EAAata,KAAK2F,SAASpM,OAAOhD,KAAKgkB,wBACvCC,EAAaxa,KAAKmJ,OAAOvP,WAAWW,QAApC,YAEA6N,EAAS,SAAAqS,GACX7a,EAAMuI,YAAY0K,EAAKlN,SAASnM,QAAQ4P,YAAaoR,EAASpS,IAIlE,GAAIpI,KAAKwR,MACLpJ,GAAO,OADX,CAMA,GAAIxI,EAAMC,GAAG+B,MAAMA,GACfyY,EAAU,IAAMC,EAAW3K,OAAS/N,EAAM8Y,MAAQJ,EAAWK,UAC1D,CAAA,IAAI/a,EAAM2I,SAASvI,KAAK2F,SAASnM,QAAQ4P,YAAaoR,GAGzD,OAFAH,EAAUO,WAAW5a,KAAK2F,SAASnM,QAAQ4P,YAAYxG,MAAM+X,KAAM,IAMnEN,EAAU,EACVA,EAAU,EACHA,EAAU,MACjBA,EAAU,KAId3J,EAAG0G,kBAAkB7a,KAAKyD,KAAMA,KAAK2F,SAASnM,QAAQ4P,YAAapJ,KAAKlL,SAAW,IAAMulB,GAGzFra,KAAK2F,SAASnM,QAAQ4P,YAAYxG,MAAM+X,KAAUN,EAAlD,IAIIza,EAAMC,GAAG+B,MAAMA,IAAU,CACzB,aACA,cACFkH,SAASlH,EAAM5H,OACboO,EAAsB,eAAfxG,EAAM5H,SAKrB6gB,UA/aa,SA+aHC,EAAS1S,GACf,IAAM2S,EAAM/a,KAAK2F,SAASzO,SAAS8jB,KAAKF,GAClCG,EAAOjb,KAAK2F,SAASzO,SAASgkB,MAAMJ,GAE1Clb,EAAMwE,aAAa2W,GAAM3S,GACzBxI,EAAMwE,aAAa6W,GAAO7S,IAK9B+S,eAzba,SAybEtlB,GAAS,IAAAyf,EAAAtV,KAEpB,GAAKJ,EAAMC,GAAG2B,QAAQxB,KAAK2F,SAASzO,SAASgkB,MAAMvlB,SAAnD,CAIA,IACMqkB,EAAOha,KAAK2F,SAASzO,SAASgkB,MAAMvlB,QAAQsT,cAAc,MAG5DrJ,EAAMC,GAAGmB,MAAMnL,KACfmK,KAAKnK,QAAQF,QAAUE,EAAQ4X,OAAO,SAAA9X,GAAA,OAAW2f,EAAKnM,OAAOxT,QAAQE,QAAQiT,SAASnT,MAI1F,IAAMyS,GAAUxI,EAAMC,GAAGwC,MAAMrC,KAAKnK,QAAQF,UAAYqK,KAAKnK,QAAQF,QAAQuG,OAAS,EAOtF,GANA5F,EAASukB,UAAUte,KAAKyD,KAVX,UAUuBoI,GAGpC9R,EAAS8kB,UAAU7e,KAAKyD,MAGnBoI,EAAL,CAKAxI,EAAMmH,aAAaiT,GAiCnBha,KAAKnK,QAAQF,QACR0lB,KAAK,SAACC,EAAGC,GACN,IAAMC,EAAUlG,EAAKnM,OAAOxT,QAAQE,QACpC,OAAO2lB,EAAQ7N,QAAQ2N,GAAKE,EAAQ7N,QAAQ4N,GAAK,GAAK,IAEzDxV,QAAQ,SAAApQ,GACL,IAAM6f,EAAQlf,EAASif,SAAShZ,KAAK+Y,EAAM,UAAW3f,GACtDW,EAASyjB,eAAexd,KAAK+Y,EAAM3f,EAASqkB,EA7DvC,UA6DmDxE,EArC/C,SAAA7f,GACb,IAAI6f,EAAQ,GAEZ,OAAQ7f,GACJ,KAAK,KACD6f,EAAQ,KACR,MAEJ,KAAK,KACL,KAAK,KACL,KAAK,IACDA,EAAQ,KACR,MAEJ,KAAK,IACDA,EAAQ,KAOhB,OAAKA,EAAMtZ,OAIJ5F,EAASuiB,YAAYtc,KAAK+Y,EAAME,GAH5B,KAcwDiG,CAAS9lB,MAGhFW,EAASolB,cAAcnf,KAAKyD,KAhEf,UAgE2Bga,MAK5CzE,SApgBa,SAogBJuF,EAAShgB,GACd,OAAQggB,GACJ,IAAK,QACD,OAAiB,IAAVhgB,EAAc3D,EAAS,SAAU6I,KAAKmJ,QAAarO,EAAnD,UAEX,IAAK,UACD,OAAI8E,EAAMC,GAAGU,OAAOzF,GACNA,EAAV,IAGG8E,EAAM4M,YAAY1R,GAE7B,IAAK,WACD,OAAOtE,EAAS+e,SAAShZ,KAAKyD,MAElC,QACI,OAAO,OAKnB0b,cAzhBa,SAyhBCZ,EAAS3hB,EAAW4G,GAC9B,IAAMkb,EAAOjb,KAAK2F,SAASzO,SAASgkB,MAAMJ,GACtChgB,EAAQ,KACRkf,EAAO7gB,EAEX,OAAQ2hB,GACJ,IAAK,WAGOhgB,EAFJkF,KAAKxJ,SAAST,OACViK,KAAKnK,QAAQW,SAAS0F,OAAS,IAAM8D,KAAKnK,QAAQW,SAASqd,KAAK,SAAA8H,GAAA,MAAiB,YAATA,IAChE3b,KAAKxJ,SAASC,SAEd,UAGJ,GAGZ,MAEJ,QASI,GARAqE,EAAS8E,EAAMC,GAAGwC,MAAMtC,GAAiBC,KAAK8a,GAAb/a,EAG7BH,EAAMC,GAAGwC,MAAMvH,KACfA,EAAQkF,KAAKmJ,OAAO2R,GAASllB,UAI5BgK,EAAMC,GAAGwC,MAAMrC,KAAKnK,QAAQilB,MAAc9a,KAAKnK,QAAQilB,GAAShS,SAAShO,GAE1E,YADAkF,KAAKxL,MAAM6U,KAAX,yBAAyCvO,EAAzC,SAAuDggB,GAK3D,IAAK9a,KAAKmJ,OAAO2R,GAASjlB,QAAQiT,SAAShO,GAEvC,YADAkF,KAAKxL,MAAM6U,KAAX,sBAAsCvO,EAAtC,SAAoDggB,GAahE,GALKlb,EAAMC,GAAG2B,QAAQwY,KAClBA,EAAOiB,GAAQA,EAAKhS,cAAc,OAIjCrJ,EAAMC,GAAG2B,QAAQwY,GAAtB,CAKcha,KAAK2F,SAASzO,SAAS8jB,KAAKF,GAAS7R,cAArC,IAAuDjJ,KAAKmJ,OAAOvP,WAAWD,KAAKmB,OAC3FmK,UAAY3O,EAASif,SAAShZ,KAAKyD,KAAM8a,EAAShgB,GAGxD,IAAM6L,EAASqT,GAAQA,EAAK/Q,cAAL,gBAAmCnO,EAAnC,MAEnB8E,EAAMC,GAAG2B,QAAQmF,KACjBA,EAAOsT,SAAU,KAqDzB7F,gBA1oBa,WA0oBK,IAAAuC,EAAA3W,KAGRga,EAAOha,KAAK2F,SAASzO,SAASgkB,MAAM1kB,SAASyS,cAAc,MAG3Db,EAAS5R,EAAS6d,UAAU9X,KAAKyD,MAAM9D,OAU7C,GATA5F,EAASukB,UAAUte,KAAKyD,KALX,WAKuBoI,GAGpCxI,EAAMmH,aAAaiT,GAGnB1jB,EAAS8kB,UAAU7e,KAAKyD,MAGnBoI,EAAL,CAKA,IAAMkM,EAAS9d,EAAS6d,UAAU9X,KAAKyD,MAAMkP,IAAI,SAAAjN,GAAA,MAAU,CACvDxL,SAAWmJ,EAAMC,GAAGwC,MAAMJ,EAAMxL,UAA6B,UAAjBwL,EAAMxL,SAClD+e,MAAOhf,EAAS+e,SAAShZ,KAAKoa,EAAM1U,MAIxCqS,EAAOsH,QAAQ,CACXnlB,SAAU,GACV+e,MAAOre,EAAS,WAAY6I,KAAKmJ,UAIrCmL,EAAOvO,QAAQ,SAAA9D,GACX3L,EAASyjB,eAAexd,KACpBoa,EACA1U,EAAMxL,SACNujB,EACA,WACA/X,EAAMuT,MACa,YAAnBvT,EAAMxL,SAAyBH,EAASuiB,YAAYtc,KAAKoa,EAAM1U,EAAMxL,SAASgW,eAAiB,KAC/FxK,EAAMxL,SAASkW,gBAAkBgK,EAAKngB,SAASC,SAASkW,iBAKhE3M,KAAKnK,QAAQW,SAAW8d,EAAOpF,IAAI,SAAAjN,GAAA,OAASA,EAAMxL,WAElDH,EAASolB,cAAcnf,KAAKyD,KA9Cf,WA8C2Bga,KAI5C6B,aA9rBa,SA8rBAhmB,GAAS,IAAAimB,EAAA9b,KAElB,GAAKA,KAAKmJ,OAAO7S,SAASwS,SAAS,aAAgB9I,KAAKmJ,OAAOjS,SAAS4R,SAAS,UAK5ElJ,EAAMC,GAAG2B,QAAQxB,KAAK2F,SAASzO,SAASgkB,MAAMllB,OAAnD,CAOI4J,EAAMC,GAAGmB,MAAMnL,GACfmK,KAAKnK,QAAQG,MAAQH,GACdmK,KAAKkR,SAAWlR,KAAKoV,WAC5BpV,KAAKnK,QAAQG,MAAQ,CACjB,GACA,IACA,EACA,KACA,IACA,KACA,IAKRgK,KAAKnK,QAAQG,MAAQgK,KAAKnK,QAAQG,MAAMyX,OAAO,SAAAzX,GAAA,OAAS8lB,EAAK3S,OAAOnT,MAAMH,QAAQiT,SAAS9S,KAG3F,IAAMoS,GAAUxI,EAAMC,GAAGwC,MAAMrC,KAAKnK,QAAQG,QAAUgK,KAAKnK,QAAQG,MAAMkG,OAAS,EAOlF,GANA5F,EAASukB,UAAUte,KAAKyD,KAtBX,QAsBuBoI,GAGpC9R,EAAS8kB,UAAU7e,KAAKyD,MAGnBoI,EAAL,CAKA,IAAM4R,EAAOha,KAAK2F,SAASzO,SAASgkB,MAAMllB,MAAMiT,cAAc,MAG9DrJ,EAAMwE,aAAapE,KAAK2F,SAASzO,SAAS8jB,KAAKhlB,OAAO,GACtD4J,EAAMwE,aAAapE,KAAK2F,SAASzO,SAASgkB,MAAMllB,OAAO,GAGvD4J,EAAMmH,aAAaiT,GAGnBha,KAAKnK,QAAQG,MAAM+P,QAAQ,SAAA/P,GACvB,IAAMwf,EAAQlf,EAASif,SAAShZ,KAAKuf,EAAM,QAAS9lB,GACpDM,EAASyjB,eAAexd,KAAKuf,EAAM9lB,EAAOgkB,EA7CjC,QA6C6CxE,KAG1Dlf,EAASolB,cAAcnf,KAAKyD,KAhDf,QAgD2Bga,MAI5CoB,UA7vBa,WA6vBD,IACAJ,EAAShb,KAAK2F,SAASzO,SAAvB8jB,KACFR,GAAW5a,EAAMC,GAAGwC,MAAM2Y,IAAS1a,OAAOyb,OAAOf,GAAMnH,KAAK,SAAAkH,GAAA,OAAQA,EAAItgB,SAE9EmF,EAAMwE,aAAapE,KAAK2F,SAASzO,SAASyC,MAAO6gB,IAIrDwB,WArwBa,SAqwBFpa,GAAO,IACNqa,EAASjc,KAAK2F,SAASzO,SAAvB+kB,KACF9J,EAASnS,KAAK2F,SAASrM,QAAQpC,SAGrC,GAAK0I,EAAMC,GAAG2B,QAAQya,IAAUrc,EAAMC,GAAG2B,QAAQ2Q,GAAjD,CAIA,IAAM2C,EAAOlV,EAAMC,GAAGe,QAAQgB,GAASA,EAAQhC,EAAMC,GAAG2B,QAAQya,IAA8C,SAArCA,EAAKhR,aAAa,eAE3F,GAAIrL,EAAMC,GAAG+B,MAAMA,GAAQ,CACvB,IAAMsa,EAAatc,EAAMC,GAAG2B,QAAQya,IAASA,EAAK5T,SAASzG,EAAM+E,QAC3DwV,EAAWva,EAAM+E,SAAW3G,KAAK2F,SAASrM,QAAQpC,SAKxD,GAAIglB,IAAgBA,IAAeC,GAAYrH,EAC3C,OAIAqH,GACAva,EAAMwa,kBAKVxc,EAAMC,GAAG2B,QAAQ2Q,IACjBA,EAAO9N,aAAa,gBAAiByQ,GAGrClV,EAAMC,GAAG2B,QAAQya,KACjBA,EAAK5X,aAAa,eAAgByQ,GAClClV,EAAMuI,YAAYnI,KAAK2F,SAASxM,UAAW6G,KAAKmJ,OAAOvP,WAAWD,KAAKqB,KAAM8Z,GAEzEA,EACAmH,EAAKzT,gBAAgB,YAErByT,EAAK5X,aAAa,YAAa,MAM3CgY,WAnzBa,SAmzBFtB,GACP,IAAMuB,EAAQvB,EAAI7U,WAAU,GAC5BoW,EAAM1Z,MAAM2Z,SAAW,WACvBD,EAAM1Z,MAAM4Z,QAAU,EACtBF,EAAMjY,aAAa,eAAe,GAGlCnD,MAAM2E,KAAKyW,EAAMnY,iBAAiB,gBAAgB4B,QAAQ,SAAAhG,GACtD,IAAM+S,EAAO/S,EAAMkL,aAAa,QAChClL,EAAMsE,aAAa,OAAWyO,EAA9B,YAIJiI,EAAI3U,WAAW5H,YAAY8d,GAG3B,IAAM3M,EAAQ2M,EAAMG,YACd7M,EAAS0M,EAAMI,aAKrB,OAFA9c,EAAMiH,cAAcyV,GAEb,CACH3M,MAAAA,EACAC,OAAAA,IAKR+M,QAh1Ba,SAg1BL/a,GAAO,IACHjI,EAASqG,KAAK2F,SAASzO,SAAvByC,KACFohB,EAAMnZ,EAAM+E,OACZmO,EAA6C,UAAtCiG,EAAI9P,aAAa,iBACxBgQ,EAAOje,SAAS4f,eAAe7B,EAAI9P,aAAa,kBAGtD,GAAKrL,EAAMC,GAAG2B,QAAQyZ,IAKsB,aAA9BA,EAAKhQ,aAAa,QAChC,CAMA,IAAMG,EAAUzR,EAAKsP,cAAc,0CAC7B9P,EAAYiS,EAAQhF,WAQ1B,GALAlF,MAAM2E,KAAKlM,EAAKwK,iBAAL,mBAAyCiH,EAAQH,aAAa,MAA9D,OAA0ElF,QAAQ,SAAAqC,GACzFA,EAAO/D,aAAa,iBAAiB,KAIrCC,EAAQmN,cAAgBnN,EAAQoN,cAAe,CAE/CvY,EAAUyJ,MAAM+M,MAAWvE,EAAQqR,YAAnC,KACAtjB,EAAUyJ,MAAMgN,OAAYxE,EAAQsR,aAApC,KAGA,IAAMG,EAAOvmB,EAAS+lB,WAAW9f,KAAKyD,KAAMib,GAqB5Crb,EAAMsK,GAAG/Q,EAAWyG,EAAMoQ,mBAlBV,SAAV8M,EAAUhgB,GAERA,EAAE6J,SAAWxN,GAAc,CAC3B,QACA,UACF2P,SAAShM,EAAEigB,gBAKb5jB,EAAUyJ,MAAM+M,MAAQ,GACxBxW,EAAUyJ,MAAMgN,OAAS,GAGzBhQ,EAAMuK,IAAIhR,EAAWyG,EAAMoQ,mBAAoB8M,MAOnD3jB,EAAUyJ,MAAM+M,MAAWkN,EAAKlN,MAAhC,KACAxW,EAAUyJ,MAAMgN,OAAYiN,EAAKjN,OAAjC,KAIJxE,EAAQ/G,aAAa,eAAe,GACpC+G,EAAQ/G,aAAa,YAAa,GAGlC4W,EAAK5W,aAAa,eAAgByQ,GAClCiG,EAAI1W,aAAa,gBAAiByQ,GAClCmG,EAAKzS,gBAAgB,YAGrByS,EAAK9W,iBAAiB,2DAA2D,GAAG6F,UAKxFgT,OA75Ba,SA65BNtY,GAAM,IAAAuY,EAAAjd,KAET,GAAIJ,EAAMC,GAAGwC,MAAMrC,KAAKmJ,OAAO7S,UAC3B,OAAO,KAIX,IAAM6C,EAAYyG,EAAMnC,cAAc,MAAOmC,EAAM6H,0BAA0BzH,KAAKmJ,OAAOlQ,UAAU3C,SAAS8C,UAuB5G,GApBI4G,KAAKmJ,OAAO7S,SAASwS,SAAS,YAC9B3P,EAAUqF,YAAYlI,EAASwiB,aAAavc,KAAKyD,KAAM,YAIvDA,KAAKmJ,OAAO7S,SAASwS,SAAS,WAC9B3P,EAAUqF,YAAYlI,EAASwiB,aAAavc,KAAKyD,KAAM,WAIvDA,KAAKmJ,OAAO7S,SAASwS,SAAS,SAC9B3P,EAAUqF,YAAYlI,EAASwiB,aAAavc,KAAKyD,KAAM,SAIvDA,KAAKmJ,OAAO7S,SAASwS,SAAS,iBAC9B3P,EAAUqF,YAAYlI,EAASwiB,aAAavc,KAAKyD,KAAM,iBAIvDA,KAAKmJ,OAAO7S,SAASwS,SAAS,YAAa,CAC3C,IAAMpP,EAAWkG,EAAMnC,cAAc,MAAOmC,EAAM6H,0BAA0BzH,KAAKmJ,OAAOlQ,UAAUS,WAG5FnD,EAAOD,EAAS4iB,YAAY3c,KAAKyD,KAAM,OAAQ,CACjD5E,GAAAA,aAAiBsJ,EAAKtJ,KAW1B,GATA1B,EAAS8E,YAAYjI,EAAKif,OAC1B9b,EAAS8E,YAAYjI,EAAKwJ,OAG1BrG,EAAS8E,YAAYlI,EAASqjB,eAAepd,KAAKyD,KAAM,WAKpDA,KAAKmJ,OAAO9S,SAASE,KAAM,CAC3B,IAAMgE,EAAUqF,EAAMnC,cAClB,OACA,CACI+a,KAAM,UACNtQ,MAAOlI,KAAKmJ,OAAOvP,WAAWW,SAElC,SAGJb,EAAS8E,YAAYjE,GACrByF,KAAK2F,SAASnM,QAAQ4P,YAAc7O,EAGxCyF,KAAK2F,SAASjM,SAAWA,EACzBP,EAAUqF,YAAYwB,KAAK2F,SAASjM,UAmBxC,GAfIsG,KAAKmJ,OAAO7S,SAASwS,SAAS,iBAC9B3P,EAAUqF,YAAYlI,EAASwjB,WAAWvd,KAAKyD,KAAM,gBAIrDA,KAAKmJ,OAAO7S,SAASwS,SAAS,aAC9B3P,EAAUqF,YAAYlI,EAASwjB,WAAWvd,KAAKyD,KAAM,aAIrDA,KAAKmJ,OAAO7S,SAASwS,SAAS,SAC9B3P,EAAUqF,YAAYlI,EAASwiB,aAAavc,KAAKyD,KAAM,SAIvDA,KAAKmJ,OAAO7S,SAASwS,SAAS,UAAW,CACzC,IAAMlU,EAASgL,EAAMnC,cAAc,MAAO,CACtCyK,MAAO,iBAIL/M,EAAa,CACfkQ,IAAK,EACLgO,KAAM,IACNve,MAAOkF,KAAKmJ,OAAOvU,QAIjB4G,EAAQlF,EAAS4iB,YAAY3c,KAC/ByD,KACA,SACAJ,EAAMkN,OAAO3R,EAAY,CACrBC,GAAAA,eAAmBsJ,EAAKtJ,MAGhCxG,EAAO4J,YAAYhD,EAAMga,OACzB5gB,EAAO4J,YAAYhD,EAAMuE,OAEzBC,KAAK2F,SAAS/Q,OAASA,EAEvBuE,EAAUqF,YAAY5J,GAS1B,GALIoL,KAAKmJ,OAAO7S,SAASwS,SAAS,aAC9B3P,EAAUqF,YAAYlI,EAASwiB,aAAavc,KAAKyD,KAAM,aAIvDA,KAAKmJ,OAAO7S,SAASwS,SAAS,cAAgBlJ,EAAMC,GAAGwC,MAAMrC,KAAKmJ,OAAOjS,UAAW,CACpF,IAAMyC,EAAOiG,EAAMnC,cAAc,MAAO,CACpCyK,MAAO,aACPzN,OAAQ,KAGZd,EAAK6E,YACDlI,EAASwiB,aAAavc,KAAKyD,KAAM,WAAY,CACzC5E,GAAAA,wBAA4BsJ,EAAKtJ,GACjC8hB,iBAAiB,EACjBC,gBAAA,iBAAkCzY,EAAKtJ,GACvCgiB,iBAAiB,KAIzB,IAAMnB,EAAOrc,EAAMnC,cAAc,OAAQ,CACrCyK,MAAO,wBACP9M,GAAAA,iBAAqBsJ,EAAKtJ,GAC1Bwe,eAAe,EACfyD,mBAAA,wBAA4C3Y,EAAKtJ,GACjDod,KAAM,UACN8E,UAAW,IAGTC,EAAQ3d,EAAMnC,cAAc,OAE5B+f,EAAO5d,EAAMnC,cAAc,MAAO,CACpCrC,GAAAA,iBAAqBsJ,EAAKtJ,GAA1B,QACAwe,eAAe,EACfyD,mBAAA,wBAA4C3Y,EAAKtJ,GACjDod,KAAM,aAIJwC,EAAOpb,EAAMnC,cAAc,KAAM,CACnC+a,KAAM,YAIVxY,KAAKmJ,OAAOjS,SAAS6O,QAAQ,SAAA/L,GACzB,IAAM+gB,EAAMnb,EAAMnC,cAAc,KAAM,CAClC+a,KAAM,MACN/d,OAAQ,KAGN0X,EAASvS,EAAMnC,cACjB,SACAmC,EAAMkN,OAAOlN,EAAM6H,0BAA0BwV,EAAK9T,OAAOlQ,UAAUK,QAAQpC,UAAW,CAClF8C,KAAM,SACNkO,MAAU+U,EAAK9T,OAAOvP,WAAWG,QAAjC,IAA4CkjB,EAAK9T,OAAOvP,WAAWG,QAAnE,YACAqB,GAAAA,iBAAqBsJ,EAAKtJ,GAA1B,IAAgCpB,EAAhC,OACAkjB,iBAAiB,EACjBC,gBAAA,iBAAkCzY,EAAKtJ,GAAvC,IAA6CpB,EAC7CojB,iBAAiB,IAErBjmB,EAAS6C,EAAMijB,EAAK9T,SAGlBrO,EAAQ8E,EAAMnC,cAAc,OAAQ,CACtCyK,MAAO+U,EAAK9T,OAAOvP,WAAWD,KAAKmB,QAIvCA,EAAMmK,UAAYP,EAAK1K,GAEvBmY,EAAO3T,YAAY1D,GACnBigB,EAAIvc,YAAY2T,GAChB6I,EAAKxc,YAAYuc,GAEjBkC,EAAKtX,SAASzO,SAAS8jB,KAAKhhB,GAAQ+gB,IAGxCyC,EAAKhf,YAAYwc,GACjBuC,EAAM/e,YAAYgf,GAGlBxd,KAAKmJ,OAAOjS,SAAS6O,QAAQ,SAAA/L,GACzB,IAAMihB,EAAOrb,EAAMnC,cAAc,MAAO,CACpCrC,GAAAA,iBAAqBsJ,EAAKtJ,GAA1B,IAAgCpB,EAChC4f,eAAe,EACfyD,mBAAA,iBAAqC3Y,EAAKtJ,GAA1C,IAAgDpB,EAAhD,OACAwe,KAAM,WACN8E,UAAW,EACX7iB,OAAQ,KAGNgjB,EAAO7d,EAAMnC,cACf,SACA,CACIzD,KAAM,SACNkO,MAAU+U,EAAK9T,OAAOvP,WAAWG,QAAjC,IAA4CkjB,EAAK9T,OAAOvP,WAAWG,QAAnE,SACAmjB,iBAAiB,EACjBC,gBAAA,iBAAkCzY,EAAKtJ,GAAvC,QACAgiB,iBAAiB,GAErBjmB,EAAS6C,EAAMijB,EAAK9T,SAGxB8R,EAAKzc,YAAYif,GAEjB,IAAM5nB,EAAU+J,EAAMnC,cAAc,MAEpCwd,EAAKzc,YAAY3I,GACjB0nB,EAAM/e,YAAYyc,GAElBgC,EAAKtX,SAASzO,SAASgkB,MAAMlhB,GAAQihB,IAGzCgB,EAAKzd,YAAY+e,GACjB5jB,EAAK6E,YAAYyd,GACjB9iB,EAAUqF,YAAY7E,GAEtBqG,KAAK2F,SAASzO,SAAS+kB,KAAOA,EAC9Bjc,KAAK2F,SAASzO,SAASyC,KAAOA,EA+BlC,OA3BIqG,KAAKmJ,OAAO7S,SAASwS,SAAS,QAAUxE,EAAQxL,KAChDK,EAAUqF,YAAYlI,EAASwiB,aAAavc,KAAKyD,KAAM,QAIvDA,KAAKmJ,OAAO7S,SAASwS,SAAS,YAAcxE,EAAQvL,SACpDI,EAAUqF,YAAYlI,EAASwiB,aAAavc,KAAKyD,KAAM,YAIvDA,KAAKmJ,OAAO7S,SAASwS,SAAS,eAC9B3P,EAAUqF,YAAYlI,EAASwiB,aAAavc,KAAKyD,KAAM,eAIvDA,KAAKmJ,OAAO7S,SAASwS,SAAS,eAC9B9I,KAAK2F,SAASxM,UAAUqF,YAAYlI,EAASwiB,aAAavc,KAAKyD,KAAM,eAGzEA,KAAK2F,SAASrP,SAAW6C,EAErB6G,KAAKkR,SACL5a,EAAS6kB,eAAe5e,KAAKyD,KAAMjM,EAAM4jB,kBAAkBpb,KAAKyD,OAGpE1J,EAASulB,aAAatf,KAAKyD,MAEpB7G,GAIX2c,OAnqCa,WAmqCJ,IAAA4H,EAAA1d,KAEL,GAAIA,KAAKmJ,OAAO5T,WAAY,CACxB,IAAM+iB,EAAOhiB,EAAS2hB,WAAW1b,KAAKyD,MAGlCsY,EAAKJ,UACLtY,EAAMrK,WAAW+iB,EAAKlW,IAAK,eAKnCpC,KAAK5E,GAAKmK,KAAKC,MAAsB,IAAhBD,KAAKE,UAG1B,IAAItM,EAAY,KAChB6G,KAAK2F,SAASrP,SAAW,KAIrB6C,EADAyG,EAAMC,GAAGa,OAAOV,KAAKmJ,OAAO7S,WAAasJ,EAAMC,GAAG2B,QAAQxB,KAAKmJ,OAAO7S,UAC1D0J,KAAKmJ,OAAO7S,SACjBsJ,EAAMC,GAAGiB,SAASd,KAAKmJ,OAAO7S,UAGzB0J,KAAKmJ,OAAO7S,SAAS,CAC7B8E,GAAI4E,KAAK5E,GACTuiB,SAAU3d,KAAKmJ,OAAOxU,SACtBJ,MAAOyL,KAAKmJ,OAAO5U,QAIX+B,EAAS0mB,OAAOzgB,KAAKyD,KAAM,CACnC5E,GAAI4E,KAAK5E,GACTuiB,SAAU3d,KAAKmJ,OAAOxU,SACtBqB,MAAOgK,KAAKhK,MACZL,QAASqK,KAAKrK,QACda,SAAUA,EAAS+e,SAAShZ,KAAKyD,QAOzC,IAAI2G,OAAAA,EA8BJ,GA3BI/G,EAAMC,GAAGa,OAAOV,KAAKmJ,OAAOlQ,UAAU3C,SAAS6C,aAC/CwN,EAAS3J,SAASiM,cAAcjJ,KAAKmJ,OAAOlQ,UAAU3C,SAAS6C,YAI9DyG,EAAMC,GAAG2B,QAAQmF,KAClBA,EAAS3G,KAAK2F,SAASxM,WAIvByG,EAAMC,GAAG2B,QAAQrI,GACjBwN,EAAOnI,YAAYrF,GACZA,GACPwN,EAAOyT,mBAAmB,YAAajhB,GAItCyG,EAAMC,GAAG2B,QAAQxB,KAAK2F,SAASrP,WAChCsJ,EAAMsJ,aAAa3M,KAAKyD,MAIxBE,OAAOxJ,UAAUmM,UAAUiG,SAAS,SACpClJ,EAAMyQ,QAAQ1J,GAId3G,KAAKmJ,OAAO9S,SAASC,SAAU,CAC/B,IAAM+C,EAASuG,EAAMmJ,YAAYxM,KAC7ByD,KACA,CACIA,KAAKmJ,OAAOlQ,UAAU3C,SAAS8C,QAC/B,IACA4G,KAAKmJ,OAAOlQ,UAAUI,OACtB,KACA2G,KAAKmJ,OAAOvP,WAAWa,QACzB2U,KAAK,KAGXlO,MAAM2E,KAAKxM,GAAQ0M,QAAQ,SAAAyP,GACvB5V,EAAMuI,YAAYqN,EAAOkI,EAAKvU,OAAOvP,WAAWa,QAAQ,GACxDmF,EAAMuI,YAAYqN,EAAOkI,EAAKvU,OAAOvP,WAAWW,SAAS,GACzDib,EAAMnR,aAAa,OAAQ,gBChwCrCsM,EAAU/Q,EAAM2C,aAEhBqb,EAAAA,WACF,SAAAA,EAAYxL,GAAQN,EAAA9R,KAAA4d,GAChB5d,KAAKoS,OAASA,EACdpS,KAAK6d,QAAU,KAEf7d,KAAK8d,UAAY9d,KAAK8d,UAAU7L,KAAKjS,MACrCA,KAAKgc,WAAahc,KAAKgc,WAAW/J,KAAKjS,MACvCA,KAAK+d,WAAa/d,KAAK+d,WAAW9L,KAAKjS,kDAIjC4B,GAAO,IAAAiR,EAAA7S,KACPge,EAAOpc,EAAMkI,QAAUlI,EAAMkI,QAAUlI,EAAMqc,MAC7CjT,EAAyB,YAAfpJ,EAAM5H,KAChBkkB,EAASlT,GAAWgT,IAAShe,KAAK6d,QAGxC,KAAIjc,EAAMuc,QAAUvc,EAAMwc,SAAWxc,EAAMyc,SAAWzc,EAAMmI,WAMvDnK,EAAMC,GAAGU,OAAOyd,GAArB,CAYA,GAAIhT,EAAS,CAET,IA2BM7U,EAAUyJ,EAAM2J,kBACtB,GAAI3J,EAAMC,GAAG2B,QAAQrL,IAAYyJ,EAAM6I,QAAQtS,EAAS6J,KAAKoS,OAAOjJ,OAAOlQ,UAAUC,UACjF,OASJ,OAtCuB,CACnB,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAYe4P,SAASkV,KACxBpc,EAAMqI,iBACNrI,EAAMwa,mBAGF4B,GACJ,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GAEIE,IAzDbrL,EAAKT,OAAOza,YAAckb,EAAKT,OAAOtd,SAAW,IAAMkpB,EAAO,KA4DtD,MAEJ,KAAK,GACL,KAAK,GAEIE,GACDle,KAAKoS,OAAOkM,aAEhB,MAEJ,KAAK,GAEDte,KAAKoS,OAAOmM,eAAe,IAC3B,MAEJ,KAAK,GAEDve,KAAKoS,OAAOoM,eAAe,IAC3B,MAEJ,KAAK,GAEIN,IACDle,KAAKoS,OAAOvd,OAASmL,KAAKoS,OAAOvd,OAErC,MAEJ,KAAK,GAEDmL,KAAKoS,OAAOqM,UACZ,MAEJ,KAAK,GAEDze,KAAKoS,OAAO/a,SACZ,MAEJ,KAAK,GAED2I,KAAKoS,OAAOvb,WAAWuR,SACvB,MAEJ,KAAK,GAEI8V,GACDle,KAAKoS,OAAOsM,iBAEhB,MAEJ,KAAK,GAED1e,KAAKoS,OAAOtc,MAAQkK,KAAKoS,OAAOtc,MAqBnCkK,KAAKoS,OAAOvb,WAAWvC,SAAW0L,KAAKoS,OAAOvb,WAAWd,QAAmB,KAATioB,GACpEhe,KAAKoS,OAAOvb,WAAWuR,SAI3BpI,KAAK6d,QAAUG,OAEfhe,KAAK6d,QAAU,yCAKZjc,GACPtL,EAAS0lB,WAAWzf,KAAKyD,KAAKoS,OAAQxQ,wCAKtC5B,KAAKoS,OAAOZ,OAAQ,EAGpB5R,EAAMuI,YAAYnI,KAAKoS,OAAOzM,SAASxM,UAAW6G,KAAKoS,OAAOjJ,OAAOvP,WAAWe,SAAS,GAGzFiF,EAAMuK,IAAInN,SAASkI,KAAM,aAAclF,KAAK+d,6CAI1B,IAAf3V,IAAelF,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,KAAAA,UAAA,GAEdlD,KAAKoS,OAAOjJ,OAAOjT,SAASE,QAC5BwJ,EAAMwK,eAAelK,OAAQ,gBAAiBF,KAAK8d,UAAW1V,GAAQ,GAI1ExI,EAAMwK,eAAepN,SAASkI,KAAM,QAASlF,KAAKgc,WAAY5T,GAG9DxI,EAAMsK,GAAGlN,SAASkI,KAAM,aAAclF,KAAK+d,gDAInC,IAAAzI,EAAAtV,MAEHA,KAAKoS,OAAOjJ,OAAOjT,SAASE,QAAU4J,KAAKoS,OAAOjJ,OAAOjT,SAASC,SACnEyJ,EAAMsK,GAAGlK,KAAKoS,OAAOzM,SAASxM,UAAW,gBAAiB6G,KAAK8d,WAAW,GAK9Ele,EAAMsK,GAAGlK,KAAKoS,OAAOzM,SAASxM,UAAW,WAAY,SAAAyI,GACjDhC,EAAMuI,YAAYvG,EAAM+E,OAAQ2O,EAAKlD,OAAOjJ,OAAOvP,WAAWsB,UAAU,KAI5E0E,EAAMsK,GAAGlK,KAAKoS,OAAOzM,SAASxM,UAAW,UAAW,SAAAyI,GAC1B,IAAlBA,EAAMkI,SAMVwG,WAAW,WACP1Q,EAAMuI,YAAYvI,EAAM2J,kBAAmB+L,EAAKlD,OAAOjJ,OAAOvP,WAAWsB,UAAU,IACpF,KAIH8E,KAAKoS,OAAOjJ,OAAO/T,cAEnBwK,EAAMsK,GAAGlK,KAAKoS,OAAOzM,SAASxM,UAAW,+FAAgG,SAAAyI,GACrI0T,EAAKlD,OAAOkE,eAAe1U,qCAM/B,IAAA+U,EAAA3W,KAwDJ,GAtDAJ,EAAMsK,GAAGlK,KAAKoS,OAAOnB,MAAO,qBAAsB,SAAArP,GAAA,OAAS8O,EAAGsF,WAAWzZ,KAAKoa,EAAKvE,OAAQxQ,KAG3FhC,EAAMsK,GAAGlK,KAAKoS,OAAOnB,MAAO,gCAAiC,SAAArP,GAAA,OAAS8O,EAAG6G,eAAehb,KAAKoa,EAAKvE,OAAQxQ,KAI1GhC,EAAMsK,GAAGlK,KAAKoS,OAAOnB,MAAO,aAAc,WACtCrR,EAAMwE,aAAauS,EAAKvE,OAAOzM,SAAS/Q,QAAS+hB,EAAKvE,OAAOuM,UAC7D/e,EAAMwE,aAAauS,EAAKvE,OAAOzM,SAASrM,QAAQ1B,MAAO+e,EAAKvE,OAAOuM,YAIvE/e,EAAMsK,GAAGlK,KAAKoS,OAAOnB,MAAO,QAAS,WAE7B0F,EAAKvE,OAAOlB,SAAWyF,EAAKvE,OAAOhB,SAAWuF,EAAKvE,OAAOjJ,OAAO9T,kBAEjEshB,EAAKvE,OAAOhb,UAGZuf,EAAKvE,OAAOnB,MAAM6G,UAK1BlY,EAAMsK,GAAGlK,KAAKoS,OAAOnB,MAAO,mBAAoB,SAAArP,GAAA,OAAS8O,EAAGyG,eAAe5a,KAAKoa,EAAKvE,OAAQxQ,KAG7FhC,EAAMsK,GAAGlK,KAAKoS,OAAOnB,MAAO,eAAgB,SAAArP,GAAA,OAAS8O,EAAGqF,aAAaxZ,KAAKoa,EAAKvE,OAAQxQ,KAGvFhC,EAAMsK,GAAGlK,KAAKoS,OAAOnB,MAAO,mCAAoC,SAAArP,GAAA,OAAS8O,EAAGuF,aAAa1Z,KAAKoa,EAAKvE,OAAQxQ,KAG3GhC,EAAMsK,GAAGlK,KAAKoS,OAAOnB,MAAO,iCAAkC,SAAArP,GAAA,OAAS8O,EAAG6F,aAAaha,KAAKoa,EAAKvE,OAAQxQ,KAOzGhC,EAAMsK,GAAGlK,KAAKoS,OAAOnB,MAAO,UAAW,WAC9B0F,EAAKvE,OAAOtY,KAKb6c,EAAKvE,OAAOtY,IAAIxF,UAAYqiB,EAAKvE,OAAOtY,IAAI8kB,aAE5CjI,EAAKvE,OAAOtY,IAAI+kB,eAAeha,KAAK,WAAA,OAAM8R,EAAKvE,OAAOtY,IAAIxC,SAAQ0N,MAAM,WAAA,OAAM2R,EAAKvE,OAAO9a,WAK9F0I,KAAKoS,OAAOnX,UAAUyV,IAAM1Q,KAAKoS,OAAOjJ,OAAOhU,cAAgB6K,KAAKoS,OAAOf,QAAS,CAEpF,IAAMjY,EAAUwG,EAAMoJ,WAAWzM,KAAKyD,KAAKoS,OAA3B,IAAuCpS,KAAKoS,OAAOjJ,OAAOvP,WAAWxF,OAGrF,IAAKwL,EAAMC,GAAG2B,QAAQpI,GAClB,OAIJwG,EAAMsK,GAAG9Q,EAAS,QAAS,WAEnBud,EAAKvE,OAAOjJ,OAAO/T,cAAgBuhB,EAAKvE,OAAOZ,QAAUmF,EAAKvE,OAAOiE,SAIrEM,EAAKvE,OAAOiE,OACZM,EAAKvE,OAAO9a,OACLqf,EAAKvE,OAAO0M,OACnBnI,EAAKvE,OAAOhb,UACZuf,EAAKvE,OAAO9a,QAEZqf,EAAKvE,OAAO7a,WAMpByI,KAAKoS,OAAOnX,UAAUyV,IAAM1Q,KAAKoS,OAAOjJ,OAAO7T,oBAC/CsK,EAAMsK,GACFlK,KAAKoS,OAAOzM,SAASvM,QACrB,cACA,SAAAwI,GACIA,EAAMqI,mBAEV,GAKRrK,EAAMsK,GAAGlK,KAAKoS,OAAOnB,MAAO,eAAgB,WAExC0F,EAAKvE,OAAOpb,QAAQ6gB,IAAI,CAAEjjB,OAAQ+hB,EAAKvE,OAAOxd,OAAQC,MAAO8hB,EAAKvE,OAAOvd,UAI7E+K,EAAMsK,GAAGlK,KAAKoS,OAAOnB,MAAO,aAAc,WAEtC3a,EAASolB,cAAcnf,KAAKoa,EAAKvE,OAAQ,SAGzCuE,EAAKvE,OAAOpb,QAAQ6gB,IAAI,CAAE7hB,MAAO2gB,EAAKvE,OAAOpc,UAIjD4J,EAAMsK,GAAGlK,KAAKoS,OAAOnB,MAAO,mBAAoB,SAAArP,GAE5C+U,EAAKvE,OAAOpb,QAAQ6gB,IAAI,CAAEliB,QAASiM,EAAMgJ,OAAOjV,YAIpDiK,EAAMsK,GAAGlK,KAAKoS,OAAOnB,MAAO,gBAAiB,SAAArP,GAEzCtL,EAASolB,cAAcnf,KAAKoa,EAAKvE,OAAQ,UAAW,KAAMxQ,EAAMgJ,OAAOjV,WAI3EiK,EAAMsK,GAAGlK,KAAKoS,OAAOnB,MAAO,iBAAkB,WAE1C3a,EAASolB,cAAcnf,KAAKoa,EAAKvE,OAAQ,YAGzCuE,EAAKvE,OAAOpb,QAAQ6gB,IAAI,CAAEphB,SAAUkgB,EAAKvE,OAAO3b,aAIpDmJ,EAAMsK,GAAGlK,KAAKoS,OAAOnB,MAAO,mCAAoC,WAE5D3a,EAASolB,cAAcnf,KAAKoa,EAAKvE,OAAQ,YAGzCuE,EAAKvE,OAAOpb,QAAQ6gB,IAAI,CAAErhB,SAAUmgB,EAAKvE,OAAO5b,SAAST,WAK7D6J,EAAMsK,GAAGlK,KAAKoS,OAAOnB,MAAOjR,KAAKoS,OAAOjJ,OAAOnQ,OAAOsU,OAAO,CACzD,QACA,YACD8B,KAAK,KAAM,SAAAxN,GACV,IAAIgJ,EAAS,GAGM,UAAfhJ,EAAM5H,OACN4Q,EAAS+L,EAAKvE,OAAOnB,MAAM5W,OAG/BuF,EAAM8K,cAAcnO,KAAKoa,EAAKvE,OAAQuE,EAAKvE,OAAOzM,SAASxM,UAAWyI,EAAM5H,MAAM,EAAM4Q,wCAKrF,IAAAkR,EAAA9b,KAED+e,EAAapO,EAAQnO,KAAO,SAAW,QAGvCwc,EAAQ,SAACpd,EAAOqd,EAAgBC,GAClC,IAAMC,EAAgBrD,EAAK1J,OAAOjJ,OAAOtQ,UAAUqmB,GAE/CE,GAAW,EADUxf,EAAMC,GAAGiB,SAASqe,KAKvCC,EAAWD,EAAc5iB,KAAKuf,EAAK1J,OAAQxQ,IAI3Cwd,GAAYxf,EAAMC,GAAGiB,SAASme,IAC9BA,EAAe1iB,KAAKuf,EAAK1J,OAAQxQ,IAKnCsI,EAAK,SAAC1I,EAASxH,EAAMilB,EAAgBC,GAAqC,IAAnB5U,IAAmBpH,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,KAAAA,UAAA,GACtEic,EAAgBrD,EAAK1J,OAAOjJ,OAAOtQ,UAAUqmB,GAC7CG,EAAmBzf,EAAMC,GAAGiB,SAASqe,GAE3Cvf,EAAMsK,GAAG1I,EAASxH,EAAM,SAAA4H,GAAA,OAASod,EAAMpd,EAAOqd,EAAgBC,IAAmB5U,IAAY+U,IAIjGnV,EAAGlK,KAAKoS,OAAOzM,SAASrM,QAAQhC,KAAM,QAAS0I,KAAKoS,OAAOkM,WAAY,QAGvEpU,EAAGlK,KAAKoS,OAAOzM,SAASrM,QAAQlC,QAAS,QAAS4I,KAAKoS,OAAOhb,QAAS,WAGvE8S,EAAGlK,KAAKoS,OAAOzM,SAASrM,QAAQjC,OAAQ,QAAS2I,KAAKoS,OAAO/a,OAAQ,UAGrE6S,EAAGlK,KAAKoS,OAAOzM,SAASrM,QAAQ9B,YAAa,QAASwI,KAAKoS,OAAOqM,QAAS,eAG3EvU,EACIlK,KAAKoS,OAAOzM,SAASrM,QAAQ1B,KAC7B,QACA,WACIkkB,EAAK1J,OAAOvd,OAASinB,EAAK1J,OAAOvd,OAErC,QAIJqV,EAAGlK,KAAKoS,OAAOzM,SAASrM,QAAQ9C,SAAU,QAASwJ,KAAKoS,OAAOsM,gBAG/DxU,EACIlK,KAAKoS,OAAOzM,SAASrM,QAAQzC,WAC7B,QACA,WACIilB,EAAK1J,OAAOvb,WAAWuR,UAE3B,cAIJ8B,EACIlK,KAAKoS,OAAOzM,SAASrM,QAAQR,IAC7B,QACA,WACIgjB,EAAK1J,OAAOtZ,IAAM,UAEtB,OAIJoR,EAAGlK,KAAKoS,OAAOzM,SAASrM,QAAQP,QAAS,QAASiH,KAAKoS,OAAOrZ,QAAS,WAGvEmR,EAAGlK,KAAKoS,OAAOzM,SAASrM,QAAQpC,SAAU,QAAS,SAAA0K,GAC/CtL,EAAS0lB,WAAWzf,KAAKuf,EAAK1J,OAAQxQ,KAI1CsI,EAAGlK,KAAKoS,OAAOzM,SAASzO,SAAS+kB,KAAM,QAAS,SAAAra,GAC5CA,EAAMwa,kBAGFxc,EAAM6I,QAAQ7G,EAAM+E,OAAQmV,EAAK1J,OAAOjJ,OAAOlQ,UAAUM,OAAO9C,UAChEuoB,EACIpd,EACA,WACIka,EAAK1J,OAAO3b,SAAWmL,EAAM+E,OAAO7L,OAExC,YAEG8E,EAAM6I,QAAQ7G,EAAM+E,OAAQmV,EAAK1J,OAAOjJ,OAAOlQ,UAAUM,OAAO5D,SACvEqpB,EACIpd,EACA,WACIka,EAAK1J,OAAOzc,QAAUiM,EAAM+E,OAAO7L,OAEvC,WAEG8E,EAAM6I,QAAQ7G,EAAM+E,OAAQmV,EAAK1J,OAAOjJ,OAAOlQ,UAAUM,OAAOvD,OACvEgpB,EACIpd,EACA,WACIka,EAAK1J,OAAOpc,MAAQ4kB,WAAWhZ,EAAM+E,OAAO7L,QAEhD,SAGJxE,EAASqmB,QAAQpgB,KAAKuf,EAAK1J,OAAQxQ,KAK3CsI,EACIlK,KAAKoS,OAAOzM,SAASpM,OAAOhD,KAC5BwoB,EACA,SAAAnd,GACIka,EAAK1J,OAAOza,YAAciK,EAAM+E,OAAO7L,MAAQ8G,EAAM+E,OAAO0E,IAAMyQ,EAAK1J,OAAOtd,UAElF,QAKAkL,KAAKoS,OAAOjJ,OAAOlU,eAAiB2K,EAAMC,GAAG2B,QAAQxB,KAAKoS,OAAOzM,SAASnM,QAAQ1E,WAClFoV,EAAGlK,KAAKoS,OAAOzM,SAASnM,QAAQ7B,YAAa,QAAS,WAElB,IAA5BmkB,EAAK1J,OAAOza,cAIhBmkB,EAAK1J,OAAOjJ,OAAOnU,YAAc8mB,EAAK1J,OAAOjJ,OAAOnU,WACpD0b,EAAGsF,WAAWzZ,KAAKuf,EAAK1J,WAKhClI,EACIlK,KAAKoS,OAAOzM,SAASpM,OAAO3E,OAC5BmqB,EACA,SAAAnd,GACIka,EAAK1J,OAAOxd,OAASgN,EAAM+E,OAAO7L,OAEtC,UAIA6V,EAAQjO,UACRwH,EAAGtK,EAAMmJ,YAAYxM,KAAKyD,KAAKoS,OAAQ,uBAAwB,QAAS,SAAAxQ,GACpEtL,EAASygB,gBAAgBxa,KAAKuf,EAAK1J,OAAQxQ,EAAM+E,UAKzDuD,EAAGlK,KAAKoS,OAAOzM,SAASjM,SAAU,kCAAmC,SAAAkI,GAAA,OAAStL,EAASmhB,kBAAkBlb,KAAKuf,EAAK1J,OAAQxQ,KAGvH5B,KAAKoS,OAAOjJ,OAAO/T,eAEnB8U,EAAGlK,KAAKoS,OAAOzM,SAASrP,SAAU,wBAAyB,SAAAsL,GACvDka,EAAK1J,OAAOzM,SAASrP,SAASgE,OAASwhB,EAAK1J,OAAOZ,OAAwB,eAAf5P,EAAM5H,OAItEkQ,EAAGlK,KAAKoS,OAAOzM,SAASrP,SAAU,oDAAqD,SAAAsL,GACnFka,EAAK1J,OAAOzM,SAASrP,SAAS0U,QAAU,CACpC,YACA,cACFlC,SAASlH,EAAM5H,QAIrBkQ,EAAGlK,KAAKoS,OAAOzM,SAASrP,SAAU,mBAAoB,SAAAsL,GAClDka,EAAK1J,OAAOkE,eAAe1U,MAKnCsI,EACIlK,KAAKoS,OAAOzM,SAASpM,OAAO3E,OAC5B,QACA,SAAAgN,GAGI,IAAMkK,EAAWlK,EAAM0d,kCAEnBC,EAAY,GAGZ3d,EAAM4d,OAAS,GAAK5d,EAAM6d,OAAS,KAC/B3T,GACAgQ,EAAK1J,OAAOoM,eANP,KAOLe,GAAa,IAEbzD,EAAK1J,OAAOmM,eATP,KAULgB,EAAY,KAKhB3d,EAAM4d,OAAS,GAAK5d,EAAM6d,OAAS,KAC/B3T,GACAgQ,EAAK1J,OAAOmM,eAjBP,KAkBLgB,EAAY,IAEZzD,EAAK1J,OAAOoM,eApBP,KAqBLe,GAAa,KAKF,IAAdA,GAAmBzD,EAAK1J,OAAOnB,MAAMrc,OAAS,IAAsB,IAAf2qB,GAAoBzD,EAAK1J,OAAOnB,MAAMrc,OAAS,IACrGgN,EAAMqI,kBAGd,UACA,mCAMJjK,KAAK5J,QAAO,SA/mBdwnB,GCLA8B,EAAAA,WACF,SAAAA,EAAYtN,GAAQN,EAAA9R,KAAA0f,GAChB1f,KAAK1L,QAAU8d,EAAOjJ,OAAOnS,QAAQ1C,QACrC0L,KAAK/I,IAAMmb,EAAOjJ,OAAOnS,QAAQC,0CAuBjCA,GACA,IAAKyoB,EAAQzkB,UACT,OAAO,KAGX,IAAM0kB,EAAQzf,OAAOsE,aAAaC,QAAQzE,KAAK/I,KAE/C,GAAI2I,EAAMC,GAAGwC,MAAMsd,GACf,OAAO,KAGX,IAAMC,EAAOnc,KAAKC,MAAMic,GAExB,OAAO/f,EAAMC,GAAGa,OAAOzJ,IAAQA,EAAIiF,OAAS0jB,EAAK3oB,GAAO2oB,8BAGxDxf,GAEA,GAAKsf,EAAQzkB,WAAc+E,KAAK1L,SAK3BsL,EAAMC,GAAGO,OAAOA,GAArB,CAKA,IAAIpJ,EAAUgJ,KAAKuR,MAGf3R,EAAMC,GAAGwC,MAAMrL,KACfA,EAAU,IAId4I,EAAMkN,OAAO9V,EAASoJ,GAGtBF,OAAOsE,aAAaM,QAAQ9E,KAAK/I,IAAKwM,KAAKsB,UAAU/N,yCAzDrD,IACI,KAAM,iBAAkBkJ,QACpB,OAAO,EAUX,OAHAA,OAAOsE,aAAaM,QAJP,UAAA,WAKb5E,OAAOsE,aAAaqb,WALP,YAON,EACT,MAAO/iB,GACL,OAAO,SAtBb4iB,GCKAI,EAAAA,WAMF,SAAAA,EAAY1N,GAAQ,IAAAS,EAAA7S,KAAA8R,EAAA9R,KAAA8f,GAChB9f,KAAKoS,OAASA,EACdpS,KAAKzE,YAAc6W,EAAOjJ,OAAOrP,IAAIyB,YACrCyE,KAAK1L,QAAU8d,EAAOlB,SAAWkB,EAAOhB,SAAWgB,EAAOjJ,OAAOrP,IAAIxF,SAAWsL,EAAMC,GAAGa,OAAOV,KAAKzE,cAAgByE,KAAKzE,YAAYW,OACtI8D,KAAK7F,SAAU,EACf6F,KAAK4e,aAAc,EACnB5e,KAAK2F,SAAW,CACZxM,UAAW,KACX4mB,iBAAkB,MAEtB/f,KAAKggB,QAAU,KACfhgB,KAAKigB,OAAS,KACdjgB,KAAKkgB,UAAY,KACjBlgB,KAAKhH,OAAS,GACdgH,KAAKmgB,YAAc,KACnBngB,KAAKogB,eAAiB,KAGtBpgB,KAAK6e,eAAiB,IAAI1b,QAAQ,SAACC,EAASC,GAExCwP,EAAK3I,GAAG,SAAU9G,GAGlByP,EAAK3I,GAAG,QAAS7G,KAGrBrD,KAAK8X,gDAMF,IAAAxC,EAAAtV,KACCA,KAAK1L,UAEAsL,EAAMC,GAAGO,OAAOF,OAAO5E,SAAYsE,EAAMC,GAAGO,OAAOF,OAAO5E,OAAO+kB,KAWlErgB,KAAKb,QAVLS,EACKoE,WAAWhE,KAAKoS,OAAOjJ,OAAOzQ,KAAKE,UAAUD,KAC7CkM,KAAK,WACFyQ,EAAKnW,UAER6F,MAAM,WAEHsQ,EAAKgL,QAAQ,QAAS,IAAIzc,MAAM,qEAW5C,IAAA8S,EAAA3W,KAGJA,KAAKugB,iBAAiB,KAAO,WAG7BvgB,KAAK6e,eAAeha,KAAK,WACrB8R,EAAK6J,iBAAiB,0BAI1BxgB,KAAKnH,YAGLmH,KAAKygB,8CA8BLzgB,KAAK2F,SAASxM,UAAYyG,EAAMnC,cAAc,MAAO,CACjDyK,MAAOlI,KAAKoS,OAAOjJ,OAAOvP,WAAWE,MAEzCkG,KAAKoS,OAAOzM,SAASxM,UAAUqF,YAAYwB,KAAK2F,SAASxM,WAGzDmC,OAAO+kB,IAAInpB,SAASwpB,aAAaplB,OAAO+kB,IAAIM,eAAeC,UAAUC,SAGrEvlB,OAAO+kB,IAAInpB,SAAS4pB,UAAU9gB,KAAKoS,OAAOjJ,OAAOrP,IAAIrD,UAIrDuJ,KAAK2F,SAASoa,iBAAmB,IAAIzkB,OAAO+kB,IAAIU,mBAAmB/gB,KAAK2F,SAASxM,WAGjF6G,KAAKghB,kDAMI,IAAAlF,EAAA9b,KACD7G,EAAc6G,KAAKoS,OAAOzM,SAA1BxM,UAER,IAEI6G,KAAKigB,OAAS,IAAI3kB,OAAO+kB,IAAIY,UAAUjhB,KAAK2F,SAASoa,kBAGrD/f,KAAKigB,OAAOzc,iBAAiBlI,OAAO+kB,IAAIa,sBAAsBC,KAAKC,mBAAoB,SAAAxf,GAAA,OAASka,EAAKuF,mBAAmBzf,KAAQ,GAChI5B,KAAKigB,OAAOzc,iBAAiBlI,OAAO+kB,IAAIiB,aAAaH,KAAKI,SAAU,SAAAlnB,GAAA,OAASyhB,EAAK0F,UAAUnnB,KAAQ,GAGpG,IAAMiJ,EAAU,IAAIhI,OAAO+kB,IAAIoB,WAC/Bne,EAAQoe,SAAW1hB,KAAK2hB,OAIxBre,EAAQse,kBAAoBzoB,EAAU0oB,YACtCve,EAAQwe,mBAAqB3oB,EAAUoX,aACvCjN,EAAQye,qBAAuB5oB,EAAU0oB,YACzCve,EAAQ0e,sBAAwB7oB,EAAUoX,aAG1CjN,EAAQ2e,wBAAyB,EAEjCjiB,KAAKigB,OAAOe,WAAW1d,GACzB,MAAOxG,GACLkD,KAAKwhB,UAAU1kB,4CAQM,IAAAmgB,EAAAjd,KACzB,KADyBkD,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,IAAAA,UAAA,IAIrB,OAFAgf,cAAcliB,KAAKogB,qBACnBpgB,KAAK2F,SAASxM,UAAUqP,gBAAgB,mBAU5CxI,KAAKogB,eAAiB+B,YANP,WACX,IAAMvW,EAAOhM,EAAM+L,WAAWpG,KAAK8F,IAAI4R,EAAK+C,QAAQoC,mBAAoB,IAClE5M,EAAWre,EAAS,gBAAiB8lB,EAAK7K,OAAOjJ,QAAjD,MAA8DyC,EACpEqR,EAAKtX,SAASxM,UAAUkL,aAAa,kBAAmBmR,IAGlB,gDAO3B5T,GAAO,IAAA8b,EAAA1d,KAEhB9I,EAAW,IAAIoE,OAAO+kB,IAAIgC,qBAGhCnrB,EAASorB,6CAA8C,EACvDprB,EAASqrB,kBAAmB,EAI5BviB,KAAKggB,QAAUpe,EAAM4gB,cAAcxiB,KAAKoS,OAAQlb,GAGhD8I,KAAKkgB,UAAYlgB,KAAKggB,QAAQyC,eAGzB7iB,EAAMC,GAAGwC,MAAMrC,KAAKkgB,YACrBlgB,KAAKkgB,UAAUna,QAAQ,SAAA2c,GACnB,GAAiB,IAAbA,IAAgC,IAAdA,GAAmBA,EAAWhF,EAAKtL,OAAOtd,SAAU,CACtE,IAAM6tB,EAAcjF,EAAKtL,OAAOzM,SAASjM,SAEzC,GAAIkG,EAAMC,GAAG2B,QAAQmhB,GAAc,CAC/B,IAAMC,EAAgB,IAAMlF,EAAKtL,OAAOtd,SAAW4tB,EAC7C5gB,EAAMlC,EAAMnC,cAAc,OAAQ,CACpCyK,MAAOwV,EAAKtL,OAAOjJ,OAAOvP,WAAWY,OAGzCsH,EAAIc,MAAM+X,KAAUiI,EAAcrW,WAAlC,IACAoW,EAAYnkB,YAAYsD,OAWxC9B,KAAKggB,QAAQ6C,UAAU7iB,KAAKoS,OAAOxd,QAInCoL,KAAKggB,QAAQxc,iBAAiBlI,OAAO+kB,IAAIiB,aAAaH,KAAKI,SAAU,SAAAlnB,GAAA,OAASqjB,EAAK8D,UAAUnnB,KAG7FiG,OAAOjF,KAAKC,OAAO+kB,IAAIyC,QAAQ3B,MAAMpb,QAAQ,SAAA/L,GACzC0jB,EAAKsC,QAAQxc,iBAAiBlI,OAAO+kB,IAAIyC,QAAQ3B,KAAKnnB,GAAO,SAAA4H,GAAA,OAAS8b,EAAKqF,UAAUnhB,OAIzF5B,KAAKsgB,QAAQ,4CASP1e,GAAO,IAAAohB,EAAAhjB,KACL7G,EAAc6G,KAAKoS,OAAOzM,SAA1BxM,UAIF8pB,EAAKrhB,EAAMshB,QAGXxY,EAAgB,SAAA1Q,GAClB,IAAM4H,EAAAA,MAAc5H,EAAKuD,QAAQ,KAAM,IAAIoP,cAC3C/M,EAAM8K,cAAcnO,KAAKymB,EAAK5Q,OAAQ4Q,EAAK5Q,OAAOnB,MAAOrP,IAG7D,OAAQA,EAAM5H,MACV,KAAKsB,OAAO+kB,IAAIyC,QAAQ3B,KAAKgC,OAGzBnjB,KAAKsgB,QAAQ,UAGb5V,EAAc9I,EAAM5H,MAGpBgG,KAAKojB,eAAc,GAEdH,EAAGI,aAEJJ,EAAGtT,MAAQxW,EAAU0oB,YACrBoB,EAAGrT,OAASzW,EAAUoX,cAK1B,MAEJ,KAAKjV,OAAO+kB,IAAIyC,QAAQ3B,KAAKmC,kBAKzB5Y,EAAc9I,EAAM5H,MAyBpBgG,KAAKujB,UACL,MAEJ,KAAKjoB,OAAO+kB,IAAIyC,QAAQ3B,KAAKqC,wBAKzB9Y,EAAc9I,EAAM5H,MAEpBgG,KAAKyjB,eAEL,MAEJ,KAAKnoB,OAAO+kB,IAAIyC,QAAQ3B,KAAKuC,yBAMzBhZ,EAAc9I,EAAM5H,MAEpBgG,KAAKojB,gBAELpjB,KAAK2jB,gBAEL,MAEJ,KAAKroB,OAAO+kB,IAAIyC,QAAQ3B,KAAKyC,QAC7B,KAAKtoB,OAAO+kB,IAAIyC,QAAQ3B,KAAK0C,SAC7B,KAAKvoB,OAAO+kB,IAAIyC,QAAQ3B,KAAK2C,SAC7B,KAAKxoB,OAAO+kB,IAAIyC,QAAQ3B,KAAK4C,WAC7B,KAAKzoB,OAAO+kB,IAAIyC,QAAQ3B,KAAK6C,MACzBtZ,EAAc9I,EAAM5H,yCAYtB4H,GACN5B,KAAKikB,SACLjkB,KAAKoS,OAAO5d,MAAM6U,KAAK,YAAazH,uCAQ5B,IAAAsiB,EAAAlkB,KACA7G,EAAc6G,KAAKoS,OAAOzM,SAA1BxM,UACJyS,OAAAA,EAGJ5L,KAAKoS,OAAOlI,GAAG,QAAS,WACpBga,EAAKjE,OAAOkE,oBAGhBnkB,KAAKoS,OAAOlI,GAAG,UAAW,WAEtB,OADA0B,EAAOsY,EAAK9R,OAAOza,cAIvBqI,KAAKoS,OAAOlI,GAAG,SAAU,WACrB,IAAMka,EAAaF,EAAK9R,OAAOza,YAE3BiI,EAAMC,GAAGwC,MAAM6hB,EAAKhE,YAIxBgE,EAAKhE,UAAUna,QAAQ,SAAC2c,EAAU1c,GAC1B4F,EAAO8W,GAAYA,EAAW0B,IAC9BF,EAAKlE,QAAQqE,iBACbH,EAAKhE,UAAU/jB,OAAO6J,EAAO,QAOzC9F,OAAOsD,iBAAiB,SAAU,WAC1B0gB,EAAKlE,SACLkE,EAAKlE,QAAQsE,OAAOnrB,EAAU0oB,YAAa1oB,EAAUoX,aAAcjV,OAAO+kB,IAAIkE,SAASC,yCAQ5F,IAAAC,EAAAzkB,KACK7G,EAAc6G,KAAKoS,OAAOzM,SAA1BxM,UAEH6G,KAAK6e,gBACN7e,KAAK2jB,gBAIT3jB,KAAK6e,eACAha,KAAK,WAEF4f,EAAK9e,SAASoa,iBAAiB2E,aAE/B,IACSD,EAAK7F,cAEN6F,EAAKzE,QAAQ2E,KAAKxrB,EAAU0oB,YAAa1oB,EAAUoX,aAAcjV,OAAO+kB,IAAIkE,SAASC,QAIrFC,EAAKzE,QAAQ5nB,SAGjBqsB,EAAK7F,aAAc,EACrB,MAAOgG,GAGLH,EAAKjD,UAAUoD,MAGtB5f,MAAM,sDAQXhF,KAAK2F,SAASxM,UAAUyJ,MAAMiiB,OAAS,GAGvC7kB,KAAK7F,SAAU,EAGX6F,KAAKoS,OAAOza,YAAcqI,KAAKoS,OAAOtd,UACtCkL,KAAKoS,OAAO9a,8CAShB0I,KAAK2F,SAASxM,UAAUyJ,MAAMiiB,OAAS,EAGvC7kB,KAAK7F,SAAU,EAGf6F,KAAKoS,OAAO7a,yCAWRyI,KAAK4e,aACL5e,KAAK2jB,gBAIT3jB,KAAKsgB,QAAQ,SAGbtgB,KAAKujB,4CAMC,IAAAuB,EAAA9kB,KAENA,KAAK6e,eACAha,KAAK,WAEEigB,EAAK9E,SACL8E,EAAK9E,QAAQ+E,UAIjBD,EAAKjG,eAAiB,IAAI1b,QAAQ,SAAAC,GAC9B0hB,EAAK5a,GAAG,SAAU9G,GAClB0hB,EAAK1S,OAAO5d,MAAMwd,IAAI8S,EAAK9E,WAI/B8E,EAAK9D,eAERhc,MAAM,8CAOPpD,GAAgB,IAAA,IAAAojB,EAAAhlB,KAAA+M,EAAA7J,UAAAhH,OAANG,EAAM6E,MAAA6L,EAAA,EAAAA,EAAA,EAAA,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAN5Q,EAAM4Q,EAAA,GAAA/J,UAAA+J,GACpB,IAAMgY,EAAWjlB,KAAKhH,OAAO4I,GAEzBhC,EAAMC,GAAGmB,MAAMikB,IACfA,EAASlf,QAAQ,SAAAmf,GACTtlB,EAAMC,GAAGiB,SAASokB,IAClBA,EAAQ7X,MAAM2X,EAAM3oB,gCAYjCuF,EAAOyI,GAON,OANKzK,EAAMC,GAAGmB,MAAMhB,KAAKhH,OAAO4I,MAC5B5B,KAAKhH,OAAO4I,GAAS,IAGzB5B,KAAKhH,OAAO4I,GAAO3C,KAAKoL,GAEjBrK,8CAWM4L,EAAM/F,GAAM,IAAAsf,EAAAnlB,KACzBA,KAAKoS,OAAO5d,MAAMwd,IAAlB,8BAAoDnM,GAEpD7F,KAAKmgB,YAAc7P,WAAW,WAC1B6U,EAAKlB,SACLkB,EAAK3E,iBAAiB,uBACvB5U,4CAOU/F,GACRjG,EAAMC,GAAGoB,gBAAgBjB,KAAKmgB,eAC/BngB,KAAKoS,OAAO5d,MAAMwd,IAAlB,8BAAoDnM,GAEpD2Q,aAAaxW,KAAKmgB,aAClBngB,KAAKmgB,YAAc,qCAvevB,IAAMxR,EAAS,CACXyW,eAAgB,2BAChBC,aAAc,2BACdC,OAAQ7Q,SAASD,SACjB+Q,GAAIC,KAAKC,MACTC,SAAU,IACVC,UAAW,IACXC,SAAU5lB,KAAKzE,aAKnB,MAAUsqB,8CAAQjmB,EAAMqP,eAAeN,SA3FzCmR,GCFN,SAASgG,EAAe/lB,GACpB,OAAQA,GACJ,IAAK,SACD,OAAO,KAEX,KAAK,KACD,MAAO,SAEX,IAAK,SACD,OAAO,KAEX,KAAK,KACD,MAAO,SAEX,IAAK,SACD,OAAO,KAEX,KAAK,KACD,MAAO,SAEX,IAAK,QACD,OAAO,IAEX,KAAK,IACD,MAAO,QAEX,IAAK,QACD,OAAO,IAEX,KAAK,IACD,MAAO,QAEX,IAAK,SACD,OAAO,IAEX,KAAK,IACD,MAAO,SAEX,IAAK,QACD,OAAO,IAEX,KAAK,IACD,MAAO,QAEX,QACI,MAAO,WAYnB,IAAM/L,EAAU,CACZigB,MADY,WACJ,IAAApB,EAAA7S,KAEJJ,EAAMuI,YAAYnI,KAAK2F,SAASvM,QAAS4G,KAAKmJ,OAAOvP,WAAWC,OAAO,GAGvE7F,EAAQ+xB,eAAexpB,KAAKyD,MAGxBJ,EAAMC,GAAGO,OAAOF,OAAO8lB,KAAOpmB,EAAMC,GAAGiB,SAASZ,OAAO8lB,GAAGC,QAC1DjyB,EAAQmL,MAAM5C,KAAKyD,OAGnBJ,EAAMoE,WAAWhE,KAAKmJ,OAAOzQ,KAAK1E,QAAQ2E,KAAKqM,MAAM,SAAA3K,GACjDwY,EAAKre,MAAM6U,KAAK,6BAA8BhP,KAKlD6F,OAAOgmB,wBAA0BhmB,OAAOgmB,yBAA2B,GAGnEhmB,OAAOgmB,wBAAwBjnB,KAAK,WAChCjL,EAAQmL,MAAM5C,KAAKsW,KAIvB3S,OAAOimB,wBAA0B,WAC7BjmB,OAAOgmB,wBAAwBngB,QAAQ,SAAAsE,GACnCA,SAOhB+b,SApCY,SAoCHC,GAAS,IAAA/Q,EAAAtV,KAId,GAAIJ,EAAMC,GAAGiB,SAASd,KAAKnG,MAAMysB,cAAe,CAAA,IACpC/xB,EAAUyL,KAAKnG,MAAMysB,eAArB/xB,MAER,GAAIqL,EAAMC,GAAGwC,MAAM9N,GAGf,OAFAyL,KAAKmJ,OAAO5U,MAAQA,OACpBmc,EAAGwF,SAAS3Z,KAAKyD,MAMzB,IAAM/I,EAAM+I,KAAKmJ,OAAO9N,KAAKC,OAC7B,GAAIsE,EAAMC,GAAGa,OAAOzJ,KAAS2I,EAAMC,GAAGwC,MAAMpL,GAAM,CAC9C,IAAMmL,EAAAA,mDAAyDikB,EAAzD,QAAwEpvB,EAAxE,6CAEN2I,EACKoD,MAAMZ,GACNyC,KAAK,SAAA3G,GACE0B,EAAMC,GAAGO,OAAOlC,KAChBoX,EAAKnM,OAAO5U,MAAQ2J,EAAOqoB,MAAM,GAAGC,QAAQjyB,MAC5Cmc,EAAGwF,SAAS3Z,KAAK+Y,MAGxBtQ,MAAM,gBAKnB+gB,eApEY,WAqER,IAAM7wB,EAAQ8K,KAAKmJ,OAAOjU,MAAM0B,MAAM,KACtCoJ,KAAK2F,SAASvM,QAAQwJ,MAAM6jB,cAAmB,IAAMvxB,EAAM,GAAKA,EAAM,GAAtE,KAIJiK,MA1EY,WA2ER,IAAMiT,EAASpS,KAGT0mB,EAAYtU,EAAOnB,MAAMhG,aAAa,MAC5C,GAAKrL,EAAMC,GAAGwC,MAAMqkB,KAAcA,EAAUhY,WAAW,YAAvD,CAKA,IAAIxB,EAASkF,EAAOnB,MAAMhG,aAAa,OAGnCrL,EAAMC,GAAGwC,MAAM6K,KACfA,EAASkF,EAAOnB,MAAMhG,aAAajL,KAAKmJ,OAAOhO,WAAWtB,MAAMuB,KAIpE,IAAMirB,EAAUzmB,EAAMsO,eAAehB,GAC/B9R,EAAKwE,EAAMyF,WAAW+M,EAAOnY,UAC7Bd,EAAYyG,EAAMnC,cAAc,MAAO,CAAErC,GAAAA,IAC/CgX,EAAOnB,MAAQrR,EAAMqH,eAAe9N,EAAWiZ,EAAOnB,OAItDmB,EAAOvY,MAAQ,IAAIqG,OAAO8lB,GAAGC,OAAO7qB,EAAI,CACpCirB,QAAAA,EACAM,WAAY,CACRlyB,SAAU2d,EAAOjJ,OAAO1U,SAAW,EAAI,EACvC6B,SAAU8b,EAAOnX,UAAUyV,GAAK,EAAI,EACpChT,IAAK,EACLkpB,SAAU,EACVC,eAAgB,EAChBC,eAAgB,EAChBC,UAAW,EACXtW,YAAa,EAIbuW,gBAAiB9mB,OAASA,OAAOuU,SAAS9W,KAAO,KAGjDspB,eAAgB7U,EAAO5b,SAAST,OAAS,EAAI,EAC7CmxB,aAAc9U,EAAOjJ,OAAO3S,SAASC,UAEzCuC,OAAQ,CACJmuB,QADI,SACIvlB,GAGJ,IAAIhC,EAAMC,GAAGO,OAAOgS,EAAOnB,MAAM5W,OAAjC,CAIA,IAAMuQ,EAAS,CACXoT,KAAMpc,EAAM8C,MAIhB,OAAQ9C,EAAM8C,MACV,KAAK,EACDkG,EAAOwc,QACH,uOACJ,MAEJ,KAAK,EACDxc,EAAOwc,QACH,uHACJ,MAEJ,KAAK,IACDxc,EAAOwc,QACH,qIACJ,MAEJ,KAAK,IACL,KAAK,IACDxc,EAAOwc,QAAU,uFACjB,MAEJ,QACIxc,EAAOwc,QAAU,2BAIzBhV,EAAOnB,MAAM5W,MAAQuQ,EAErBhL,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,WAEnDoW,wBA3CI,WA4CAznB,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,iBAAiB,EAAO,CACnEtb,QAASyc,EAAOnB,MAAMtb,WAG9B2xB,qBAhDI,SAgDiB1lB,GAEjB,IAAM2lB,EAAW3lB,EAAM+E,OAGvByL,EAAOnB,MAAMuW,aAAeD,EAASE,kBAErC7nB,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,eAEnDyW,QAzDI,SAyDI9lB,GAEJ,IAAM2lB,EAAW3lB,EAAM+E,OAGvB3S,EAAQoyB,SAAS7pB,KAAK6V,EAAQiU,GAG9BjU,EAAOnB,MAAM3Z,KAAO,WAChBiwB,EAASI,aAGbvV,EAAOnB,MAAM1Z,MAAQ,WACjBgwB,EAASK,cAGbxV,EAAOnB,MAAM4W,KAAO,WAChBN,EAASO,aAGb1V,EAAOnB,MAAMnc,SAAWyyB,EAASQ,cACjC3V,EAAOnB,MAAMoF,QAAS,EAGtBjE,EAAOnB,MAAMtZ,YAAc,EAC3B2I,OAAO8M,eAAegF,EAAOnB,MAAO,cAAe,CAC/CM,IAD+C,WAE3C,OAAO/Q,OAAO+mB,EAASS,mBAE3BnQ,IAJ+C,SAI3CjM,GAAM,IAEEyK,EAAWjE,EAAOnB,MAAlBoF,OAGRjE,EAAOnB,MAAMqG,SAAU,EAGvB1X,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,WAG/CsW,EAASU,OAAOrc,GAGZyK,GACAjE,EAAO7a,WAMnB+I,OAAO8M,eAAegF,EAAOnB,MAAO,eAAgB,CAChDM,IADgD,WAE5C,OAAOgW,EAASE,mBAEpB5P,IAJgD,SAI5C9X,GACAwnB,EAASW,gBAAgBnoB,MAKjCO,OAAO8M,eAAegF,EAAOnB,MAAO,UAAW,CAC3CM,IAD2C,WAEvC,OAAOuU,EAAeyB,EAASY,uBAEnCtQ,IAJ2C,SAIvC9X,GACA,IAAMpK,EAAUoK,EAGhBwnB,EAASa,mBAAmBtC,EAAenwB,IAG3CiK,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,oBAAoB,EAAO,CACtEtb,QAAAA,OAxED,IA8ELf,EAAWwd,EAAOjJ,OAAlBvU,OACN0L,OAAO8M,eAAegF,EAAOnB,MAAO,SAAU,CAC1CM,IAD0C,WAEtC,OAAO3c,GAEXijB,IAJ0C,SAItC9X,GACAnL,EAASmL,EACTwnB,EAAS1E,UAAmB,IAATjuB,GACnBgL,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,mBAtF5C,IA2FLpc,EAAUud,EAAOjJ,OAAjBtU,MACNyL,OAAO8M,eAAegF,EAAOnB,MAAO,QAAS,CACzCM,IADyC,WAErC,OAAO1c,GAEXgjB,IAJyC,SAIrC9X,GACA,IAAMqI,EAASxI,EAAMC,GAAGe,QAAQb,GAASA,EAAQlL,EACjDA,EAAQuT,EACRmf,EAASnf,EAAS,OAAS,YAC3BxI,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,mBAKvD3Q,OAAO8M,eAAegF,EAAOnB,MAAO,aAAc,CAC9CM,IAD8C,WAE1C,OAAOgW,EAASc,iBAKxB/nB,OAAO8M,eAAegF,EAAOnB,MAAO,QAAS,CACzCM,IADyC,WAErC,OAAOa,EAAOza,cAAgBya,EAAOtd,YAK7Csd,EAAOvc,QAAQG,MAAQuxB,EAASe,4BAG5BlW,EAAOnX,UAAUyV,IACjB0B,EAAOnB,MAAM5M,aAAa,YAAa,GAG3CzE,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,cAC/CrR,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,kBAG/CiR,cAAc9P,EAAOqE,OAAO8R,WAG5BnW,EAAOqE,OAAO8R,UAAYpG,YAAY,WAElC/P,EAAOnB,MAAMvZ,SAAW6vB,EAASiB,0BAGC,OAA9BpW,EAAOnB,MAAMwX,cAAyBrW,EAAOnB,MAAMwX,aAAerW,EAAOnB,MAAMvZ,WAC/EkI,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,YAInDmB,EAAOnB,MAAMwX,aAAerW,EAAOnB,MAAMvZ,SAGX,IAA1B0a,EAAOnB,MAAMvZ,WACbwqB,cAAc9P,EAAOqE,OAAO8R,WAG5B3oB,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,oBAEpD,KAGHX,WAAW,WAAA,OAAMI,EAAGmF,MAAMtZ,KAAK6V,IAAS,KAE5CsW,cAtNI,SAsNU9mB,GAEV,IAAM2lB,EAAW3lB,EAAM+E,OAYvB,OATAub,cAAc9P,EAAOqE,OAAOtc,SASpByH,EAAM8C,MACV,KAAM,EAEF9E,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,cAG/CmB,EAAOnB,MAAMvZ,SAAW6vB,EAASiB,yBACjC5oB,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,YAE/C,MAEJ,KAAK,EACDmB,EAAOnB,MAAMoF,QAAS,EAGlBjE,EAAOnB,MAAMnb,MAEbyxB,EAASO,YACTP,EAASI,aAET/nB,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,SAGnD,MAEJ,KAAK,EAEGmB,EAAOnB,MAAMqG,SACb1X,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,UAEnDmB,EAAOnB,MAAMqG,SAAU,EAGnBlF,EAAOnB,MAAMoF,QACbzW,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,QAEnDmB,EAAOnB,MAAMoF,QAAS,EAEtBzW,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,WAG/CmB,EAAOqE,OAAOtc,QAAUgoB,YAAY,WAChCviB,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,eAChD,IAKCmB,EAAOnB,MAAMnc,WAAayyB,EAASQ,gBACnC3V,EAAOnB,MAAMnc,SAAWyyB,EAASQ,cACjCnoB,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,mBASnD,MAEJ,KAAK,EACDmB,EAAOnB,MAAMoF,QAAS,EAEtBzW,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,SAQvDrR,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOzM,SAASxM,UAAW,eAAe,EAAO,CAC9E6kB,KAAMpc,EAAM8C,cC7d9BzQ,EAAQ,CACVggB,MADU,WACF,IAAApB,EAAA7S,KAEJJ,EAAMuI,YAAYnI,KAAK2F,SAASvM,QAAS4G,KAAKmJ,OAAOvP,WAAWC,OAAO,GAGvE5F,EAAM8xB,eAAexpB,KAAKyD,MAGrBJ,EAAMC,GAAGO,OAAOF,OAAOyoB,OAUxB10B,EAAMkL,MAAM5C,KAAKyD,MATjBJ,EACKoE,WAAWhE,KAAKmJ,OAAOzQ,KAAKzE,MAAM0E,KAClCkM,KAAK,WACF5Q,EAAMkL,MAAM5C,KAAKsW,KAEpB7N,MAAM,SAAA3K,GACHwY,EAAKre,MAAM6U,KAAK,2BAA4BhP,MAS5D0rB,eAzBU,SAyBKhmB,GACX,IAAM7K,EAAQ0K,EAAMC,GAAGa,OAAOX,GAASA,EAAMnJ,MAAM,KAAOoJ,KAAKmJ,OAAOjU,MAAM0B,MAAM,KAC5EgyB,EAAU,IAAM1zB,EAAM,GAAKA,EAAM,GAGvC,GAFA8K,KAAK2F,SAASvM,QAAQwJ,MAAM6jB,cAAmBmC,EAA/C,IAEI5oB,KAAK/E,UAAUyV,GAAI,CACnB,IACMmY,GADS,IACUD,GAAV,IAEf5oB,KAAKiR,MAAMrO,MAAMkmB,UAAjB,eAA4CD,EAA5C,OAKR1pB,MAvCU,WAuCF,IAAAmW,EAAAtV,KACEoS,EAASpS,KAGTnK,EAAU,CACZC,KAAMsc,EAAOjJ,OAAOrT,KAAKC,OACzBtB,SAAU2d,EAAO3d,SACjBs0B,QAAQ,EACRC,UAAU,EACVz0B,OAAO,EACPyB,OAAO,EACPizB,YAAa,EACbC,QAAS,QACTzY,aAAczQ,KAAKmJ,OAAOtS,WAAWE,UACrCpB,QAASyc,EAAOjJ,OAAOxT,QAAQC,SAE7B+Y,EAAS/O,EAAMqP,eAAepZ,GAGhCqX,EAASkF,EAAOnB,MAAMhG,aAAa,OAGnCrL,EAAMC,GAAGwC,MAAM6K,KACfA,EAASkF,EAAOnB,MAAMhG,aAAajL,KAAKmJ,OAAOhO,WAAWtB,MAAMuB,KAGpE,IAAMA,EAAKwE,EAAMyO,aAAanB,GAGxBkJ,EAASxW,EAAMnC,cAAc,UAC7BG,EAAAA,kCAAwCxC,EAAxC,IAA8CuT,EACpDyH,EAAO/R,aAAa,MAAOzG,GAC3BwY,EAAO/R,aAAa,kBAAmB,IACvC+R,EAAO/R,aAAa,oBAAqB,IACzC+R,EAAO/R,aAAa,QAAS,YAG7B,IAAMjL,EAAUwG,EAAMnC,cAAc,OACpCrE,EAAQoF,YAAY4X,GACpBhE,EAAOnB,MAAQrR,EAAMqH,eAAe7N,EAASgZ,EAAOnB,OAIpDmB,EAAOvY,MAAQ,IAAIqG,OAAOyoB,MAAM1C,OAAO7P,GAEvChE,EAAOnB,MAAMoF,QAAS,EACtBjE,EAAOnB,MAAMtZ,YAAc,EAGvBya,EAAOnX,UAAUyV,IACjB0B,EAAOvY,MAAMsvB,mBAIjB/W,EAAOnB,MAAM3Z,KAAO,WAChB8a,EAAOvY,MAAMvC,OAAOuN,KAAK,WACrBuN,EAAOnB,MAAMoF,QAAS,KAI9BjE,EAAOnB,MAAM1Z,MAAQ,WACjB6a,EAAOvY,MAAMtC,QAAQsN,KAAK,WACtBuN,EAAOnB,MAAMoF,QAAS,KAI9BjE,EAAOnB,MAAM4W,KAAO,WAChBzV,EAAO7a,QACP6a,EAAOza,YAAc,GApErB,IAwEEA,EAAgBya,EAAOnB,MAAvBtZ,YACN2I,OAAO8M,eAAegF,EAAOnB,MAAO,cAAe,CAC/CM,IAD+C,WAE3C,OAAO5Z,GAEXkgB,IAJ+C,SAI3CjM,GAAM,IAGEyK,EAAWjE,EAAOnB,MAAlBoF,OAGRjE,EAAOnB,MAAMqG,SAAU,EAGvB1X,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,WAG/CmB,EAAOvY,MAAMuvB,eAAexd,GAAM5G,MAAM,cAKpCqR,GACAjE,EAAO7a,WAMnB,IAAIvB,EAAQoc,EAAOjJ,OAAOnT,MAAMC,SAChCqK,OAAO8M,eAAegF,EAAOnB,MAAO,eAAgB,CAChDM,IADgD,WAE5C,OAAOvb,GAEX6hB,IAJgD,SAI5C9X,GACAqS,EAAOvY,MACFquB,gBAAgBnoB,GAChB8E,KAAK,WACF7O,EAAQ+J,EACRH,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,gBAElDjM,MAAM,SAAA3K,GAEgB,UAAfA,EAAMyY,MACNxc,EAASulB,aAAatf,KAAK6V,EAAQ,SApHnD,IA2HExd,EAAWwd,EAAOjJ,OAAlBvU,OACN0L,OAAO8M,eAAegF,EAAOnB,MAAO,SAAU,CAC1CM,IAD0C,WAEtC,OAAO3c,GAEXijB,IAJ0C,SAItC9X,GACAqS,EAAOvY,MAAMgpB,UAAU9iB,GAAO8E,KAAK,WAC/BjQ,EAASmL,EACTH,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,qBAnIvD,IAyIEpc,EAAUud,EAAOjJ,OAAjBtU,MACNyL,OAAO8M,eAAegF,EAAOnB,MAAO,QAAS,CACzCM,IADyC,WAErC,OAAO1c,GAEXgjB,IAJyC,SAIrC9X,GACA,IAAMqI,IAASxI,EAAMC,GAAGe,QAAQb,IAASA,EAEzCqS,EAAOvY,MAAMgpB,UAAUza,EAAS,EAAIgK,EAAOjJ,OAAOvU,QAAQiQ,KAAK,WAC3DhQ,EAAQuT,EACRxI,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,qBAnJvD,IAyJEnb,EAASsc,EAAOjJ,OAAhBrT,KACNwK,OAAO8M,eAAegF,EAAOnB,MAAO,OAAQ,CACxCM,IADwC,WAEpC,OAAOzb,GAEX+hB,IAJwC,SAIpC9X,GACA,IAAMqI,EAASxI,EAAMC,GAAGe,QAAQb,GAASA,EAAQqS,EAAOjJ,OAAOrT,KAAKC,OAEpEqc,EAAOvY,MAAMwvB,QAAQjhB,GAAQvD,KAAK,WAC9B/O,EAAOsS,OAMnB,IAAIkhB,OAAAA,EACJlX,EAAOvY,MACFwuB,cACAxjB,KAAK,SAAA/J,GACFwuB,EAAaxuB,IAEhBkK,MAAM,SAAA3K,GACHib,EAAK9gB,MAAM6U,KAAKhP,KAGxBiG,OAAO8M,eAAegF,EAAOnB,MAAO,aAAc,CAC9CM,IAD8C,WAE1C,OAAO+X,KAKfhpB,OAAO8M,eAAegF,EAAOnB,MAAO,QAAS,CACzCM,IADyC,WAErC,OAAOa,EAAOza,cAAgBya,EAAOtd,YAK7CqO,QAAQ7K,IAAI,CACR8Z,EAAOvY,MAAM0vB,gBACbnX,EAAOvY,MAAM2vB,mBACd3kB,KAAK,SAAA4kB,GACJ,IAAMv0B,EAAQ0K,EAAM8P,eAAe+Z,EAAW,GAAIA,EAAW,IAC7Dx1B,EAAM8xB,eAAexpB,KAAK+Y,EAAMpgB,KAIpCkd,EAAOvY,MAAM6vB,aAAatX,EAAOjJ,OAAOzU,WAAWmQ,KAAK,SAAAqG,GACpDkH,EAAOjJ,OAAOzU,UAAYwW,IAI9BkH,EAAOvY,MAAM8vB,gBAAgB9kB,KAAK,SAAAtQ,GAC9B6d,EAAOjJ,OAAO5U,MAAQA,EACtBmc,EAAGwF,SAAS3Z,KAAK+Y,KAIrBlD,EAAOvY,MAAMmuB,iBAAiBnjB,KAAK,SAAA/J,GAC/BnD,EAAcmD,EACd8E,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,gBAInDmB,EAAOvY,MAAMkuB,cAAcljB,KAAK,SAAA/J,GAC5BsX,EAAOnB,MAAMnc,SAAWgG,EACxB8E,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,oBAInDmB,EAAOvY,MAAM+vB,gBAAgB/kB,KAAK,SAAAyP,GAC9BlC,EAAOnB,MAAMK,WAAagD,EAC1B9d,EAASyd,MAAM1X,KAAK6V,KAGxBA,EAAOvY,MAAMqQ,GAAG,YAAa,SAAAxF,GACzB,IAAI5C,EAAM,KAEN4C,EAAKlK,KAAK0B,SACV4F,EAAMlC,EAAMyP,UAAU3K,EAAKlK,KAAK,GAAG+L,OAGvC/P,EAASif,QAAQlZ,KAAK6V,EAAQtQ,KAGlCsQ,EAAOvY,MAAMqQ,GAAG,SAAU,WAClBtK,EAAMC,GAAG2B,QAAQ4Q,EAAOvY,MAAM2H,UAAY4Q,EAAOnX,UAAUyV,IAC7C0B,EAAOvY,MAAM2H,QAIrB6C,aAAa,YAAa,KAIxC+N,EAAOvY,MAAMqQ,GAAG,OAAQ,WAEhBkI,EAAOnB,MAAMoF,QACbzW,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,QAEnDmB,EAAOnB,MAAMoF,QAAS,EACtBzW,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,aAGnDmB,EAAOvY,MAAMqQ,GAAG,QAAS,WACrBkI,EAAOnB,MAAMoF,QAAS,EACtBzW,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,WAGnDmB,EAAOvY,MAAMqQ,GAAG,aAAc,SAAAxF,GAC1B0N,EAAOnB,MAAMqG,SAAU,EACvB3f,EAAc+M,EAAKmlB,QACnBjqB,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,gBAGnDmB,EAAOvY,MAAMqQ,GAAG,WAAY,SAAAxF,GACxB0N,EAAOnB,MAAMvZ,SAAWgN,EAAK2V,QAC7Bza,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,YAGZ,IAA/BzF,SAAS9G,EAAK2V,QAAS,KACvBza,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,kBAKnDmB,EAAOvY,MAAMkuB,cAAcljB,KAAK,SAAA/J,GACxBA,IAAUsX,EAAOnB,MAAMnc,WACvBsd,EAAOnB,MAAMnc,SAAWgG,EACxB8E,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,uBAK3DmB,EAAOvY,MAAMqQ,GAAG,SAAU,WACtBkI,EAAOnB,MAAMqG,SAAU,EACvB1X,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,UAC/CrR,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,UAGnDmB,EAAOvY,MAAMqQ,GAAG,QAAS,WACrBkI,EAAOnB,MAAMoF,QAAS,EACtBzW,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,WAGnDmB,EAAOvY,MAAMqQ,GAAG,QAAS,SAAAU,GACrBwH,EAAOnB,MAAM5W,MAAQuQ,EACrBhL,EAAM8K,cAAcnO,KAAK6V,EAAQA,EAAOnB,MAAO,WAInDX,WAAW,WAAA,OAAMI,EAAGmF,MAAMtZ,KAAK6V,IAAS,KCrV1CzB,EAAU/Q,EAAM2C,aAEhB0O,EAAQ,CAEVgD,MAFU,WAIN,GAAKjU,KAAKiR,MA6CV,GAvCArR,EAAMuI,YAAYnI,KAAK2F,SAASxM,UAAW6G,KAAKmJ,OAAOvP,WAAWI,KAAKuD,QAAQ,MAAOyC,KAAKhG,OAAO,GAGlG4F,EAAMuI,YAAYnI,KAAK2F,SAASxM,UAAW6G,KAAKmJ,OAAOvP,WAAWK,SAASsD,QAAQ,MAAOyC,KAAK/F,WAAW,GAItG+F,KAAKmW,SACLvW,EAAMuI,YAAYnI,KAAK2F,SAASxM,UAAW6G,KAAKmJ,OAAOvP,WAAWI,KAAKuD,QAAQ,MAAO,UAAU,GAGhGyC,KAAK/E,UAAUyV,KAEf9Q,EAAMuI,YAAYnI,KAAK2F,SAASxM,UAAW6G,KAAKmJ,OAAOvP,WAAWd,IAAImC,UAAWqJ,EAAQxL,KAAOkH,KAAKkR,SAAWlR,KAAKoR,SAGrHxR,EAAMuI,YAAYnI,KAAK2F,SAASxM,UAAW6G,KAAKmJ,OAAOvP,WAAWb,QAAQkC,UAAWqJ,EAAQvL,SAAWiH,KAAKkR,SAG7GtR,EAAMuI,YAAYnI,KAAK2F,SAASxM,UAAW6G,KAAKmJ,OAAOvP,WAAWM,QAAS8F,KAAKmJ,OAAO1U,UAGvFmL,EAAMuI,YAAYnI,KAAK2F,SAASxM,UAAW6G,KAAKmJ,OAAOvP,WAAWc,MAAOiW,EAAQjW,OAGjFkF,EAAMuI,YAAYnI,KAAK2F,SAASxM,UAAW6G,KAAKmJ,OAAOvP,WAAWe,QAASqF,KAAKwR,QAIhFxR,KAAKoR,UAELpR,KAAK2F,SAASvM,QAAUwG,EAAMnC,cAAc,MAAO,CAC/CyK,MAAOlI,KAAKmJ,OAAOvP,WAAWxF,QAIlCwL,EAAM8F,KAAK1F,KAAKiR,MAAOjR,KAAK2F,SAASvM,UAGrC4G,KAAKmW,QACL,OAAQnW,KAAK/F,UACT,IAAK,UACDjG,EAAQigB,MAAM1X,KAAKyD,MACnB,MAEJ,IAAK,QACD/L,EAAMggB,MAAM1X,KAAKyD,WAMlBA,KAAKkR,UACZR,EAAGwF,SAAS3Z,KAAKyD,MAEjBjM,EAAM+Y,OAAOvQ,KAAKyD,YA5DlBA,KAAKxL,MAAM6U,KAAK,6BCRtB6D,EAAS,CAEX4c,eAFW,SAEI9vB,EAAMmB,GAAY,IAAA0X,EAAA7S,KACzBJ,EAAMC,GAAGa,OAAOvF,GAChByE,EAAMgH,cAAc5M,EAAMgG,KAAKiR,MAAO,CAClCrT,IAAKzC,IAEFyE,EAAMC,GAAGmB,MAAM7F,IACtBA,EAAW4K,QAAQ,SAAAgkB,GACfnqB,EAAMgH,cAAc5M,EAAM6Y,EAAK5B,MAAO8Y,MAOlDC,OAhBW,SAgBJjqB,GAAO,IAAAuV,EAAAtV,KACLJ,EAAMC,GAAGO,OAAOL,IAAY,YAAaA,GAAWA,EAAMiN,QAAQ9Q,QAMvEnI,EAAMgkB,eAAexb,KAAKyD,MAG1BA,KAAK+kB,QAAQxoB,KACTyD,KACA,WAqBI,OAnBAsV,EAAKzf,QAAQF,QAAU,GAGvBiK,EAAMiH,cAAcyO,EAAKrE,OACzBqE,EAAKrE,MAAQ,KAGTrR,EAAMC,GAAG2B,QAAQ8T,EAAK3P,SAASxM,YAC/Bmc,EAAK3P,SAASxM,UAAUqP,gBAAgB,SAI5C8M,EAAKtb,KAAO+F,EAAM/F,KAClBsb,EAAKrb,SAAY2F,EAAMC,GAAGwC,MAAMtC,EAAMiN,QAAQ,GAAG/S,UAAwCnG,EAAUC,MAAtCgM,EAAMiN,QAAQ,GAAG/S,SAG9Eqb,EAAKra,UAAYqJ,EAAQkM,MAAM8E,EAAKtb,KAAMsb,EAAKrb,SAAUqb,EAAKnM,OAAOsH,aAG1D6E,EAAKrb,SAAhB,IAA4Bqb,EAAKtb,MAC7B,IAAK,cACDsb,EAAKrE,MAAQrR,EAAMnC,cAAc,SACjC,MAEJ,IAAK,cACD6X,EAAKrE,MAAQrR,EAAMnC,cAAc,SACjC,MAEJ,IAAK,gBACL,IAAK,cACD6X,EAAKrE,MAAQrR,EAAMnC,cAAc,MAAO,CACpCG,IAAKmC,EAAMiN,QAAQ,GAAGpP,MASlC0X,EAAK3P,SAASxM,UAAUqF,YAAY8W,EAAKrE,OAGrCrR,EAAMC,GAAGe,QAAQb,EAAMtL,YACvB6gB,EAAKnM,OAAO1U,SAAWsL,EAAMtL,UAI7B6gB,EAAKpE,UACDoE,EAAKnM,OAAO8gB,aACZ3U,EAAKrE,MAAM5M,aAAa,cAAe,IAEvCiR,EAAKnM,OAAO1U,UACZ6gB,EAAKrE,MAAM5M,aAAa,WAAY,IAEpC,WAAYtE,GACZuV,EAAKrE,MAAM5M,aAAa,SAAUtE,EAAMmqB,QAExC5U,EAAKnM,OAAOrT,KAAKC,QACjBuf,EAAKrE,MAAM5M,aAAa,OAAQ,IAEhCiR,EAAKnM,OAAOtU,OACZygB,EAAKrE,MAAM5M,aAAa,QAAS,IAEjCiR,EAAKnM,OAAOsH,aACZ6E,EAAKrE,MAAM5M,aAAa,cAAe,KAK/CqM,EAAGkF,aAAarZ,KAAK+Y,GAGjBA,EAAKpE,SACLhE,EAAO4c,eAAevtB,KAAK+Y,EAAM,SAAUvV,EAAMiN,SAIrDsI,EAAKnM,OAAO5U,MAAQwL,EAAMxL,MAG1B0c,EAAMgD,MAAM1X,KAAK+Y,GAGbA,EAAKpE,UAED,WAAYnR,GACZmN,EAAO4c,eAAevtB,KAAK+Y,EAAM,QAASvV,EAAMuU,QAIpDgB,EAAKrE,MAAM6G,SAIXxC,EAAKpE,SAAYoE,EAAKa,UAAYb,EAAKra,UAAUyV,KAEjDA,EAAGmF,MAAMtZ,KAAK+Y,GAIlBA,EAAKze,WAAWkc,WAEpB,IAnHA/S,KAAKxL,MAAM6U,KAAK,kCCAtBlJ,WACF,SAAAA,EAAYwG,EAAQ9Q,GAAS,IAAAgd,EAAA7S,KAiFzB,GAjFyB8R,EAAA9R,KAAAG,GACzBH,KAAKyW,OAAS,GAGdzW,KAAKb,OAAQ,EACba,KAAK5F,SAAU,EACf4F,KAAK4W,QAAS,EAGd5W,KAAKwR,MAAQlN,EAAQkN,MAGrBxR,KAAKiR,MAAQtK,EAGT/G,EAAMC,GAAGa,OAAOV,KAAKiR,SACrBjR,KAAKiR,MAAQjU,SAASmH,iBAAiBnE,KAAKiR,SAI3C/Q,OAAOiqB,QAAUnqB,KAAKiR,iBAAiBkZ,QAAWvqB,EAAMC,GAAGyB,SAAStB,KAAKiR,QAAUrR,EAAMC,GAAGmB,MAAMhB,KAAKiR,UAExGjR,KAAKiR,MAAQjR,KAAKiR,MAAM,IAI5BjR,KAAKmJ,OAASvJ,EAAMkN,OAChB,GACAzY,EACAwB,GAAW,GACV,WACG,IACI,OAAO4N,KAAKC,MAAMmP,EAAK5B,MAAMhG,aAAa,qBAC5C,MAAOnO,GACL,MAAO,IAJd,IAULkD,KAAK2F,SAAW,CACZxM,UAAW,KACXG,QAAS,GACTE,QAAS,GACTE,SAAU,GACVH,OAAQ,GACRrC,SAAU,CACNyC,KAAM,KACNuhB,MAAO,GACPF,KAAM,IAEVxkB,SAAU,MAIdwJ,KAAKxJ,SAAW,CACZT,OAAQ,KACRkf,aAAc,MAIlBjV,KAAKnJ,WAAa,CACdd,QAAQ,GAIZiK,KAAKnK,QAAU,CACXG,MAAO,GACPL,QAAS,GACTa,SAAU,IAKdwJ,KAAKxL,MAAQ,IAAIqd,EAAQ7R,KAAKmJ,OAAO3U,OAGrCwL,KAAKxL,MAAMwd,IAAI,SAAUhS,KAAKmJ,QAC9BnJ,KAAKxL,MAAMwd,IAAI,UAAW1N,IAGtB1E,EAAMC,GAAGoB,gBAAgBjB,KAAKiR,QAAWrR,EAAMC,GAAG2B,QAAQxB,KAAKiR,OAMnE,GAAIjR,KAAKiR,MAAMnR,KACXE,KAAKxL,MAAM6U,KAAK,6BAKpB,GAAKrJ,KAAKmJ,OAAO7U,QAOjB,GAAKgQ,EAAQkM,QAAQ7X,IAArB,CAOA2X,WAAW,WACP,IAAMgM,EAAQzJ,EAAK5B,MAAM/K,WAAU,GAG/BoW,EAAMrR,aAAa,aACnBqR,EAAM/kB,QAGVsb,EAAKlN,SAASykB,SAAW9N,GAC1B,GAIH,IAAMtiB,EAAOgG,KAAKiR,MAAMoZ,QAAQ1d,cAG5ByJ,EAAS,KACThU,EAAM,KACNuM,EAAS,KAGb,OAAQ3U,GACJ,IAAK,MAKD,GAHAoc,EAASpW,KAAKiR,MAAMhI,cAAc,UAG9BrJ,EAAMC,GAAG2B,QAAQ4U,IAcjB,GAZAhU,EAAMgU,EAAOnL,aAAa,OAC1BjL,KAAK/F,SAAW2F,EAAMqO,iBAAiB7L,GAGvCpC,KAAK2F,SAASxM,UAAY6G,KAAKiR,MAC/BjR,KAAKiR,MAAQmF,EAGbpW,KAAK2F,SAASxM,UAAU4O,UAAY,GAGpC4G,EAAS/O,EAAM4O,aAAapM,IACvBxC,EAAMC,GAAGwC,MAAMsM,GAAS,CACzB,IAAM2b,EAAS,CACX,IACA,QAGAA,EAAOxhB,SAAS6F,EAAOla,YACvBuL,KAAKmJ,OAAO1U,UAAW,GAEvB61B,EAAOxhB,SAAS6F,EAAO7Y,QACvBkK,KAAKmJ,OAAOrT,KAAKC,QAAS,GAK1BiK,KAAKmU,UACLnU,KAAKmJ,OAAOsH,YAAc6Z,EAAOxhB,SAAS6F,EAAO8B,aAEjDzQ,KAAKmJ,OAAOsH,aAAc,QAKlCzQ,KAAK/F,SAAW+F,KAAKiR,MAAMhG,aAAajL,KAAKmJ,OAAOhO,WAAWtB,MAAMI,UAGrE+F,KAAKiR,MAAMzI,gBAAgBxI,KAAKmJ,OAAOhO,WAAWtB,MAAMI,UAI5D,GAAI2F,EAAMC,GAAGwC,MAAMrC,KAAK/F,YAAcqG,OAAOjF,KAAKvH,GAAWgV,SAAS9I,KAAK/F,UAEvE,YADA+F,KAAKxL,MAAM6F,MAAM,kCAKrB2F,KAAKhG,KAAO9F,EAAME,MAElB,MAEJ,IAAK,QACL,IAAK,QACD4L,KAAKhG,KAAOA,EACZgG,KAAK/F,SAAWnG,EAAUC,MAGtBiM,KAAKiR,MAAMsZ,aAAa,iBACxBvqB,KAAKmJ,OAAO8gB,aAAc,GAE1BjqB,KAAKiR,MAAMsZ,aAAa,cACxBvqB,KAAKmJ,OAAO1U,UAAW,GAEvBuL,KAAKiR,MAAMsZ,aAAa,iBACxBvqB,KAAKmJ,OAAOsH,aAAc,GAE1BzQ,KAAKiR,MAAMsZ,aAAa,WACxBvqB,KAAKmJ,OAAOtU,OAAQ,GAEpBmL,KAAKiR,MAAMsZ,aAAa,UACxBvqB,KAAKmJ,OAAOrT,KAAKC,QAAS,GAG9B,MAEJ,QAEI,YADAiK,KAAKxL,MAAM6F,MAAM,kCAKzB2F,KAAK/E,UAAYqJ,EAAQkM,MAAMxQ,KAAKhG,KAAMgG,KAAK/F,SAAU+F,KAAKmJ,OAAOsH,aAGhEzQ,KAAK/E,UAAUtC,KAMpBqH,KAAKnH,UAAY,IAAI+kB,EAAU5d,MAG/BA,KAAKhJ,QAAU,IAAI0oB,EAAQ1f,MAG3BA,KAAKiR,MAAMnR,KAAOE,KAGbJ,EAAMC,GAAG2B,QAAQxB,KAAK2F,SAASxM,aAChC6G,KAAK2F,SAASxM,UAAYyG,EAAMnC,cAAc,OAC9CmC,EAAM8F,KAAK1F,KAAKiR,MAAOjR,KAAK2F,SAASxM,YAIzC6G,KAAK2F,SAASxM,UAAUkL,aAAa,WAAY,GAGjDqM,EAAGkF,aAAarZ,KAAKyD,MAGrBiR,EAAMgD,MAAM1X,KAAKyD,MAGbA,KAAKmJ,OAAO3U,OACZoL,EAAMsK,GAAGlK,KAAK2F,SAASxM,UAAW6G,KAAKmJ,OAAOnQ,OAAOoW,KAAK,KAAM,SAAAxN,GAC5DiR,EAAKre,MAAMwd,IAAX,UAAyBpQ,EAAM5H,SAMnCgG,KAAKkR,SAAYlR,KAAKmW,UAAYnW,KAAK/E,UAAUyV,KACjDA,EAAGmF,MAAMtZ,KAAKyD,MAIlBA,KAAKnH,UAAUM,YAGf6G,KAAKnH,UAAUzC,SAGf4J,KAAKnJ,WAAa,IAAI+b,EAAW5S,MAGjCA,KAAKlG,IAAM,IAAIgmB,EAAI9f,MAGfA,KAAKmJ,OAAO1U,UACZuL,KAAK1I,QAvDL0I,KAAKxL,MAAM6F,MAAM,iCAzHjB2F,KAAKxL,MAAM6F,MAAM,iCAPjB2F,KAAKxL,MAAM6F,MAAM,yCAZjB2F,KAAKxL,MAAM6F,MAAM,qFAqOrB,OAAKuF,EAAMC,GAAGiB,SAASd,KAAKiR,MAAM3Z,MAU3B0I,KAAKiR,MAAM3Z,OATP,qCAgBN0I,KAAK7F,SAAYyF,EAAMC,GAAGiB,SAASd,KAAKiR,MAAM1Z,QAInDyI,KAAKiR,MAAM1Z,2CA4BJwI,IAEQH,EAAMC,GAAGe,QAAQb,GAASA,GAASC,KAAK7F,SAGnD6F,KAAK1I,OAEL0I,KAAKzI,uCAQLyI,KAAKkR,QACLlR,KAAKiR,MAAM6G,OACJlY,EAAMC,GAAGiB,SAASd,KAAKiR,MAAM4W,OACpC7nB,KAAKiR,MAAM4W,yCAQf7nB,KAAKrI,YAAc,iCAOhBhD,GACHqL,KAAKrI,YAAcqI,KAAKrI,aAAeiI,EAAMC,GAAGU,OAAO5L,GAAYA,EAAWqL,KAAKmJ,OAAOxU,0CAOtFA,GACJqL,KAAKrI,YAAcqI,KAAKrI,aAAeiI,EAAMC,GAAGU,OAAO5L,GAAYA,EAAWqL,KAAKmJ,OAAOxU,iDAoI/E0kB,GACX,IAAMzkB,EAASoL,KAAKiR,MAAMpc,MAAQ,EAAImL,KAAKpL,OAC3CoL,KAAKpL,OAASA,GAAUgL,EAAMC,GAAGU,OAAO8Y,GAAQA,EAAO,0CAO5CA,GACX,IAAMzkB,EAASoL,KAAKiR,MAAMpc,MAAQ,EAAImL,KAAKpL,OAC3CoL,KAAKpL,OAASA,GAAUgL,EAAMC,GAAGU,OAAO8Y,GAAQA,EAAO,0CA+Q5CtZ,GAEX,GAAKC,KAAK/E,UAAUyV,GAApB,CAKA,IAAMoE,EAAOlV,EAAMC,GAAGe,QAAQb,GAASA,GAASC,KAAK2F,SAASxM,UAAUmP,UAAUD,SAASrI,KAAKmJ,OAAOvP,WAAWpD,SAAST,QAGvHiK,KAAKxJ,SAAST,SAAW+e,IAK7B9U,KAAKxJ,SAAST,OAAS+e,EAGvBlV,EAAMmL,YAAY/K,KAAK2F,SAASrM,QAAQ9C,SAAUwJ,KAAKxJ,SAAST,QAGhE6J,EAAMuI,YAAYnI,KAAK2F,SAASxM,UAAW6G,KAAKmJ,OAAOvP,WAAWpD,SAAST,OAAQiK,KAAKxJ,SAAST,QAGjG6J,EAAM8K,cAAcnO,KAAKyD,KAAMA,KAAKiR,MAAOjR,KAAKxJ,SAAST,OAAS,kBAAoB,wDAqGlFuO,EAAQvL,SACRiH,KAAKiR,MAAMuZ,wEAQJpiB,GAAQ,IAAAkN,EAAAtV,KAEnB,GAAKJ,EAAMC,GAAG2B,QAAQxB,KAAK2F,SAASrP,WAK/B0J,KAAK/E,UAAUyV,KAAM1Q,KAAKqR,QAA/B,CAIA,IAAIoZ,EAAQ,EACR3V,EAAO1M,EACPsiB,GAAoB,EAGxB,IAAK9qB,EAAMC,GAAGe,QAAQwH,GAClB,GAAIxI,EAAMC,GAAG+B,MAAMwG,GAAS,CAExBsiB,EAAoC,oBAAhBtiB,EAAOpO,KAmB3B8a,EAhBmB,CACf,aACA,YACA,aACA,YACA,WAWchM,SAASV,EAAOpO,MAPd,CAChB,YACA,WACA,aAOY8O,SAASV,EAAOpO,QAC5BywB,EAAQ,KAIPzqB,KAAKwR,OAAyB,YAAhBpJ,EAAOpO,OACtBywB,EAAQ,IACR7qB,EAAMuI,YAAYnI,KAAK2F,SAASrP,SAAU0J,KAAKmJ,OAAOvP,WAAWiB,cAAc,SAGnFia,EAAOlV,EAAM2I,SAASvI,KAAK2F,SAASxM,UAAW6G,KAAKmJ,OAAOvP,WAAWxE,cAQ9E,GAHAohB,aAAaxW,KAAKyW,OAAOngB,UAGrBwe,GAAQ9U,KAAKqW,QAAUrW,KAAK5F,QAAS,CAUrC,GARgBwF,EAAMuI,YAAYnI,KAAK2F,SAASxM,UAAW6G,KAAKmJ,OAAOvP,WAAWxE,cAAc,IAI5FwK,EAAM8K,cAAcnO,KAAKyD,KAAMA,KAAKiR,MAAO,iBAI3CjR,KAAKqW,QAAUrW,KAAK5F,QACpB,OAIA4F,KAAKwR,QACLiZ,EAAQ,KAMX3V,IAAQ9U,KAAK7F,UACd6F,KAAKyW,OAAOngB,SAAWga,WAAW,WAEzB1Q,EAAMC,GAAG2B,QAAQ8T,EAAK3P,SAASrP,cAK/Bgf,EAAK3P,SAASrP,SAAS0U,UAAWsK,EAAK3P,SAASrP,SAASgE,OAAWowB,KAKpE9qB,EAAM2I,SAAS+M,EAAK3P,SAASxM,UAAWmc,EAAKnM,OAAOvP,WAAWxE,eAChEwK,EAAMuI,YAAYmN,EAAK3P,SAASrP,SAAUgf,EAAKnM,OAAOvP,WAAWiB,cAAc,GAInE+E,EAAMuI,YAAYmN,EAAK3P,SAASxM,UAAWmc,EAAKnM,OAAOvP,WAAWxE,cAAc,KAI5FwK,EAAM8K,cAAcnO,KAAK+Y,EAAMA,EAAKrE,MAAO,kBAEvCqE,EAAKnM,OAAO7S,SAASwS,SAAS,cAAgBlJ,EAAMC,GAAGwC,MAAMiT,EAAKnM,OAAOjS,WACzEZ,EAAS0lB,WAAWzf,KAAK+Y,GAAM,OAGxCmV,gCASR7oB,EAAOyI,GACNzK,EAAMsK,GAAGlK,KAAK2F,SAASxM,UAAWyI,EAAOyI,+BAQzCzI,EAAOyI,GACPzK,EAAMuK,IAAInK,KAAK2F,SAASxM,UAAWyI,EAAOyI,mCAUtCA,GAAwB,IAAAsM,EAAA3W,KAAd2qB,EAAcznB,UAAAhH,OAAA,QAAA2B,IAAAqF,UAAA,IAAAA,UAAA,GAC5B,GAAKlD,KAAKb,MAAV,CAIA,IAAMK,EAAO,WAETxC,SAASkI,KAAKtC,MAAM+P,SAAW,GAG/BgE,EAAK9c,MAAQ,KAGT8wB,GACIrqB,OAAOjF,KAAKsb,EAAKhR,UAAUzJ,SAE3B0D,EAAMiH,cAAc8P,EAAKhR,SAASrM,QAAQhC,MAC1CsI,EAAMiH,cAAc8P,EAAKhR,SAASnP,UAClCoJ,EAAMiH,cAAc8P,EAAKhR,SAASrP,UAClCsJ,EAAMiH,cAAc8P,EAAKhR,SAASvM,SAGlCud,EAAKhR,SAASrM,QAAQhC,KAAO,KAC7Bqf,EAAKhR,SAASnP,SAAW,KACzBmgB,EAAKhR,SAASrP,SAAW,KACzBqgB,EAAKhR,SAASvM,QAAU,MAIxBwG,EAAMC,GAAGiB,SAASuJ,IAClBA,MAIJsM,EAAK9d,UAAU+xB,QAGfhrB,EAAMqH,eAAe0P,EAAKhR,SAASykB,SAAUzT,EAAKhR,SAASxM,WAG3DyG,EAAM8K,cAAcnO,KAAKoa,EAAMA,EAAKhR,SAASykB,SAAU,aAAa,GAGhExqB,EAAMC,GAAGiB,SAASuJ,IAClBA,EAAS9N,KAAKoa,EAAKhR,SAASykB,UAIhCzT,EAAKxX,OAAQ,EAGbmR,WAAW,WACPqG,EAAKhR,SAAW,KAChBgR,EAAK1F,MAAQ,MACd,OAQX,OAHAjR,KAAK6nB,OAGM7nB,KAAK/F,SAAhB,IAA4B+F,KAAKhG,MAC7B,IAAK,cACL,IAAK,cAEDwc,aAAaxW,KAAKyW,OAAOrc,SAGzBsW,EAAGpH,qBAAqB/M,KAAKyD,MAAM,GAGnCR,IAEA,MAEJ,IAAK,gBAED0iB,cAAcliB,KAAKyW,OAAO8R,WAC1BrG,cAAcliB,KAAKyW,OAAOtc,SAGP,OAAf6F,KAAKnG,OAAkB+F,EAAMC,GAAGiB,SAASd,KAAKnG,MAAMkrB,UACpD/kB,KAAKnG,MAAMkrB,UAIfvlB,IAEA,MAEJ,IAAK,cAGkB,OAAfQ,KAAKnG,OACLmG,KAAKnG,MAAMgxB,SAAShmB,KAAKrF,GAI7B8Q,WAAW9Q,EAAM,wCAapBxF,GACL,OAAOsK,EAAQ0M,KAAKzU,KAAKyD,KAAMhG,mCAh5B/B,OAAO6G,QAAQb,KAAK/F,WAAanG,EAAUC,uCAG3C,OAAO8M,QAAQb,KAAKmU,WAAanU,KAAKoV,2CAGtC,OAAOvU,QAAQb,KAAK/F,WAAanG,EAAUE,yCAG3C,OAAO6M,QAAQb,KAAK/F,WAAanG,EAAUG,uCAG3C,OAAO4M,QAAQb,KAAKhG,OAAS9F,EAAME,uCAGnC,OAAOyM,QAAQb,KAAKhG,OAAS9F,EAAMC,sCAmCnC,OAAO0M,QAAQb,KAAKiR,MAAMoF,wCAO1B,OAAOxV,QAAQb,KAAKb,QAAUa,KAAKqW,SAAWrW,KAAK8e,SAAU9e,KAAKkR,SAAUlR,KAAKiR,MAAM6Z,WAAa,kCAOpG,OAAOjqB,QAAQb,KAAKiR,MAAM6N,yCAwDd/e,GACZ,IAAIgrB,EAAa,EAEbnrB,EAAMC,GAAGU,OAAOR,KAChBgrB,EAAahrB,GAIbgrB,EAAa,EACbA,EAAa,EACNA,EAAa/qB,KAAKlL,WACzBi2B,EAAa/qB,KAAKlL,UAItBkL,KAAKiR,MAAMtZ,YAAcozB,EAGzB/qB,KAAKxL,MAAMwd,IAAX,cAA6BhS,KAAKrI,YAAlC,4BAOA,OAAO6I,OAAOR,KAAKiR,MAAMtZ,8CAMd,IACHD,EAAasI,KAAKiR,MAAlBvZ,SAGR,OAAIkI,EAAMC,GAAGU,OAAO7I,GACTA,EAMPA,GAAYA,EAASwE,QAAU8D,KAAKlL,SAAW,EACxC4C,EAASW,IAAI,GAAK2H,KAAKlL,SAG3B,kCAOP,OAAO+L,QAAQb,KAAKiR,MAAMqG,0CAQ1B,IAAM0T,EAAepQ,WAAW5a,KAAKmJ,OAAOrU,UAGtCm2B,EAAejrB,KAAKiR,MAAQzQ,OAAOR,KAAKiR,MAAMnc,UAAY,EAGhE,OAAQ0L,OAAOC,MAAMuqB,GAA+BC,EAAfD,+BAO9BlwB,GACP,IAAIlG,EAASkG,EAIT8E,EAAMC,GAAGa,OAAO9L,KAChBA,EAAS4L,OAAO5L,IAIfgL,EAAMC,GAAGU,OAAO3L,KACjBA,EAASoL,KAAKhJ,QAAQua,IAAI,WAIzB3R,EAAMC,GAAGU,OAAO3L,KACdA,EAAWoL,KAAKmJ,OAAhBvU,QAIHA,EAlBQ,IAmBRA,EAnBQ,GAsBRA,EArBQ,IAsBRA,EAtBQ,GA0BZoL,KAAKmJ,OAAOvU,OAASA,EAGrBoL,KAAKiR,MAAMrc,OAASA,GAGfgL,EAAMC,GAAGwC,MAAMvH,IAAUkF,KAAKnL,OAASD,EAAS,IACjDoL,KAAKnL,OAAQ,mBAQjB,OAAO2L,OAAOR,KAAKiR,MAAMrc,oCAyBnBgD,GACN,IAAIwQ,EAASxQ,EAGRgI,EAAMC,GAAGe,QAAQwH,KAClBA,EAASpI,KAAKhJ,QAAQua,IAAI,UAIzB3R,EAAMC,GAAGe,QAAQwH,KAClBA,EAASpI,KAAKmJ,OAAOtU,OAIzBmL,KAAKmJ,OAAOtU,MAAQuT,EAGpBpI,KAAKiR,MAAMpc,MAAQuT,kBAOnB,OAAOvH,QAAQb,KAAKiR,MAAMpc,wCAQ1B,OAAKmL,KAAKkR,YAINlR,KAAKqR,UAMLxQ,QAAQb,KAAKiR,MAAMia,cACnBrqB,QAAQb,KAAKiR,MAAMka,8BACnBtqB,QAAQb,KAAKiR,MAAMma,aAAeprB,KAAKiR,MAAMma,YAAYlvB,sCAQvD6D,GACN,IAAI/J,EAAQ,KAER4J,EAAMC,GAAGU,OAAOR,KAChB/J,EAAQ+J,GAGPH,EAAMC,GAAGU,OAAOvK,KACjBA,EAAQgK,KAAKhJ,QAAQua,IAAI,UAGxB3R,EAAMC,GAAGU,OAAOvK,KACjBA,EAAQgK,KAAKmJ,OAAOnT,MAAMC,UAI1BD,EAAQ,KACRA,EAAQ,IAERA,EAAQ,IACRA,EAAQ,GAGPgK,KAAKmJ,OAAOnT,MAAMH,QAAQiT,SAAS9S,IAMxCgK,KAAKmJ,OAAOnT,MAAMC,SAAWD,EAG7BgK,KAAKiR,MAAMuW,aAAexxB,GARtBgK,KAAKxL,MAAM6U,KAAX,sBAAsCrT,EAAtC,qBAeJ,OAAOwK,OAAOR,KAAKiR,MAAMuW,4CAQjBznB,GACR,IAAIpK,EAAU,KAkBd,GAhBKiK,EAAMC,GAAGwC,MAAMtC,KAChBpK,EAAU6K,OAAOT,IAGhBH,EAAMC,GAAGU,OAAO5K,IAAwB,IAAZA,IAC7BA,EAAUqK,KAAKhJ,QAAQua,IAAI,YAG1B3R,EAAMC,GAAGU,OAAO5K,KACjBA,EAAUqK,KAAKmJ,OAAOxT,QAAQM,UAG7B2J,EAAMC,GAAGU,OAAO5K,KACjBA,EAAUqK,KAAKmJ,OAAOxT,QAAQC,SAG7BoK,KAAKnK,QAAQF,QAAQuG,OAA1B,CAIA,IAAK8D,KAAKnK,QAAQF,QAAQmT,SAASnT,GAAU,CACzC,IAAMiY,EAAUhO,EAAMgO,QAAQ5N,KAAKnK,QAAQF,QAASA,GACpDqK,KAAKxL,MAAM6U,KAAX,+BAA+C1T,EAA/C,WAAiEiY,EAAjE,YACAjY,EAAUiY,EAId5N,KAAKmJ,OAAOxT,QAAQM,SAAWN,EAG/BqK,KAAKiR,MAAMtb,QAAUA,mBAOrB,OAAOqK,KAAKiR,MAAMtb,mCAQboK,GACL,IAAMqI,EAASxI,EAAMC,GAAGe,QAAQb,GAASA,EAAQC,KAAKmJ,OAAOrT,KAAKC,OAClEiK,KAAKmJ,OAAOrT,KAAKC,OAASqS,EAC1BpI,KAAKiR,MAAMnb,KAAOsS,kBAkDlB,OAAOvH,QAAQb,KAAKiR,MAAMnb,mCAOnBiK,GACPmN,EAAO8c,OAAOztB,KAAKyD,KAAMD,mBAOzB,OAAOC,KAAKiR,MAAMqY,wCAOXvpB,GACFC,KAAKkR,SAAYlR,KAAKoR,QAKvBxR,EAAMC,GAAGa,OAAOX,IAChBC,KAAKiR,MAAM5M,aAAa,SAAUtE,GALlCC,KAAKxL,MAAM6U,KAAK,yDAapB,OAAKrJ,KAAKkR,SAAYlR,KAAKoR,QAIpBpR,KAAKiR,MAAMhG,aAAa,UAHpB,oCAUFlL,GACT,IAAMqI,EAASxI,EAAMC,GAAGe,QAAQb,GAASA,EAAQC,KAAKmJ,OAAO1U,SAC7DuL,KAAKmJ,OAAO1U,SAAW2T,kBAOvB,OAAOvH,QAAQb,KAAKmJ,OAAO1U,yCAsClBsL,GAET,GAAKH,EAAMC,GAAGa,OAAOX,GAKrB,GAAIH,EAAMC,GAAGwC,MAAMtC,GACfC,KAAK0e,gBAAe,OADxB,CAMA,IAAMjoB,EAAWsJ,EAAM4M,cAGlB3M,KAAKnK,QAAQW,SAASsS,SAASrS,IAMpCuJ,KAAK0e,gBAAe,GAGH,YAAbjoB,GAKAuJ,KAAKvJ,WAAaA,IAKtBuJ,KAAKxJ,SAASC,SAAWA,EAGzBD,EAASif,QAAQlZ,KAAKyD,KAAM,MAG5BxJ,EAASqe,YAAYtY,KAAKyD,MAG1BJ,EAAM8K,cAAcnO,KAAKyD,KAAMA,KAAKiR,MAAO,oBA3BvCjR,KAAKxL,MAAM6U,KAAX,gCAAgD5S,oBAkCpD,OAAOuJ,KAAKxJ,SAASC,mCAQjBsJ,GACJ,IAAMsrB,EACG,qBADHA,EAEM,SAIZ,GAAK/mB,EAAQxL,IAAb,CAKA,IAAMsP,EAASxI,EAAMC,GAAGe,QAAQb,GAASA,EAAQC,KAAKlH,MAAQuyB,EAG9DrrB,KAAKiR,MAAMH,0BAA0B1I,EAASijB,EAAaA,oBAO3D,OAAK/mB,EAAQxL,IAINkH,KAAKiR,MAAMqa,uBAHP,yCAyREtxB,EAAMC,EAAUsxB,GAC7B,OAAOjnB,EAAQkM,MAAMxW,EAAMC,EAAUsxB,sCAQvBnpB,EAAKhH,GACnB,OAAOwE,EAAMrK,WAAW6M,EAAKhH,SArsC/B+E","file":"plyr.min.js","sourcesContent":["// ==========================================================================\n// Plyr supported types and providers\n// ==========================================================================\n\nexport const providers = {\n    html5: 'html5',\n    youtube: 'youtube',\n    vimeo: 'vimeo',\n};\n\nexport const types = {\n    audio: 'audio',\n    video: 'video',\n};\n\nexport default { providers, types };\n","// ==========================================================================\n// Plyr default config\n// ==========================================================================\n\nconst defaults = {\n    // Disable\n    enabled: true,\n\n    // Custom media title\n    title: '',\n\n    // Logging to console\n    debug: false,\n\n    // Auto play (if supported)\n    autoplay: false,\n\n    // Only allow one media playing at once (vimeo only)\n    autopause: true,\n\n    // Default time to skip when rewind/fast forward\n    seekTime: 10,\n\n    // Default volume\n    volume: 1,\n    muted: false,\n\n    // Pass a custom duration\n    duration: null,\n\n    // Display the media duration on load in the current time position\n    // If you have opted to display both duration and currentTime, this is ignored\n    displayDuration: true,\n\n    // Invert the current time to be a countdown\n    invertTime: true,\n\n    // Clicking the currentTime inverts it's value to show time left rather than elapsed\n    toggleInvert: true,\n\n    // Aspect ratio (for embeds)\n    ratio: '16:9',\n\n    // Click video container to play/pause\n    clickToPlay: true,\n\n    // Auto hide the controls\n    hideControls: true,\n\n    // Revert to poster on finish (HTML5 - will cause reload)\n    showPosterOnEnd: false,\n\n    // Disable the standard context menu\n    disableContextMenu: true,\n\n    // Sprite (for icons)\n    loadSprite: true,\n    iconPrefix: 'plyr',\n    iconUrl: 'https://cdn.plyr.io/3.2.1/plyr.svg',\n\n    // Blank video (used to prevent errors on source change)\n    blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\n\n    // Quality default\n    quality: {\n        default: 576,\n        options: [\n            4320,\n            2880,\n            2160,\n            1440,\n            1080,\n            720,\n            576,\n            480,\n            360,\n            240,\n            'default', // YouTube's \"auto\"\n        ],\n    },\n\n    // Set loops\n    loop: {\n        active: false,\n        // start: null,\n        // end: null,\n    },\n\n    // Speed default and options to display\n    speed: {\n        selected: 1,\n        options: [\n            0.5,\n            0.75,\n            1,\n            1.25,\n            1.5,\n            1.75,\n            2,\n        ],\n    },\n\n    // Keyboard shortcut settings\n    keyboard: {\n        focused: true,\n        global: false,\n    },\n\n    // Display tooltips\n    tooltips: {\n        controls: false,\n        seek: true,\n    },\n\n    // Captions settings\n    captions: {\n        active: false,\n        language: (navigator.language || navigator.userLanguage).split('-')[0],\n    },\n\n    // Fullscreen settings\n    fullscreen: {\n        enabled: true, // Allow fullscreen?\n        fallback: true, // Fallback for vintage browsers\n        iosNative: false, // Use the native fullscreen in iOS (disables custom controls)\n    },\n\n    // Local storage\n    storage: {\n        enabled: true,\n        key: 'plyr',\n    },\n\n    // Default controls\n    controls: [\n        'play-large',\n        // 'restart',\n        // 'rewind',\n        'play',\n        // 'fast-forward',\n        'progress',\n        'current-time',\n        'mute',\n        'volume',\n        'captions',\n        'settings',\n        'pip',\n        'airplay',\n        'fullscreen',\n    ],\n    settings: [\n        'captions',\n        'quality',\n        'speed',\n    ],\n\n    // Localisation\n    i18n: {\n        restart: 'Restart',\n        rewind: 'Rewind {seektime} secs',\n        play: 'Play',\n        pause: 'Pause',\n        fastForward: 'Forward {seektime} secs',\n        seek: 'Seek',\n        played: 'Played',\n        buffered: 'Buffered',\n        currentTime: 'Current time',\n        duration: 'Duration',\n        volume: 'Volume',\n        mute: 'Mute',\n        unmute: 'Unmute',\n        enableCaptions: 'Enable captions',\n        disableCaptions: 'Disable captions',\n        enterFullscreen: 'Enter fullscreen',\n        exitFullscreen: 'Exit fullscreen',\n        frameTitle: 'Player for {title}',\n        captions: 'Captions',\n        settings: 'Settings',\n        speed: 'Speed',\n        normal: 'Normal',\n        quality: 'Quality',\n        loop: 'Loop',\n        start: 'Start',\n        end: 'End',\n        all: 'All',\n        reset: 'Reset',\n        disabled: 'Disabled',\n        enabled: 'Enabled',\n        advertisement: 'Ad',\n    },\n\n    // URLs\n    urls: {\n        vimeo: {\n            api: 'https://player.vimeo.com/api/player.js',\n        },\n        youtube: {\n            api: 'https://www.youtube.com/iframe_api',\n        },\n        googleIMA: {\n            api: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n        },\n    },\n\n    // Custom control listeners\n    listeners: {\n        seek: null,\n        play: null,\n        pause: null,\n        restart: null,\n        rewind: null,\n        fastForward: null,\n        mute: null,\n        volume: null,\n        captions: null,\n        fullscreen: null,\n        pip: null,\n        airplay: null,\n        speed: null,\n        quality: null,\n        loop: null,\n        language: null,\n    },\n\n    // Events to watch and bubble\n    events: [\n        // Events to watch on HTML5 media elements and bubble\n        // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\n        'ended',\n        'progress',\n        'stalled',\n        'playing',\n        'waiting',\n        'canplay',\n        'canplaythrough',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'timeupdate',\n        'volumechange',\n        'play',\n        'pause',\n        'error',\n        'seeking',\n        'seeked',\n        'emptied',\n        'ratechange',\n        'cuechange',\n\n        // Custom events\n        'enterfullscreen',\n        'exitfullscreen',\n        'captionsenabled',\n        'captionsdisabled',\n        'languagechange',\n        'controlshidden',\n        'controlsshown',\n        'ready',\n\n        // YouTube\n        'statechange',\n        'qualitychange',\n        'qualityrequested',\n\n        // Ads\n        'adsloaded',\n        'adscontentpause',\n        'adscontentresume',\n        'adstarted',\n        'adsmidpoint',\n        'adscomplete',\n        'adsallcomplete',\n        'adsimpression',\n        'adsclick',\n    ],\n\n    // Selectors\n    // Change these to match your template if using custom HTML\n    selectors: {\n        editable: 'input, textarea, select, [contenteditable]',\n        container: '.plyr',\n        controls: {\n            container: null,\n            wrapper: '.plyr__controls',\n        },\n        labels: '[data-plyr]',\n        buttons: {\n            play: '[data-plyr=\"play\"]',\n            pause: '[data-plyr=\"pause\"]',\n            restart: '[data-plyr=\"restart\"]',\n            rewind: '[data-plyr=\"rewind\"]',\n            fastForward: '[data-plyr=\"fast-forward\"]',\n            mute: '[data-plyr=\"mute\"]',\n            captions: '[data-plyr=\"captions\"]',\n            fullscreen: '[data-plyr=\"fullscreen\"]',\n            pip: '[data-plyr=\"pip\"]',\n            airplay: '[data-plyr=\"airplay\"]',\n            settings: '[data-plyr=\"settings\"]',\n            loop: '[data-plyr=\"loop\"]',\n        },\n        inputs: {\n            seek: '[data-plyr=\"seek\"]',\n            volume: '[data-plyr=\"volume\"]',\n            speed: '[data-plyr=\"speed\"]',\n            language: '[data-plyr=\"language\"]',\n            quality: '[data-plyr=\"quality\"]',\n        },\n        display: {\n            currentTime: '.plyr__time--current',\n            duration: '.plyr__time--duration',\n            buffer: '.plyr__progress--buffer',\n            played: '.plyr__progress--played',\n            loop: '.plyr__progress--loop',\n            volume: '.plyr__volume--display',\n        },\n        progress: '.plyr__progress',\n        captions: '.plyr__captions',\n        menu: {\n            quality: '.js-plyr__menu__list--quality',\n        },\n    },\n\n    // Class hooks added to the player in different states\n    classNames: {\n        video: 'plyr__video-wrapper',\n        embed: 'plyr__video-embed',\n        ads: 'plyr__ads',\n        control: 'plyr__control',\n        type: 'plyr--{0}',\n        provider: 'plyr--{0}',\n        stopped: 'plyr--stopped',\n        playing: 'plyr--playing',\n        loading: 'plyr--loading',\n        error: 'plyr--has-error',\n        hover: 'plyr--hover',\n        tooltip: 'plyr__tooltip',\n        cues: 'plyr__cues',\n        hidden: 'plyr__sr-only',\n        hideControls: 'plyr--hide-controls',\n        isIos: 'plyr--is-ios',\n        isTouch: 'plyr--is-touch',\n        uiSupported: 'plyr--full-ui',\n        noTransition: 'plyr--no-transition',\n        menu: {\n            value: 'plyr__menu__value',\n            badge: 'plyr__badge',\n            open: 'plyr--menu-open',\n        },\n        captions: {\n            enabled: 'plyr--captions-enabled',\n            active: 'plyr--captions-active',\n        },\n        fullscreen: {\n            enabled: 'plyr--fullscreen-enabled',\n            fallback: 'plyr--fullscreen-fallback',\n        },\n        pip: {\n            supported: 'plyr--pip-supported',\n            active: 'plyr--pip-active',\n        },\n        airplay: {\n            supported: 'plyr--airplay-supported',\n            active: 'plyr--airplay-active',\n        },\n        tabFocus: 'plyr__tab-focus',\n    },\n\n    // Embed attributes\n    attributes: {\n        embed: {\n            provider: 'data-plyr-provider',\n            id: 'data-plyr-embed-id',\n        },\n    },\n\n    // API keys\n    keys: {\n        google: null,\n    },\n\n    // Advertisements plugin\n    // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\n    ads: {\n        enabled: false,\n        publisherId: '',\n    },\n};\n\nexport default defaults;\n","// ==========================================================================\n// Plyr support checks\n// ==========================================================================\n\nimport utils from './utils';\n\n// Check for feature support\nconst support = {\n    // Basic support\n    audio: 'canPlayType' in document.createElement('audio'),\n    video: 'canPlayType' in document.createElement('video'),\n\n    // Check for support\n    // Basic functionality vs full UI\n    check(type, provider, playsinline) {\n        let api = false;\n        let ui = false;\n        const browser = utils.getBrowser();\n        const canPlayInline = browser.isIPhone && playsinline && support.playsinline;\n\n        switch (`${provider}:${type}`) {\n            case 'html5:video':\n                api = support.video;\n                ui = api && support.rangeInput && (!browser.isIPhone || canPlayInline);\n                break;\n\n            case 'html5:audio':\n                api = support.audio;\n                ui = api && support.rangeInput;\n                break;\n\n            case 'youtube:video':\n            case 'vimeo:video':\n                api = true;\n                ui = support.rangeInput && (!browser.isIPhone || canPlayInline);\n                break;\n\n            default:\n                api = support.audio && support.video;\n                ui = api && support.rangeInput;\n        }\n\n        return {\n            api,\n            ui,\n        };\n    },\n\n    // Picture-in-picture support\n    // Safari only currently\n    pip: (() => {\n        const browser = utils.getBrowser();\n        return !browser.isIPhone && utils.is.function(utils.createElement('video').webkitSetPresentationMode);\n    })(),\n\n    // Airplay support\n    // Safari only currently\n    airplay: utils.is.function(window.WebKitPlaybackTargetAvailabilityEvent),\n\n    // Inline playback support\n    // https://webkit.org/blog/6784/new-video-policies-for-ios/\n    playsinline: 'playsInline' in document.createElement('video'),\n\n    // Check for mime type support against a player instance\n    // Credits: http://diveintohtml5.info/everything.html\n    // Related: http://www.leanbackplayer.com/test/h5mt.html\n    mime(type) {\n        const { media } = this;\n\n        try {\n            // Bail if no checking function\n            if (!this.isHTML5 || !utils.is.function(media.canPlayType)) {\n                return false;\n            }\n\n            // Check directly if codecs specified\n            if (type.includes('codecs=')) {\n                return media.canPlayType(type).replace(/no/, '');\n            }\n\n            // Type specific checks\n            if (this.isVideo) {\n                switch (type) {\n                    case 'video/webm':\n                        return media.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/no/, '');\n\n                    case 'video/mp4':\n                        return media.canPlayType('video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"').replace(/no/, '');\n\n                    case 'video/ogg':\n                        return media.canPlayType('video/ogg; codecs=\"theora\"').replace(/no/, '');\n\n                    default:\n                        return false;\n                }\n            } else if (this.isAudio) {\n                switch (type) {\n                    case 'audio/mpeg':\n                        return media.canPlayType('audio/mpeg;').replace(/no/, '');\n\n                    case 'audio/ogg':\n                        return media.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/no/, '');\n\n                    case 'audio/wav':\n                        return media.canPlayType('audio/wav; codecs=\"1\"').replace(/no/, '');\n\n                    default:\n                        return false;\n                }\n            }\n        } catch (e) {\n            return false;\n        }\n\n        // If we got this far, we're stuffed\n        return false;\n    },\n\n    // Check for textTracks support\n    textTracks: 'textTracks' in document.createElement('video'),\n\n    // Check for passive event listener support\n    // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // https://www.youtube.com/watch?v=NPM6172J22g\n    passiveListeners: (() => {\n        // Test via a getter in the options object to see if the passive property is accessed\n        let supported = false;\n        try {\n            const options = Object.defineProperty({}, 'passive', {\n                get() {\n                    supported = true;\n                    return null;\n                },\n            });\n            window.addEventListener('test', null, options);\n        } catch (e) {\n            // Do nothing\n        }\n\n        return supported;\n    })(),\n\n    // <input type=\"range\"> Sliders\n    rangeInput: (() => {\n        const range = document.createElement('input');\n        range.type = 'range';\n        return range.type === 'range';\n    })(),\n\n    // Touch\n    // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\n    touch: 'ontouchstart' in document.documentElement,\n\n    // Detect transitions support\n    transitions: utils.transitionEndEvent !== false,\n\n    // Reduced motion iOS & MacOS setting\n    // https://webkit.org/blog/7551/responsive-design-for-motion/\n    reducedMotion: 'matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches,\n};\n\nexport default support;\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathStripped = path.replace(/^(css|img)!/, ''),\n      isCss,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(path)) {\n    isCss = true;\n\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped; //.replace(/^css!/, '');  // remove \"css!\" prefix\n  } else if (/(^img!|\\.(png|gif|jpg|svg)$)/.test(path)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = path;\n    e.async = async === undefined ? true : async;\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // Note: The following code isolates IE using `hideFocus` and treats empty\n    // stylesheets as failures to get around lack of onerror support\n    if (isCss && 'hideFocus' in e) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText`\n        result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    }\n\n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function)} [arg1] - The bundleId or success callback\n * @param {Function} [arg2] - The success or error callback\n * @param {Function} [arg3] - The error callback\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  // load scripts\n  loadFiles(paths, function (pathsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, pathsNotFound);\n\n    // publish bundle load event\n    publish(bundleId, pathsNotFound);\n  }, args);\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n","// ==========================================================================\n// Plyr utils\n// ==========================================================================\n\nimport loadjs from 'loadjs';\n\nimport support from './support';\nimport { providers } from './types';\n\nconst utils = {\n    // Check variable types\n    is: {\n        plyr(input) {\n            return this.instanceof(input, window.Plyr);\n        },\n        object(input) {\n            return this.getConstructor(input) === Object;\n        },\n        number(input) {\n            return this.getConstructor(input) === Number && !Number.isNaN(input);\n        },\n        string(input) {\n            return this.getConstructor(input) === String;\n        },\n        boolean(input) {\n            return this.getConstructor(input) === Boolean;\n        },\n        function(input) {\n            return this.getConstructor(input) === Function;\n        },\n        array(input) {\n            return !this.nullOrUndefined(input) && Array.isArray(input);\n        },\n        weakMap(input) {\n            return this.instanceof(input, window.WeakMap);\n        },\n        nodeList(input) {\n            return this.instanceof(input, window.NodeList);\n        },\n        element(input) {\n            return this.instanceof(input, window.Element);\n        },\n        textNode(input) {\n            return this.getConstructor(input) === Text;\n        },\n        event(input) {\n            return this.instanceof(input, window.Event);\n        },\n        cue(input) {\n            return this.instanceof(input, window.TextTrackCue) || this.instanceof(input, window.VTTCue);\n        },\n        track(input) {\n            return this.instanceof(input, TextTrack) || (!this.nullOrUndefined(input) && this.string(input.kind));\n        },\n        url(input) {\n            return !this.nullOrUndefined(input) && /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-/]))?/.test(input);\n        },\n        nullOrUndefined(input) {\n            return input === null || typeof input === 'undefined';\n        },\n        empty(input) {\n            return (\n                this.nullOrUndefined(input) ||\n                ((this.string(input) || this.array(input) || this.nodeList(input)) && !input.length) ||\n                (this.object(input) && !Object.keys(input).length)\n            );\n        },\n        instanceof(input, constructor) {\n            return Boolean(input && constructor && input instanceof constructor);\n        },\n        getConstructor(input) {\n            return !this.nullOrUndefined(input) ? input.constructor : null;\n        },\n    },\n\n    // Unfortunately, due to mixed support, UA sniffing is required\n    getBrowser() {\n        return {\n            isIE: /* @cc_on!@ */ false || !!document.documentMode,\n            isWebkit: 'WebkitAppearance' in document.documentElement.style && !/Edge/.test(navigator.userAgent),\n            isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),\n            isIos: /(iPad|iPhone|iPod)/gi.test(navigator.platform),\n        };\n    },\n\n    // Fetch wrapper\n    // Using XHR to avoid issues with older browsers\n    fetch(url, responseType = 'text') {\n        return new Promise((resolve, reject) => {\n            try {\n                const request = new XMLHttpRequest();\n\n                // Check for CORS support\n                if (!('withCredentials' in request)) {\n                    return;\n                }\n\n                request.addEventListener('load', () => {\n                    if (responseType === 'text') {\n                        try {\n                            resolve(JSON.parse(request.responseText));\n                        } catch (e) {\n                            resolve(request.responseText);\n                        }\n                    } else {\n                        resolve(request.response);\n                    }\n                });\n\n                request.addEventListener('error', () => {\n                    throw new Error(request.statusText);\n                });\n\n                request.open('GET', url, true);\n\n                // Set the required response type\n                request.responseType = responseType;\n\n                request.send();\n            } catch (e) {\n                reject(e);\n            }\n        });\n    },\n\n    // Load an external script\n    loadScript(url) {\n        return new Promise((resolve, reject) => {\n            loadjs(url, {\n                success: resolve,\n                error: reject,\n            });\n        });\n    },\n\n    // Load an external SVG sprite\n    loadSprite(url, id) {\n        if (!utils.is.string(url)) {\n            return;\n        }\n\n        const prefix = 'cache-';\n        const hasId = utils.is.string(id);\n        let isCached = false;\n\n        const exists = () => document.querySelectorAll(`#${id}`).length;\n\n        function injectSprite(data) {\n            // Check again incase of race condition\n            if (hasId && exists()) {\n                return;\n            }\n\n            // Inject content\n            this.innerHTML = data;\n\n            // Inject the SVG to the body\n            document.body.insertBefore(this, document.body.childNodes[0]);\n        }\n\n        // Only load once if ID set\n        if (!hasId || !exists()) {\n            // Create container\n            const container = document.createElement('div');\n            utils.toggleHidden(container, true);\n\n            if (hasId) {\n                container.setAttribute('id', id);\n            }\n\n            // Check in cache\n            if (support.storage) {\n                const cached = window.localStorage.getItem(prefix + id);\n                isCached = cached !== null;\n\n                if (isCached) {\n                    const data = JSON.parse(cached);\n                    injectSprite.call(container, data.content);\n                    return;\n                }\n            }\n\n            // Get the sprite\n            utils\n                .fetch(url)\n                .then(result => {\n                    if (utils.is.empty(result)) {\n                        return;\n                    }\n\n                    if (support.storage) {\n                        window.localStorage.setItem(\n                            prefix + id,\n                            JSON.stringify({\n                                content: result,\n                            }),\n                        );\n                    }\n\n                    injectSprite.call(container, result);\n                })\n                .catch(() => {});\n        }\n    },\n\n    // Generate a random ID\n    generateId(prefix) {\n        return `${prefix}-${Math.floor(Math.random() * 10000)}`;\n    },\n\n    // Wrap an element\n    wrap(elements, wrapper) {\n        // Convert `elements` to an array, if necessary.\n        const targets = elements.length ? elements : [elements];\n\n        // Loops backwards to prevent having to clone the wrapper on the\n        // first element (see `child` below).\n        Array.from(targets)\n            .reverse()\n            .forEach((element, index) => {\n                const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\n\n                // Cache the current parent and sibling.\n                const parent = element.parentNode;\n                const sibling = element.nextSibling;\n\n                // Wrap the element (is automatically removed from its current\n                // parent).\n                child.appendChild(element);\n\n                // If the element had a sibling, insert the wrapper before\n                // the sibling to maintain the HTML structure; otherwise, just\n                // append it to the parent.\n                if (sibling) {\n                    parent.insertBefore(child, sibling);\n                } else {\n                    parent.appendChild(child);\n                }\n            });\n    },\n\n    // Create a DocumentFragment\n    createElement(type, attributes, text) {\n        // Create a new <element>\n        const element = document.createElement(type);\n\n        // Set all passed attributes\n        if (utils.is.object(attributes)) {\n            utils.setAttributes(element, attributes);\n        }\n\n        // Add text node\n        if (utils.is.string(text)) {\n            element.textContent = text;\n        }\n\n        // Return built element\n        return element;\n    },\n\n    // Inaert an element after another\n    insertAfter(element, target) {\n        target.parentNode.insertBefore(element, target.nextSibling);\n    },\n\n    // Insert a DocumentFragment\n    insertElement(type, parent, attributes, text) {\n        // Inject the new <element>\n        parent.appendChild(utils.createElement(type, attributes, text));\n    },\n\n    // Remove an element\n    removeElement(element) {\n        if (!utils.is.element(element) || !utils.is.element(element.parentNode)) {\n            return;\n        }\n\n        if (utils.is.nodeList(element) || utils.is.array(element)) {\n            Array.from(element).forEach(utils.removeElement);\n            return;\n        }\n\n        element.parentNode.removeChild(element);\n    },\n\n    // Remove all child elements\n    emptyElement(element) {\n        let { length } = element.childNodes;\n\n        while (length > 0) {\n            element.removeChild(element.lastChild);\n            length -= 1;\n        }\n    },\n\n    // Replace element\n    replaceElement(newChild, oldChild) {\n        if (!utils.is.element(oldChild) || !utils.is.element(oldChild.parentNode) || !utils.is.element(newChild)) {\n            return null;\n        }\n\n        oldChild.parentNode.replaceChild(newChild, oldChild);\n\n        return newChild;\n    },\n\n    // Set attributes\n    setAttributes(element, attributes) {\n        if (!utils.is.element(element) || utils.is.empty(attributes)) {\n            return;\n        }\n\n        Object.entries(attributes).forEach(([\n            key,\n            value,\n        ]) => {\n            element.setAttribute(key, value);\n        });\n    },\n\n    // Get an attribute object from a string selector\n    getAttributesFromSelector(sel, existingAttributes) {\n        // For example:\n        // '.test' to { class: 'test' }\n        // '#test' to { id: 'test' }\n        // '[data-test=\"test\"]' to { 'data-test': 'test' }\n\n        if (!utils.is.string(sel) || utils.is.empty(sel)) {\n            return {};\n        }\n\n        const attributes = {};\n        const existing = existingAttributes;\n\n        sel.split(',').forEach(s => {\n            // Remove whitespace\n            const selector = s.trim();\n            const className = selector.replace('.', '');\n            const stripped = selector.replace(/[[\\]]/g, '');\n\n            // Get the parts and value\n            const parts = stripped.split('=');\n            const key = parts[0];\n            const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : '';\n\n            // Get the first character\n            const start = selector.charAt(0);\n\n            switch (start) {\n                case '.':\n                    // Add to existing classname\n                    if (utils.is.object(existing) && utils.is.string(existing.class)) {\n                        existing.class += ` ${className}`;\n                    }\n\n                    attributes.class = className;\n                    break;\n\n                case '#':\n                    // ID selector\n                    attributes.id = selector.replace('#', '');\n                    break;\n\n                case '[':\n                    // Attribute selector\n                    attributes[key] = value;\n\n                    break;\n\n                default:\n                    break;\n            }\n        });\n\n        return attributes;\n    },\n\n    // Toggle class on an element\n    toggleClass(element, className, toggle) {\n        if (utils.is.element(element)) {\n            const contains = element.classList.contains(className);\n\n            element.classList[toggle ? 'add' : 'remove'](className);\n\n            return (toggle && !contains) || (!toggle && contains);\n        }\n\n        return null;\n    },\n\n    // Has class name\n    hasClass(element, className) {\n        return utils.is.element(element) && element.classList.contains(className);\n    },\n\n    // Toggle hidden attribute on an element\n    toggleHidden(element, toggle) {\n        if (!utils.is.element(element)) {\n            return;\n        }\n\n        if (toggle) {\n            element.setAttribute('hidden', '');\n        } else {\n            element.removeAttribute('hidden');\n        }\n    },\n\n    // Element matches selector\n    matches(element, selector) {\n        const prototype = { Element };\n\n        function match() {\n            return Array.from(document.querySelectorAll(selector)).includes(this);\n        }\n\n        const matches = prototype.matches || prototype.webkitMatchesSelector || prototype.mozMatchesSelector || prototype.msMatchesSelector || match;\n\n        return matches.call(element, selector);\n    },\n\n    // Find all elements\n    getElements(selector) {\n        return this.elements.container.querySelectorAll(selector);\n    },\n\n    // Find a single element\n    getElement(selector) {\n        return this.elements.container.querySelector(selector);\n    },\n\n    // Find the UI controls and store references in custom controls\n    // TODO: Allow settings menus with custom controls\n    findElements() {\n        try {\n            this.elements.controls = utils.getElement.call(this, this.config.selectors.controls.wrapper);\n\n            // Buttons\n            this.elements.buttons = {\n                play: utils.getElements.call(this, this.config.selectors.buttons.play),\n                pause: utils.getElement.call(this, this.config.selectors.buttons.pause),\n                restart: utils.getElement.call(this, this.config.selectors.buttons.restart),\n                rewind: utils.getElement.call(this, this.config.selectors.buttons.rewind),\n                fastForward: utils.getElement.call(this, this.config.selectors.buttons.fastForward),\n                mute: utils.getElement.call(this, this.config.selectors.buttons.mute),\n                pip: utils.getElement.call(this, this.config.selectors.buttons.pip),\n                airplay: utils.getElement.call(this, this.config.selectors.buttons.airplay),\n                settings: utils.getElement.call(this, this.config.selectors.buttons.settings),\n                captions: utils.getElement.call(this, this.config.selectors.buttons.captions),\n                fullscreen: utils.getElement.call(this, this.config.selectors.buttons.fullscreen),\n            };\n\n            // Progress\n            this.elements.progress = utils.getElement.call(this, this.config.selectors.progress);\n\n            // Inputs\n            this.elements.inputs = {\n                seek: utils.getElement.call(this, this.config.selectors.inputs.seek),\n                volume: utils.getElement.call(this, this.config.selectors.inputs.volume),\n            };\n\n            // Display\n            this.elements.display = {\n                buffer: utils.getElement.call(this, this.config.selectors.display.buffer),\n                duration: utils.getElement.call(this, this.config.selectors.display.duration),\n                currentTime: utils.getElement.call(this, this.config.selectors.display.currentTime),\n            };\n\n            // Seek tooltip\n            if (utils.is.element(this.elements.progress)) {\n                this.elements.display.seekTooltip = this.elements.progress.querySelector(`.${this.config.classNames.tooltip}`);\n            }\n\n            return true;\n        } catch (error) {\n            // Log it\n            this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\n\n            // Restore native video controls\n            this.toggleNativeControls(true);\n\n            return false;\n        }\n    },\n\n    // Get the focused element\n    getFocusElement() {\n        let focused = document.activeElement;\n\n        if (!focused || focused === document.body) {\n            focused = null;\n        } else {\n            focused = document.querySelector(':focus');\n        }\n\n        return focused;\n    },\n\n    // Trap focus inside container\n    trapFocus(element = null, toggle = false) {\n        if (!utils.is.element(element)) {\n            return;\n        }\n\n        const focusable = utils.getElements.call(this, 'button:not(:disabled), input:not(:disabled), [tabindex]');\n        const first = focusable[0];\n        const last = focusable[focusable.length - 1];\n\n        const trap = event => {\n            // Bail if not tab key or not fullscreen\n            if (event.key !== 'Tab' || event.keyCode !== 9) {\n                return;\n            }\n\n            // Get the current focused element\n            const focused = utils.getFocusElement();\n\n            if (focused === last && !event.shiftKey) {\n                // Move focus to first element that can be tabbed if Shift isn't used\n                first.focus();\n                event.preventDefault();\n            } else if (focused === first && event.shiftKey) {\n                // Move focus to last element that can be tabbed if Shift is used\n                last.focus();\n                event.preventDefault();\n            }\n        };\n\n        if (toggle) {\n            utils.on(this.elements.container, 'keydown', trap, false);\n        } else {\n            utils.off(this.elements.container, 'keydown', trap, false);\n        }\n    },\n\n    // Toggle event listener\n    toggleListener(elements, event, callback, toggle = false, passive = true, capture = false) {\n        // Bail if no elemetns, event, or callback\n        if (utils.is.empty(elements) || utils.is.empty(event) || !utils.is.function(callback)) {\n            return;\n        }\n\n        // If a nodelist is passed, call itself on each node\n        if (utils.is.nodeList(elements) || utils.is.array(elements)) {\n            // Create listener for each node\n            Array.from(elements).forEach(element => {\n                if (element instanceof Node) {\n                    utils.toggleListener.call(null, element, event, callback, toggle, passive, capture);\n                }\n            });\n\n            return;\n        }\n\n        // Allow multiple events\n        const events = event.split(' ');\n\n        // Build options\n        // Default to just the capture boolean for browsers with no passive listener support\n        let options = capture;\n\n        // If passive events listeners are supported\n        if (support.passiveListeners) {\n            options = {\n                // Whether the listener can be passive (i.e. default never prevented)\n                passive,\n                // Whether the listener is a capturing listener or not\n                capture,\n            };\n        }\n\n        // If a single node is passed, bind the event listener\n        events.forEach(type => {\n            elements[toggle ? 'addEventListener' : 'removeEventListener'](type, callback, options);\n        });\n    },\n\n    // Bind event handler\n    on(element, events = '', callback, passive = true, capture = false) {\n        utils.toggleListener(element, events, callback, true, passive, capture);\n    },\n\n    // Unbind event handler\n    off(element, events = '', callback, passive = true, capture = false) {\n        utils.toggleListener(element, events, callback, false, passive, capture);\n    },\n\n    // Trigger event\n    dispatchEvent(element, type = '', bubbles = false, detail = {}) {\n        // Bail if no element\n        if (!utils.is.element(element) || utils.is.empty(type)) {\n            return;\n        }\n\n        // Create and dispatch the event\n        const event = new CustomEvent(type, {\n            bubbles,\n            detail: Object.assign({}, detail, {\n                plyr: utils.is.plyr(this) ? this : null,\n            }),\n        });\n\n        // Dispatch the event\n        element.dispatchEvent(event);\n    },\n\n    // Toggle aria-pressed state on a toggle button\n    // http://www.ssbbartgroup.com/blog/how-not-to-misuse-aria-states-properties-and-roles\n    toggleState(element, input) {\n        // If multiple elements passed\n        if (utils.is.array(element) || utils.is.nodeList(element)) {\n            Array.from(element).forEach(target => utils.toggleState(target, input));\n            return;\n        }\n\n        // Bail if no target\n        if (!utils.is.element(element)) {\n            return;\n        }\n\n        // Get state\n        const pressed = element.getAttribute('aria-pressed') === 'true';\n        const state = utils.is.boolean(input) ? input : !pressed;\n\n        // Set the attribute on target\n        element.setAttribute('aria-pressed', state);\n    },\n\n    // Get percentage\n    getPercentage(current, max) {\n        if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\n            return 0;\n        }\n\n        return (current / max * 100).toFixed(2);\n    },\n\n    // Time helpers\n    getHours(value) {\n        return parseInt((value / 60 / 60) % 60, 10);\n    },\n    getMinutes(value) {\n        return parseInt((value / 60) % 60, 10);\n    },\n    getSeconds(value) {\n        return parseInt(value % 60, 10);\n    },\n\n    // Format time to UI friendly string\n    formatTime(time = 0, displayHours = false, inverted = false) {\n        // Bail if the value isn't a number\n        if (!utils.is.number(time)) {\n            return this.formatTime(null, displayHours, inverted);\n        }\n\n        // Format time component to add leading zero\n        const format = value => `0${value}`.slice(-2);\n\n        // Breakdown to hours, mins, secs\n        let hours = this.getHours(time);\n        const mins = this.getMinutes(time);\n        const secs = this.getSeconds(time);\n\n        // Do we need to display hours?\n        if (displayHours || hours > 0) {\n            hours = `${hours}:`;\n        } else {\n            hours = '';\n        }\n\n        // Render\n        return `${inverted ? '-' : ''}${hours}${format(mins)}:${format(secs)}`;\n    },\n\n    // Replace all occurances of a string in a string\n    replaceAll(input = '', find = '', replace = '') {\n        return input.replace(new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'), replace.toString());\n    },\n\n    // Convert to title case\n    toTitleCase(input = '') {\n        return input.toString().replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase());\n    },\n\n    // Convert string to pascalCase\n    toPascalCase(input = '') {\n        let string = input.toString();\n\n        // Convert kebab case\n        string = utils.replaceAll(string, '-', ' ');\n\n        // Convert snake case\n        string = utils.replaceAll(string, '_', ' ');\n\n        // Convert to title case\n        string = utils.toTitleCase(string);\n\n        // Convert to pascal case\n        return utils.replaceAll(string, ' ', '');\n    },\n\n    // Convert string to pascalCase\n    toCamelCase(input = '') {\n        let string = input.toString();\n\n        // Convert to pascal case\n        string = utils.toPascalCase(string);\n\n        // Convert first character to lowercase\n        return string.charAt(0).toLowerCase() + string.slice(1);\n    },\n\n    // Deep extend destination object with N more objects\n    extend(target = {}, ...sources) {\n        if (!sources.length) {\n            return target;\n        }\n\n        const source = sources.shift();\n\n        if (!utils.is.object(source)) {\n            return target;\n        }\n\n        Object.keys(source).forEach(key => {\n            if (utils.is.object(source[key])) {\n                if (!Object.keys(target).includes(key)) {\n                    Object.assign(target, { [key]: {} });\n                }\n\n                utils.extend(target[key], source[key]);\n            } else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        });\n\n        return utils.extend(target, ...sources);\n    },\n\n    // Remove duplicates in an array\n    dedupe(array) {\n        if (!utils.is.array(array)) {\n            return array;\n        }\n\n        return array.filter((item, index) => array.indexOf(item) === index);\n    },\n\n    // Get the closest value in an array\n    closest(array, value) {\n        if (!utils.is.array(array) || !array.length) {\n            return null;\n        }\n\n        return array.reduce((prev, curr) => Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev);\n    },\n\n    // Get the provider for a given URL\n    getProviderByUrl(url) {\n        // YouTube\n        if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+$/.test(url)) {\n            return providers.youtube;\n        }\n\n        // Vimeo\n        if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{8,}(?=\\b|\\/)/.test(url)) {\n            return providers.vimeo;\n        }\n\n        return null;\n    },\n\n    // Parse YouTube ID from URL\n    parseYouTubeId(url) {\n        if (utils.is.empty(url)) {\n            return null;\n        }\n\n        const regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n        return url.match(regex) ? RegExp.$2 : url;\n    },\n\n    // Parse Vimeo ID from URL\n    parseVimeoId(url) {\n        if (utils.is.empty(url)) {\n            return null;\n        }\n\n        if (utils.is.number(Number(url))) {\n            return url;\n        }\n\n        const regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n        return url.match(regex) ? RegExp.$2 : url;\n    },\n\n    // Convert a URL to a location object\n    parseUrl(url) {\n        const parser = document.createElement('a');\n        parser.href = url;\n        return parser;\n    },\n\n    // Get URL query parameters\n    getUrlParams(input) {\n        let search = input;\n\n        // Parse URL if needed\n        if (input.startsWith('http://') || input.startsWith('https://')) {\n            ({ search } = this.parseUrl(input));\n        }\n\n        if (this.is.empty(search)) {\n            return null;\n        }\n\n        const hashes = search.slice(search.indexOf('?') + 1).split('&');\n\n        return hashes.reduce((params, hash) => {\n            const [\n                key,\n                val,\n            ] = hash.split('=');\n\n            return Object.assign(params, { [key]: decodeURIComponent(val) });\n        }, {});\n    },\n\n    // Convert object to URL parameters\n    buildUrlParams(input) {\n        if (!utils.is.object(input)) {\n            return '';\n        }\n\n        return Object.keys(input)\n            .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(input[key])}`)\n            .join('&');\n    },\n\n    // Remove HTML from a string\n    stripHTML(source) {\n        const fragment = document.createDocumentFragment();\n        const element = document.createElement('div');\n        fragment.appendChild(element);\n        element.innerHTML = source;\n        return fragment.firstChild.innerText;\n    },\n\n    // Get aspect ratio for dimensions\n    getAspectRatio(width, height) {\n        const getRatio = (w, h) => (h === 0 ? w : getRatio(h, w % h));\n        const ratio = getRatio(width, height);\n        return `${width / ratio}:${height / ratio}`;\n    },\n\n    // Get the transition end event\n    get transitionEndEvent() {\n        const element = document.createElement('span');\n\n        const events = {\n            WebkitTransition: 'webkitTransitionEnd',\n            MozTransition: 'transitionend',\n            OTransition: 'oTransitionEnd otransitionend',\n            transition: 'transitionend',\n        };\n\n        const type = Object.keys(events).find(event => element.style[event] !== undefined);\n\n        return utils.is.string(type) ? events[type] : false;\n    },\n\n    // Force repaint of element\n    repaint(element) {\n        setTimeout(() => {\n            utils.toggleHidden(element, true);\n            element.offsetHeight; // eslint-disable-line\n            utils.toggleHidden(element, false);\n        }, 0);\n    },\n};\n\nexport default utils;\n","// ==========================================================================\n// Console wrapper\n// ==========================================================================\n\nconst noop = () => {};\n\nexport default class Console {\n    constructor(enabled = false) {\n        this.enabled = window.console && enabled;\n\n        if (this.enabled) {\n            this.log('Debugging enabled');\n        }\n    }\n\n    get log() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\n    }\n    get warn() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\n    }\n    get error() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\n    }\n}\n","// ==========================================================================\n// Fullscreen wrapper\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API#prefixing\n// ==========================================================================\n\nimport utils from './utils';\n\nconst browser = utils.getBrowser();\n\nfunction onChange() {\n    if (!this.enabled) {\n        return;\n    }\n\n    // Update toggle button\n    const button = this.player.elements.buttons.fullscreen;\n    if (utils.is.element(button)) {\n        utils.toggleState(button, this.active);\n    }\n\n    // Trigger an event\n    utils.dispatchEvent(this.target, this.active ? 'enterfullscreen' : 'exitfullscreen', true);\n\n    // Trap focus in container\n    if (!browser.isIos) {\n        utils.trapFocus.call(this.player, this.target, this.active);\n    }\n}\n\nfunction toggleFallback(toggle = false) {\n    // Store or restore scroll position\n    if (toggle) {\n        this.scrollPosition = {\n            x: window.scrollX || 0,\n            y: window.scrollY || 0,\n        };\n    } else {\n        window.scrollTo(this.scrollPosition.x, this.scrollPosition.y);\n    }\n\n    // Toggle scroll\n    document.body.style.overflow = toggle ? 'hidden' : '';\n\n    // Toggle class hook\n    utils.toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n\n    // Toggle button and fire events\n    onChange.call(this);\n}\n\nclass Fullscreen {\n    constructor(player) {\n        // Keep reference to parent\n        this.player = player;\n\n        // Get prefix\n        this.prefix = Fullscreen.prefix;\n        this.name = Fullscreen.name;\n\n        // Scroll position\n        this.scrollPosition = { x: 0, y: 0 };\n\n        // Register event listeners\n        // Handle event (incase user presses escape etc)\n        utils.on(document, this.prefix === 'ms' ? 'MSFullscreenChange' : `${this.prefix}fullscreenchange`, () => {\n            // TODO: Filter for target??\n            onChange.call(this);\n        });\n\n        // Fullscreen toggle on double click\n        utils.on(this.player.elements.container, 'dblclick', event => {\n            // Ignore double click in controls\n            if (this.player.elements.controls.contains(event.target)) {\n                return;\n            }\n\n            this.toggle();\n        });\n\n        // Update the UI\n        this.update();\n    }\n\n    // Determine if native supported\n    static get native() {\n        return !!(document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled);\n    }\n\n    // Get the prefix for handlers\n    static get prefix() {\n        // No prefix\n        if (utils.is.function(document.exitFullscreen)) {\n            return '';\n        }\n\n        // Check for fullscreen support by vendor prefix\n        let value = '';\n        const prefixes = [\n            'webkit',\n            'moz',\n            'ms',\n        ];\n\n        prefixes.some(pre => {\n            if (utils.is.function(document[`${pre}ExitFullscreen`]) || utils.is.function(document[`${pre}CancelFullScreen`])) {\n                value = pre;\n                return true;\n            }\n\n            return false;\n        });\n\n        return value;\n    }\n\n    static get name() {\n        return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\n    }\n\n    // Determine if fullscreen is enabled\n    get enabled() {\n        return (\n            (Fullscreen.native || this.player.config.fullscreen.fallback) &&\n            this.player.config.fullscreen.enabled &&\n            this.player.supported.ui &&\n            this.player.isVideo\n        );\n    }\n\n    // Get active state\n    get active() {\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Fallback using classname\n        if (!Fullscreen.native) {\n            return utils.hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n        }\n\n        const element = !this.prefix ? document.fullscreenElement : document[`${this.prefix}${this.name}Element`];\n\n        return element === this.target;\n    }\n\n    // Get target element\n    get target() {\n        return browser.isIos && this.player.config.fullscreen.iosNative ? this.player.media : this.player.elements.container;\n    }\n\n    // Update UI\n    update() {\n        if (this.enabled) {\n            this.player.debug.log(`${Fullscreen.native ? 'Native' : 'Fallback'} fullscreen enabled`);\n        } else {\n            this.player.debug.log('Fullscreen not supported and fallback disabled');\n        }\n\n        // Add styling hook to show button\n        utils.toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled);\n    }\n\n    // Make an element fullscreen\n    enter() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen doesn't need the request step\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            if (this.player.playing) {\n                this.target.webkitEnterFullscreen();\n            }\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, true);\n        } else if (!this.prefix) {\n            this.target.requestFullscreen();\n        } else if (!utils.is.empty(this.prefix)) {\n            this.target[`${this.prefix}Request${this.name}`]();\n        }\n    }\n\n    // Bail from fullscreen\n    exit() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            this.target.webkitExitFullscreen();\n            this.player.play();\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, false);\n        } else if (!this.prefix) {\n            (document.cancelFullScreen || document.exitFullscreen).call(document);\n        } else if (!utils.is.empty(this.prefix)) {\n            const action = this.prefix === 'moz' ? 'Cancel' : 'Exit';\n            document[`${this.prefix}${action}${this.name}`]();\n        }\n    }\n\n    // Toggle state\n    toggle() {\n        if (!this.active) {\n            this.enter();\n        } else {\n            this.exit();\n        }\n    }\n}\n\nexport default Fullscreen;\n","// ==========================================================================\n// Plyr internationalization\n// ==========================================================================\n\nimport utils from './utils';\n\nconst i18n = {\n    get(key = '', config = {}) {\n        if (utils.is.empty(key) || utils.is.empty(config) || !Object.keys(config.i18n).includes(key)) {\n            return '';\n        }\n\n        let string = config.i18n[key];\n\n        const replace = {\n            '{seektime}': config.seekTime,\n            '{title}': config.title,\n        };\n\n        Object.entries(replace).forEach(([\n            key,\n            value,\n        ]) => {\n            string = utils.replaceAll(string, key, value);\n        });\n\n        return string;\n    },\n};\n\nexport default i18n;\n","// ==========================================================================\n// Plyr Captions\n// TODO: Create as class\n// ==========================================================================\n\nimport support from './support';\nimport utils from './utils';\nimport controls from './controls';\nimport i18n from './i18n';\n\nconst captions = {\n    // Setup captions\n    setup() {\n        // Requires UI support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Set default language if not set\n        const stored = this.storage.get('language');\n\n        if (!utils.is.empty(stored)) {\n            this.captions.language = stored;\n        }\n\n        if (utils.is.empty(this.captions.language)) {\n            this.captions.language = this.config.captions.language.toLowerCase();\n        }\n\n        // Set captions enabled state if not set\n        if (!utils.is.boolean(this.captions.active)) {\n            const active = this.storage.get('captions');\n\n            if (utils.is.boolean(active)) {\n                this.captions.active = active;\n            } else {\n                this.captions.active = this.config.captions.active;\n            }\n        }\n\n        // Only Vimeo and HTML5 video supported at this point\n        if (!this.isVideo || this.isYouTube || (this.isHTML5 && !support.textTracks)) {\n            // Clear menu and hide\n            if (utils.is.array(this.config.controls) && this.config.controls.includes('settings') && this.config.settings.includes('captions')) {\n                controls.setCaptionsMenu.call(this);\n            }\n\n            return;\n        }\n\n        // Inject the container\n        if (!utils.is.element(this.elements.captions)) {\n            this.elements.captions = utils.createElement('div', utils.getAttributesFromSelector(this.config.selectors.captions));\n\n            utils.insertAfter(this.elements.captions, this.elements.wrapper);\n        }\n\n        // Set the class hook\n        utils.toggleClass(this.elements.container, this.config.classNames.captions.enabled, !utils.is.empty(captions.getTracks.call(this)));\n\n        // Get tracks\n        const tracks = captions.getTracks.call(this);\n\n        // If no caption file exists, hide container for caption text\n        if (utils.is.empty(tracks)) {\n            return;\n        }\n\n        // Get browser info\n        const browser = utils.getBrowser();\n\n        // Fix IE captions if CORS is used\n        // Fetch captions and inject as blobs instead (data URIs not supported!)\n        if (browser.isIE && window.URL) {\n            const elements = this.media.querySelectorAll('track');\n\n            Array.from(elements).forEach(track => {\n                const src = track.getAttribute('src');\n                const href = utils.parseUrl(src);\n\n                if (href.hostname !== window.location.href.hostname && [\n                    'http:',\n                    'https:',\n                ].includes(href.protocol)) {\n                    utils\n                        .fetch(src, 'blob')\n                        .then(blob => {\n                            track.setAttribute('src', window.URL.createObjectURL(blob));\n                        })\n                        .catch(() => {\n                            utils.removeElement(track);\n                        });\n                }\n            });\n        }\n\n        // Set language\n        captions.setLanguage.call(this);\n\n        // Enable UI\n        captions.show.call(this);\n\n        // Set available languages in list\n        if (utils.is.array(this.config.controls) && this.config.controls.includes('settings') && this.config.settings.includes('captions')) {\n            controls.setCaptionsMenu.call(this);\n        }\n    },\n\n    // Set the captions language\n    setLanguage() {\n        // Setup HTML5 track rendering\n        if (this.isHTML5 && this.isVideo) {\n            captions.getTracks.call(this).forEach(track => {\n                // Show track\n                utils.on(track, 'cuechange', event => captions.setCue.call(this, event));\n\n                // Turn off native caption rendering to avoid double captions\n                // eslint-disable-next-line\n                track.mode = 'hidden';\n            });\n\n            // Get current track\n            const currentTrack = captions.getCurrentTrack.call(this);\n\n            // Check if suported kind\n            if (utils.is.track(currentTrack)) {\n                // If we change the active track while a cue is already displayed we need to update it\n                if (Array.from(currentTrack.activeCues || []).length) {\n                    captions.setCue.call(this, currentTrack);\n                }\n            }\n        } else if (this.isVimeo && this.captions.active) {\n            this.embed.enableTextTrack(this.language);\n        }\n    },\n\n    // Get the tracks\n    getTracks() {\n        // Return empty array at least\n        if (utils.is.nullOrUndefined(this.media)) {\n            return [];\n        }\n\n        // Only get accepted kinds\n        return Array.from(this.media.textTracks || []).filter(track => [\n            'captions',\n            'subtitles',\n        ].includes(track.kind));\n    },\n\n    // Get the current track for the current language\n    getCurrentTrack() {\n        const tracks = captions.getTracks.call(this);\n\n        if (!tracks.length) {\n            return null;\n        }\n\n        // Get track based on current language\n        let track = tracks.find(track => track.language.toLowerCase() === this.language);\n\n        // Get the <track> with default attribute\n        if (!track) {\n            track = utils.getElement.call(this, 'track[default]');\n        }\n\n        // Get the first track\n        if (!track) {\n            [track] = tracks;\n        }\n\n        return track;\n    },\n\n    // Get UI label for track\n    getLabel(track) {\n        let currentTrack = track;\n\n        if (!utils.is.track(currentTrack) && support.textTracks && this.captions.active) {\n            currentTrack = captions.getCurrentTrack.call(this);\n        }\n\n        if (utils.is.track(currentTrack)) {\n            if (!utils.is.empty(currentTrack.label)) {\n                return currentTrack.label;\n            }\n\n            if (!utils.is.empty(currentTrack.language)) {\n                return track.language.toUpperCase();\n            }\n\n            return i18n.get('enabled', this.config);\n        }\n\n        return i18n.get('disabled', this.config);\n    },\n\n    // Display active caption if it contains text\n    setCue(input) {\n        // Get the track from the event if needed\n        const track = utils.is.event(input) ? input.target : input;\n        const { activeCues } = track;\n        const active = activeCues.length && activeCues[0];\n        const currentTrack = captions.getCurrentTrack.call(this);\n\n        // Only display current track\n        if (track !== currentTrack) {\n            return;\n        }\n\n        // Display a cue, if there is one\n        if (utils.is.cue(active)) {\n            captions.setText.call(this, active.getCueAsHTML());\n        } else {\n            captions.setText.call(this, null);\n        }\n\n        utils.dispatchEvent.call(this, this.media, 'cuechange');\n    },\n\n    // Set the current caption\n    setText(input) {\n        // Requires UI\n        if (!this.supported.ui) {\n            return;\n        }\n\n        if (utils.is.element(this.elements.captions)) {\n            const content = utils.createElement('span');\n\n            // Empty the container\n            utils.emptyElement(this.elements.captions);\n\n            // Default to empty\n            const caption = !utils.is.nullOrUndefined(input) ? input : '';\n\n            // Set the span content\n            if (utils.is.string(caption)) {\n                content.textContent = caption.trim();\n            } else {\n                content.appendChild(caption);\n            }\n\n            // Set new caption text\n            this.elements.captions.appendChild(content);\n        } else {\n            this.debug.warn('No captions element to render to');\n        }\n    },\n\n    // Display captions container and button (for initialization)\n    show() {\n        // Try to load the value from storage\n        let active = this.storage.get('captions');\n\n        // Otherwise fall back to the default config\n        if (!utils.is.boolean(active)) {\n            ({ active } = this.config.captions);\n        } else {\n            this.captions.active = active;\n        }\n\n        if (active) {\n            utils.toggleClass(this.elements.container, this.config.classNames.captions.active, true);\n            utils.toggleState(this.elements.buttons.captions, true);\n        }\n    },\n};\n\nexport default captions;\n","// ==========================================================================\n// Plyr UI\n// ==========================================================================\n\nimport utils from './utils';\nimport captions from './captions';\nimport controls from './controls';\nimport i18n from './i18n';\n\nconst ui = {\n    addStyleHook() {\n        utils.toggleClass(this.elements.container, this.config.selectors.container.replace('.', ''), true);\n        utils.toggleClass(this.elements.container, this.config.classNames.uiSupported, this.supported.ui);\n    },\n\n    // Toggle native HTML5 media controls\n    toggleNativeControls(toggle = false) {\n        if (toggle && this.isHTML5) {\n            this.media.setAttribute('controls', '');\n        } else {\n            this.media.removeAttribute('controls');\n        }\n    },\n\n    // Setup the UI\n    build() {\n        // Re-attach media element listeners\n        // TODO: Use event bubbling?\n        this.listeners.media();\n\n        // Don't setup interface if no support\n        if (!this.supported.ui) {\n            this.debug.warn(`Basic support only for ${this.provider} ${this.type}`);\n\n            // Restore native controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Bail\n            return;\n        }\n\n        // Inject custom controls if not present\n        if (!utils.is.element(this.elements.controls)) {\n            // Inject custom controls\n            controls.inject.call(this);\n\n            // Re-attach control listeners\n            this.listeners.controls();\n        }\n\n        // If there's no controls, bail\n        if (!utils.is.element(this.elements.controls)) {\n            return;\n        }\n\n        // Remove native controls\n        ui.toggleNativeControls.call(this);\n\n        // Captions\n        captions.setup.call(this);\n\n        // Reset volume\n        this.volume = null;\n\n        // Reset mute state\n        this.muted = null;\n\n        // Reset speed\n        this.speed = null;\n\n        // Reset loop state\n        this.loop = null;\n\n        // Reset quality setting\n        this.quality = null;\n\n        // Reset volume display\n        ui.updateVolume.call(this);\n\n        // Reset time display\n        ui.timeUpdate.call(this);\n\n        // Update the UI\n        ui.checkPlaying.call(this);\n\n        // Ready for API calls\n        this.ready = true;\n\n        // Ready event at end of execution stack\n        setTimeout(() => {\n            utils.dispatchEvent.call(this, this.media, 'ready');\n        }, 0);\n\n        // Set the title\n        ui.setTitle.call(this);\n    },\n\n    // Setup aria attribute for play and iframe title\n    setTitle() {\n        // Find the current text\n        let label = i18n.get('play', this.config);\n\n        // If there's a media title set, use that for the label\n        if (utils.is.string(this.config.title) && !utils.is.empty(this.config.title)) {\n            label += `, ${this.config.title}`;\n\n            // Set container label\n            this.elements.container.setAttribute('aria-label', this.config.title);\n        }\n\n        // If there's a play button, set label\n        if (utils.is.nodeList(this.elements.buttons.play)) {\n            Array.from(this.elements.buttons.play).forEach(button => {\n                button.setAttribute('aria-label', label);\n            });\n        }\n\n        // Set iframe title\n        // https://github.com/sampotts/plyr/issues/124\n        if (this.isEmbed) {\n            const iframe = utils.getElement.call(this, 'iframe');\n\n            if (!utils.is.element(iframe)) {\n                return;\n            }\n\n            // Default to media type\n            const title = !utils.is.empty(this.config.title) ? this.config.title : 'video';\n\n            iframe.setAttribute('title', i18n.get('frameTitle', this.config));\n        }\n    },\n\n    // Check playing state\n    checkPlaying() {\n        // Class hooks\n        utils.toggleClass(this.elements.container, this.config.classNames.playing, this.playing);\n        utils.toggleClass(this.elements.container, this.config.classNames.stopped, this.paused);\n\n        // Set ARIA state\n        utils.toggleState(this.elements.buttons.play, this.playing);\n\n        // Toggle controls\n        this.toggleControls(!this.playing);\n    },\n\n    // Check if media is loading\n    checkLoading(event) {\n        this.loading = [\n            'stalled',\n            'waiting',\n        ].includes(event.type);\n\n        // Clear timer\n        clearTimeout(this.timers.loading);\n\n        // Timer to prevent flicker when seeking\n        this.timers.loading = setTimeout(() => {\n            // Toggle container class hook\n            utils.toggleClass(this.elements.container, this.config.classNames.loading, this.loading);\n\n            // Show controls if loading, hide if done\n            this.toggleControls(this.loading);\n        }, this.loading ? 250 : 0);\n    },\n\n    // Check if media failed to load\n    checkFailed() {\n        // https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/networkState\n        this.failed = this.media.networkState === 3;\n\n        if (this.failed) {\n            utils.toggleClass(this.elements.container, this.config.classNames.loading, false);\n            utils.toggleClass(this.elements.container, this.config.classNames.error, true);\n        }\n\n        // Clear timer\n        clearTimeout(this.timers.failed);\n\n        // Timer to prevent flicker when seeking\n        this.timers.loading = setTimeout(() => {\n            // Toggle container class hook\n            utils.toggleClass(this.elements.container, this.config.classNames.loading, this.loading);\n\n            // Show controls if loading, hide if done\n            this.toggleControls(this.loading);\n        }, this.loading ? 250 : 0);\n    },\n\n    // Update volume UI and storage\n    updateVolume() {\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Update range\n        if (utils.is.element(this.elements.inputs.volume)) {\n            ui.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\n        }\n\n        // Update mute state\n        if (utils.is.element(this.elements.buttons.mute)) {\n            utils.toggleState(this.elements.buttons.mute, this.muted || this.volume === 0);\n        }\n    },\n\n    // Update seek value and lower fill\n    setRange(target, value = 0) {\n        if (!utils.is.element(target)) {\n            return;\n        }\n\n        // eslint-disable-next-line\n        target.value = value;\n\n        // Webkit range fill\n        controls.updateRangeFill.call(this, target);\n    },\n\n    // Set <progress> value\n    setProgress(target, input) {\n        const value = utils.is.number(input) ? input : 0;\n        const progress = utils.is.element(target) ? target : this.elements.display.buffer;\n\n        // Update value and label\n        if (utils.is.element(progress)) {\n            progress.value = value;\n\n            // Update text label inside\n            const label = progress.getElementsByTagName('span')[0];\n            if (utils.is.element(label)) {\n                label.childNodes[0].nodeValue = value;\n            }\n        }\n    },\n\n    // Update <progress> elements\n    updateProgress(event) {\n        if (!this.supported.ui || !utils.is.event(event)) {\n            return;\n        }\n\n        let value = 0;\n\n        if (event) {\n            switch (event.type) {\n                // Video playing\n                case 'timeupdate':\n                case 'seeking':\n                    value = utils.getPercentage(this.currentTime, this.duration);\n\n                    // Set seek range value only if it's a 'natural' time event\n                    if (event.type === 'timeupdate') {\n                        ui.setRange.call(this, this.elements.inputs.seek, value);\n                    }\n\n                    break;\n\n                // Check buffer status\n                case 'playing':\n                case 'progress':\n                    ui.setProgress.call(this, this.elements.display.buffer, this.buffered * 100);\n\n                    break;\n\n                default:\n                    break;\n            }\n        }\n    },\n\n    // Update the displayed time\n    updateTimeDisplay(target = null, time = 0, inverted = false) {\n        // Bail if there's no element to display or the value isn't a number\n        if (!utils.is.element(target) || !utils.is.number(time)) {\n            return;\n        }\n\n        // Always display hours if duration is over an hour\n        const displayHours = utils.getHours(this.duration) > 0;\n\n        // eslint-disable-next-line no-param-reassign\n        target.textContent = utils.formatTime(time, displayHours, inverted);\n    },\n\n    // Handle time change event\n    timeUpdate(event) {\n        // Only invert if only one time element is displayed and used for both duration and currentTime\n        const invert = !utils.is.element(this.elements.display.duration) && this.config.invertTime;\n\n        // Duration\n        ui.updateTimeDisplay.call(this, this.elements.display.currentTime, invert ? this.duration - this.currentTime : this.currentTime, invert);\n\n        // Ignore updates while seeking\n        if (event && event.type === 'timeupdate' && this.media.seeking) {\n            return;\n        }\n\n        // Playing progress\n        ui.updateProgress.call(this, event);\n    },\n\n    // Show the duration on metadataloaded\n    durationUpdate() {\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // If there's a spot to display duration\n        const hasDuration = utils.is.element(this.elements.display.duration);\n\n        // If there's only one time display, display duration there\n        if (!hasDuration && this.config.displayDuration && this.paused) {\n            ui.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\n        }\n\n        // If there's a duration element, update content\n        if (hasDuration) {\n            ui.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\n        }\n\n        // Update the tooltip (if visible)\n        controls.updateSeekTooltip.call(this);\n    },\n};\n\nexport default ui;\n","// ==========================================================================\n// Plyr HTML5 helpers\n// ==========================================================================\n\nimport support from './support';\nimport utils from './utils';\n\nconst html5 = {\n    getSources() {\n        if (!this.isHTML5) {\n            return null;\n        }\n\n        return this.media.querySelectorAll('source');\n    },\n\n    // Get quality levels\n    getQualityOptions() {\n        if (!this.isHTML5) {\n            return null;\n        }\n\n        // Get sources\n        const sources = html5.getSources.call(this);\n\n        if (utils.is.empty(sources)) {\n            return null;\n        }\n\n        // Get <source> with size attribute\n        const sizes = Array.from(sources).filter(source => !utils.is.empty(source.getAttribute('size')));\n\n        // If none, bail\n        if (utils.is.empty(sizes)) {\n            return null;\n        }\n\n        // Reduce to unique list\n        return utils.dedupe(sizes.map(source => Number(source.getAttribute('size'))));\n    },\n\n    extend() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        const player = this;\n\n        // Quality\n        Object.defineProperty(player.media, 'quality', {\n            get() {\n                // Get sources\n                const sources = html5.getSources.call(player);\n\n                if (utils.is.empty(sources)) {\n                    return null;\n                }\n\n                const matches = Array.from(sources).filter(source => source.getAttribute('src') === player.source);\n\n                if (utils.is.empty(matches)) {\n                    return null;\n                }\n\n                return Number(matches[0].getAttribute('size'));\n            },\n            set(input) {\n                // Get sources\n                const sources = html5.getSources.call(player);\n\n                if (utils.is.empty(sources)) {\n                    return;\n                }\n\n                // Get matches for requested size\n                const matches = Array.from(sources).filter(source => Number(source.getAttribute('size')) === input);\n\n                // No matches for requested size\n                if (utils.is.empty(matches)) {\n                    return;\n                }\n\n                // Get supported sources\n                const supported = matches.filter(source => support.mime.call(player, source.getAttribute('type')));\n\n                // No supported sources\n                if (utils.is.empty(supported)) {\n                    return;\n                }\n\n                // Trigger change event\n                utils.dispatchEvent.call(player, player.media, 'qualityrequested', false, {\n                    quality: input,\n                });\n\n                // Get current state\n                const { currentTime, playing } = player;\n\n                // Set new source\n                player.media.src = supported[0].getAttribute('src');\n\n                // Load new source\n                player.media.load();\n\n                // Resume playing\n                if (playing) {\n                    player.play();\n                }\n\n                // Restore time\n                player.currentTime = currentTime;\n\n                // Trigger change event\n                utils.dispatchEvent.call(player, player.media, 'qualitychange', false, {\n                    quality: input,\n                });\n            },\n        });\n    },\n\n    // Cancel current network requests\n    // See https://github.com/sampotts/plyr/issues/174\n    cancelRequests() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        // Remove child sources\n        utils.removeElement(html5.getSources());\n\n        // Set blank video src attribute\n        // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n        // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n        this.media.setAttribute('src', this.config.blankVideo);\n\n        // Load the new empty source\n        // This will cancel existing requests\n        // See https://github.com/sampotts/plyr/issues/174\n        this.media.load();\n\n        // Debugging\n        this.debug.log('Cancelled network requests');\n    },\n};\n\nexport default html5;\n","// ==========================================================================\n// Plyr controls\n// ==========================================================================\n\nimport support from './support';\nimport utils from './utils';\nimport ui from './ui';\nimport i18n from './i18n';\nimport captions from './captions';\nimport html5 from './html5';\n\n// Sniff out the browser\nconst browser = utils.getBrowser();\n\nconst controls = {\n    // Webkit polyfill for lower fill range\n    updateRangeFill(target) {\n\n\n        // Get range from event if event passed\n        const range = utils.is.event(target) ? target.target : target;\n\n        // Needs to be a valid <input type='range'>\n        if (!utils.is.element(range) || range.getAttribute('type') !== 'range') {\n            return;\n        }\n\n        // Set aria value for https://github.com/sampotts/plyr/issues/905\n        range.setAttribute('aria-valuenow', range.value);\n\n        // WebKit only\n        if (!browser.isWebkit) {\n            return;\n        }\n\n        // Set CSS custom property\n        range.style.setProperty('--value', `${range.value / range.max * 100}%`);\n    },\n\n    // Get icon URL\n    getIconUrl() {\n        return {\n            url: this.config.iconUrl,\n            absolute: this.config.iconUrl.indexOf('http') === 0 || (browser.isIE && !window.svg4everybody),\n        };\n    },\n\n    // Create <svg> icon\n    createIcon(type, attributes) {\n        const namespace = 'http://www.w3.org/2000/svg';\n        const iconUrl = controls.getIconUrl.call(this);\n        const iconPath = `${!iconUrl.absolute ? iconUrl.url : ''}#${this.config.iconPrefix}`;\n\n        // Create <svg>\n        const icon = document.createElementNS(namespace, 'svg');\n        utils.setAttributes(\n            icon,\n            utils.extend(attributes, {\n                role: 'presentation',\n                focusable: 'false',\n            }),\n        );\n\n        // Create the <use> to reference sprite\n        const use = document.createElementNS(namespace, 'use');\n        const path = `${iconPath}-${type}`;\n\n        // Set `href` attributes\n        // https://github.com/sampotts/plyr/issues/460\n        // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\n        if ('href' in use) {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n        } else {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path);\n        }\n\n        // Add <use> to <svg>\n        icon.appendChild(use);\n\n        return icon;\n    },\n\n    // Create hidden text label\n    createLabel(type, attr) {\n        let text = i18n.get(type, this.config);\n        const attributes = Object.assign({}, attr);\n\n        switch (type) {\n            case 'pip':\n                text = 'PIP';\n                break;\n\n            case 'airplay':\n                text = 'AirPlay';\n                break;\n\n            default:\n                break;\n        }\n\n        if ('class' in attributes) {\n            attributes.class += ` ${this.config.classNames.hidden}`;\n        } else {\n            attributes.class = this.config.classNames.hidden;\n        }\n\n        return utils.createElement('span', attributes, text);\n    },\n\n    // Create a badge\n    createBadge(text) {\n        if (utils.is.empty(text)) {\n            return null;\n        }\n\n        const badge = utils.createElement('span', {\n            class: this.config.classNames.menu.value,\n        });\n\n        badge.appendChild(\n            utils.createElement(\n                'span',\n                {\n                    class: this.config.classNames.menu.badge,\n                },\n                text,\n            ),\n        );\n\n        return badge;\n    },\n\n    // Create a <button>\n    createButton(buttonType, attr) {\n        const button = utils.createElement('button');\n        const attributes = Object.assign({}, attr);\n        let type = utils.toCamelCase(buttonType);\n\n        let toggle = false;\n        let label;\n        let icon;\n        let labelPressed;\n        let iconPressed;\n\n        if (!('type' in attributes)) {\n            attributes.type = 'button';\n        }\n\n        if ('class' in attributes) {\n            if (attributes.class.includes(this.config.classNames.control)) {\n                attributes.class += ` ${this.config.classNames.control}`;\n            }\n        } else {\n            attributes.class = this.config.classNames.control;\n        }\n\n        // Large play button\n        switch (buttonType) {\n            case 'play':\n                toggle = true;\n                label = 'play';\n                labelPressed = 'pause';\n                icon = 'play';\n                iconPressed = 'pause';\n                break;\n\n            case 'mute':\n                toggle = true;\n                label = 'mute';\n                labelPressed = 'unmute';\n                icon = 'volume';\n                iconPressed = 'muted';\n                break;\n\n            case 'captions':\n                toggle = true;\n                label = 'enableCaptions';\n                labelPressed = 'disableCaptions';\n                icon = 'captions-off';\n                iconPressed = 'captions-on';\n                break;\n\n            case 'fullscreen':\n                toggle = true;\n                label = 'enterFullscreen';\n                labelPressed = 'exitFullscreen';\n                icon = 'enter-fullscreen';\n                iconPressed = 'exit-fullscreen';\n                break;\n\n            case 'play-large':\n                attributes.class += ` ${this.config.classNames.control}--overlaid`;\n                type = 'play';\n                label = 'play';\n                icon = 'play';\n                break;\n\n            default:\n                label = type;\n                icon = buttonType;\n        }\n\n        // Setup toggle icon and labels\n        if (toggle) {\n            // Icon\n            button.appendChild(controls.createIcon.call(this, iconPressed, { class: 'icon--pressed' }));\n            button.appendChild(controls.createIcon.call(this, icon, { class: 'icon--not-pressed' }));\n\n            // Label/Tooltip\n            button.appendChild(controls.createLabel.call(this, labelPressed, { class: 'label--pressed' }));\n            button.appendChild(controls.createLabel.call(this, label, { class: 'label--not-pressed' }));\n\n            // Add aria attributes\n            attributes['aria-pressed'] = false;\n            attributes['aria-label'] = i18n.get(label, this.config);\n        } else {\n            button.appendChild(controls.createIcon.call(this, icon));\n            button.appendChild(controls.createLabel.call(this, label));\n        }\n\n        // Merge attributes\n        utils.extend(attributes, utils.getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\n\n        utils.setAttributes(button, attributes);\n\n        // We have multiple play buttons\n        if (type === 'play') {\n            if (!utils.is.array(this.elements.buttons[type])) {\n                this.elements.buttons[type] = [];\n            }\n\n            this.elements.buttons[type].push(button);\n        } else {\n            this.elements.buttons[type] = button;\n        }\n\n        return button;\n    },\n\n    // Create an <input type='range'>\n    createRange(type, attributes) {\n        // Seek label\n        const label = utils.createElement(\n            'label',\n            {\n                for: attributes.id,\n                id: `${attributes.id}-label`,\n                class: this.config.classNames.hidden,\n            },\n            i18n.get(type, this.config),\n        );\n\n        // Seek input\n        const input = utils.createElement(\n            'input',\n            utils.extend(\n                utils.getAttributesFromSelector(this.config.selectors.inputs[type]),\n                {\n                    type: 'range',\n                    min: 0,\n                    max: 100,\n                    step: 0.01,\n                    value: 0,\n                    autocomplete: 'off',\n                    // A11y fixes for https://github.com/sampotts/plyr/issues/905\n                    role: 'slider',\n                    'aria-labelledby': `${attributes.id}-label`,\n                    'aria-valuemin': 0,\n                    'aria-valuemax': 100,\n                    'aria-valuenow': 0,\n                },\n                attributes,\n            ),\n        );\n\n        this.elements.inputs[type] = input;\n\n        // Set the fill for webkit now\n        controls.updateRangeFill.call(this, input);\n\n        return {\n            label,\n            input,\n        };\n    },\n\n    // Create a <progress>\n    createProgress(type, attributes) {\n        const progress = utils.createElement(\n            'progress',\n            utils.extend(\n                utils.getAttributesFromSelector(this.config.selectors.display[type]),\n                {\n                    min: 0,\n                    max: 100,\n                    value: 0,\n                    role: 'presentation',\n                    'aria-hidden': true,\n                },\n                attributes,\n            ),\n        );\n\n        // Create the label inside\n        if (type !== 'volume') {\n            progress.appendChild(utils.createElement('span', null, '0'));\n\n            let suffix = '';\n            switch (type) {\n                case 'played':\n                    suffix = i18n.get('played', this.config);\n                    break;\n\n                case 'buffer':\n                    suffix = i18n.get('buffered', this.config);\n                    break;\n\n                default:\n                    break;\n            }\n\n            progress.textContent = `% ${suffix.toLowerCase()}`;\n        }\n\n        this.elements.display[type] = progress;\n\n        return progress;\n    },\n\n    // Create time display\n    createTime(type) {\n        const container = utils.createElement('div', {\n            class: 'plyr__time',\n        });\n\n        container.appendChild(\n            utils.createElement(\n                'span',\n                {\n                    class: this.config.classNames.hidden,\n                },\n                i18n.get(type, this.config),\n            ),\n        );\n\n        container.appendChild(utils.createElement('span', utils.getAttributesFromSelector(this.config.selectors.display[type]), '00:00'));\n\n        this.elements.display[type] = container;\n\n        return container;\n    },\n\n    // Create a settings menu item\n    createMenuItem(value, list, type, title, badge = null, checked = false) {\n        const item = utils.createElement('li');\n\n        const label = utils.createElement('label', {\n            class: this.config.classNames.control,\n        });\n\n        const radio = utils.createElement(\n            'input',\n            utils.extend(utils.getAttributesFromSelector(this.config.selectors.inputs[type]), {\n                type: 'radio',\n                name: `plyr-${type}`,\n                value,\n                checked,\n                class: 'plyr__sr-only',\n            }),\n        );\n\n        const faux = utils.createElement('span', { 'aria-hidden': true });\n\n        label.appendChild(radio);\n        label.appendChild(faux);\n        label.insertAdjacentHTML('beforeend', title);\n\n        if (utils.is.element(badge)) {\n            label.appendChild(badge);\n        }\n\n        item.appendChild(label);\n        list.appendChild(item);\n    },\n\n    // Update hover tooltip for seeking\n    updateSeekTooltip(event) {\n        // Bail if setting not true\n        if (\n            !this.config.tooltips.seek ||\n            !utils.is.element(this.elements.inputs.seek) ||\n            !utils.is.element(this.elements.display.seekTooltip) ||\n            this.duration === 0\n        ) {\n            return;\n        }\n\n        // Calculate percentage\n        let percent = 0;\n        const clientRect = this.elements.inputs.seek.getBoundingClientRect();\n        const visible = `${this.config.classNames.tooltip}--visible`;\n\n        const toggle = toggle => {\n            utils.toggleClass(this.elements.display.seekTooltip, visible, toggle);\n        };\n\n        // Hide on touch\n        if (this.touch) {\n            toggle(false);\n            return;\n        }\n\n        // Determine percentage, if already visible\n        if (utils.is.event(event)) {\n            percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n        } else if (utils.hasClass(this.elements.display.seekTooltip, visible)) {\n            percent = parseFloat(this.elements.display.seekTooltip.style.left, 10);\n        } else {\n            return;\n        }\n\n        // Set bounds\n        if (percent < 0) {\n            percent = 0;\n        } else if (percent > 100) {\n            percent = 100;\n        }\n\n        // Display the time a click would seek to\n        ui.updateTimeDisplay.call(this, this.elements.display.seekTooltip, this.duration / 100 * percent);\n\n        // Set position\n        this.elements.display.seekTooltip.style.left = `${percent}%`;\n\n        // Show/hide the tooltip\n        // If the event is a moues in/out and percentage is inside bounds\n        if (utils.is.event(event) && [\n            'mouseenter',\n            'mouseleave',\n        ].includes(event.type)) {\n            toggle(event.type === 'mouseenter');\n        }\n    },\n\n    // Hide/show a tab\n    toggleTab(setting, toggle) {\n        const tab = this.elements.settings.tabs[setting];\n        const pane = this.elements.settings.panes[setting];\n\n        utils.toggleHidden(tab, !toggle);\n        utils.toggleHidden(pane, !toggle);\n    },\n\n    // Set the quality menu\n    // TODO: Vimeo support\n    setQualityMenu(options) {\n        // Menu required\n        if (!utils.is.element(this.elements.settings.panes.quality)) {\n            return;\n        }\n\n        const type = 'quality';\n        const list = this.elements.settings.panes.quality.querySelector('ul');\n\n        // Set options if passed and filter based on config\n        if (utils.is.array(options)) {\n            this.options.quality = options.filter(quality => this.config.quality.options.includes(quality));\n        }\n\n        // Toggle the pane and tab\n        const toggle = !utils.is.empty(this.options.quality) && this.options.quality.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Empty the menu\n        utils.emptyElement(list);\n\n        // Get the badge HTML for HD, 4K etc\n        const getBadge = quality => {\n            let label = '';\n\n            switch (quality) {\n                case 2160:\n                    label = '4K';\n                    break;\n\n                case 1440:\n                case 1080:\n                case 720:\n                    label = 'HD';\n                    break;\n\n                case 576:\n                    label = 'SD';\n                    break;\n\n                default:\n                    break;\n            }\n\n            if (!label.length) {\n                return null;\n            }\n\n            return controls.createBadge.call(this, label);\n        };\n\n        // Sort options by the config and then render options\n        this.options.quality\n            .sort((a, b) => {\n                const sorting = this.config.quality.options;\n                return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\n            })\n            .forEach(quality => {\n                const label = controls.getLabel.call(this, 'quality', quality);\n                controls.createMenuItem.call(this, quality, list, type, label, getBadge(quality));\n            });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Translate a value into a nice label\n    // TODO: Localisation\n    getLabel(setting, value) {\n        switch (setting) {\n            case 'speed':\n                return value === 1 ? i18n.get('normal', this.config) : `${value}&times;`;\n\n            case 'quality':\n                if (utils.is.number(value)) {\n                    return `${value}p`;\n                }\n\n                return utils.toTitleCase(value);\n\n            case 'captions':\n                return captions.getLabel.call(this);\n\n            default:\n                return null;\n        }\n    },\n\n    // Update the selected setting\n    updateSetting(setting, container, input) {\n        const pane = this.elements.settings.panes[setting];\n        let value = null;\n        let list = container;\n\n        switch (setting) {\n            case 'captions':\n                if (this.captions.active) {\n                    if (this.options.captions.length > 2 || !this.options.captions.some(lang => lang === 'enabled')) {\n                        value = this.captions.language;\n                    } else {\n                        value = 'enabled';\n                    }\n                } else {\n                    value = '';\n                }\n\n                break;\n\n            default:\n                value = !utils.is.empty(input) ? input : this[setting];\n\n                // Get default\n                if (utils.is.empty(value)) {\n                    value = this.config[setting].default;\n                }\n\n                // Unsupported value\n                if (!utils.is.empty(this.options[setting]) && !this.options[setting].includes(value)) {\n                    this.debug.warn(`Unsupported value of '${value}' for ${setting}`);\n                    return;\n                }\n\n                // Disabled value\n                if (!this.config[setting].options.includes(value)) {\n                    this.debug.warn(`Disabled value of '${value}' for ${setting}`);\n                    return;\n                }\n\n                break;\n        }\n\n        // Get the list if we need to\n        if (!utils.is.element(list)) {\n            list = pane && pane.querySelector('ul');\n        }\n\n        // If there's no list it means it's not been rendered...\n        if (!utils.is.element(list)) {\n            return;\n        }\n\n        // Update the label\n        const label = this.elements.settings.tabs[setting].querySelector(`.${this.config.classNames.menu.value}`);\n        label.innerHTML = controls.getLabel.call(this, setting, value);\n\n        // Find the radio option and check it\n        const target = list && list.querySelector(`input[value=\"${value}\"]`);\n\n        if (utils.is.element(target)) {\n            target.checked = true;\n        }\n    },\n\n    // Set the looping options\n    /* setLoopMenu() {\n        // Menu required\n        if (!utils.is.element(this.elements.settings.panes.loop)) {\n            return;\n        }\n\n        const options = ['start', 'end', 'all', 'reset'];\n        const list = this.elements.settings.panes.loop.querySelector('ul');\n\n        // Show the pane and tab\n        utils.toggleHidden(this.elements.settings.tabs.loop, false);\n        utils.toggleHidden(this.elements.settings.panes.loop, false);\n\n        // Toggle the pane and tab\n        const toggle = !utils.is.empty(this.loop.options);\n        controls.toggleTab.call(this, 'loop', toggle);\n\n        // Empty the menu\n        utils.emptyElement(list);\n\n        options.forEach(option => {\n            const item = utils.createElement('li');\n\n            const button = utils.createElement(\n                'button',\n                utils.extend(utils.getAttributesFromSelector(this.config.selectors.buttons.loop), {\n                    type: 'button',\n                    class: this.config.classNames.control,\n                    'data-plyr-loop-action': option,\n                }),\n                i18n.get(option, this.config)\n            );\n\n            if (['start', 'end'].includes(option)) {\n                const badge = controls.createBadge.call(this, '00:00');\n                button.appendChild(badge);\n            }\n\n            item.appendChild(button);\n            list.appendChild(item);\n        });\n    }, */\n\n    // Get current selected caption language\n    // TODO: rework this to user the getter in the API?\n\n\n    // Set a list of available captions languages\n    setCaptionsMenu() {\n        // TODO: Captions or language? Currently it's mixed\n        const type = 'captions';\n        const list = this.elements.settings.panes.captions.querySelector('ul');\n\n        // Toggle the pane and tab\n        const toggle = captions.getTracks.call(this).length;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Empty the menu\n        utils.emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If there's no captions, bail\n        if (!toggle) {\n            return;\n        }\n\n        // Re-map the tracks into just the data we need\n        const tracks = captions.getTracks.call(this).map(track => ({\n            language: !utils.is.empty(track.language) ? track.language : 'enabled',\n            label: captions.getLabel.call(this, track),\n        }));\n\n        // Add the \"Disabled\" option to turn off captions\n        tracks.unshift({\n            language: '',\n            label: i18n.get('disabled', this.config),\n        });\n\n        // Generate options\n        tracks.forEach(track => {\n            controls.createMenuItem.call(\n                this,\n                track.language,\n                list,\n                'language',\n                track.label,\n                track.language !== 'enabled' ? controls.createBadge.call(this, track.language.toUpperCase()) : null,\n                track.language.toLowerCase() === this.captions.language.toLowerCase(),\n            );\n        });\n\n        // Store reference\n        this.options.captions = tracks.map(track => track.language);\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setSpeedMenu(options) {\n        // Do nothing if not selected\n        if (!this.config.controls.includes('settings') || !this.config.settings.includes('speed')) {\n            return;\n        }\n\n        // Menu required\n        if (!utils.is.element(this.elements.settings.panes.speed)) {\n            return;\n        }\n\n        const type = 'speed';\n\n        // Set the speed options\n        if (utils.is.array(options)) {\n            this.options.speed = options;\n        } else if (this.isHTML5 || this.isVimeo) {\n            this.options.speed = [\n                0.5,\n                0.75,\n                1,\n                1.25,\n                1.5,\n                1.75,\n                2,\n            ];\n        }\n\n        // Set options if passed and filter based on config\n        this.options.speed = this.options.speed.filter(speed => this.config.speed.options.includes(speed));\n\n        // Toggle the pane and tab\n        const toggle = !utils.is.empty(this.options.speed) && this.options.speed.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Get the list to populate\n        const list = this.elements.settings.panes.speed.querySelector('ul');\n\n        // Show the pane and tab\n        utils.toggleHidden(this.elements.settings.tabs.speed, false);\n        utils.toggleHidden(this.elements.settings.panes.speed, false);\n\n        // Empty the menu\n        utils.emptyElement(list);\n\n        // Create items\n        this.options.speed.forEach(speed => {\n            const label = controls.getLabel.call(this, 'speed', speed);\n            controls.createMenuItem.call(this, speed, list, type, label);\n        });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Check if we need to hide/show the settings menu\n    checkMenu() {\n        const { tabs } = this.elements.settings;\n        const visible = !utils.is.empty(tabs) && Object.values(tabs).some(tab => !tab.hidden);\n\n        utils.toggleHidden(this.elements.settings.menu, !visible);\n    },\n\n    // Show/hide menu\n    toggleMenu(event) {\n        const { form } = this.elements.settings;\n        const button = this.elements.buttons.settings;\n\n        // Menu and button are required\n        if (!utils.is.element(form) || !utils.is.element(button)) {\n            return;\n        }\n\n        const show = utils.is.boolean(event) ? event : utils.is.element(form) && form.getAttribute('aria-hidden') === 'true';\n\n        if (utils.is.event(event)) {\n            const isMenuItem = utils.is.element(form) && form.contains(event.target);\n            const isButton = event.target === this.elements.buttons.settings;\n\n            // If the click was inside the form or if the click\n            // wasn't the button or menu item and we're trying to\n            // show the menu (a doc click shouldn't show the menu)\n            if (isMenuItem || (!isMenuItem && !isButton && show)) {\n                return;\n            }\n\n            // Prevent the toggle being caught by the doc listener\n            if (isButton) {\n                event.stopPropagation();\n            }\n        }\n\n        // Set form and button attributes\n        if (utils.is.element(button)) {\n            button.setAttribute('aria-expanded', show);\n        }\n\n        if (utils.is.element(form)) {\n            form.setAttribute('aria-hidden', !show);\n            utils.toggleClass(this.elements.container, this.config.classNames.menu.open, show);\n\n            if (show) {\n                form.removeAttribute('tabindex');\n            } else {\n                form.setAttribute('tabindex', -1);\n            }\n        }\n    },\n\n    // Get the natural size of a tab\n    getTabSize(tab) {\n        const clone = tab.cloneNode(true);\n        clone.style.position = 'absolute';\n        clone.style.opacity = 0;\n        clone.setAttribute('aria-hidden', false);\n\n        // Prevent input's being unchecked due to the name being identical\n        Array.from(clone.querySelectorAll('input[name]')).forEach(input => {\n            const name = input.getAttribute('name');\n            input.setAttribute('name', `${name}-clone`);\n        });\n\n        // Append to parent so we get the \"real\" size\n        tab.parentNode.appendChild(clone);\n\n        // Get the sizes before we remove\n        const width = clone.scrollWidth;\n        const height = clone.scrollHeight;\n\n        // Remove from the DOM\n        utils.removeElement(clone);\n\n        return {\n            width,\n            height,\n        };\n    },\n\n    // Toggle Menu\n    showTab(event) {\n        const { menu } = this.elements.settings;\n        const tab = event.target;\n        const show = tab.getAttribute('aria-expanded') === 'false';\n        const pane = document.getElementById(tab.getAttribute('aria-controls'));\n\n        // Nothing to show, bail\n        if (!utils.is.element(pane)) {\n            return;\n        }\n\n        // Are we targetting a tab? If not, bail\n        const isTab = pane.getAttribute('role') === 'tabpanel';\n        if (!isTab) {\n            return;\n        }\n\n        // Hide all other tabs\n        // Get other tabs\n        const current = menu.querySelector('[role=\"tabpanel\"][aria-hidden=\"false\"]');\n        const container = current.parentNode;\n\n        // Set other toggles to be expanded false\n        Array.from(menu.querySelectorAll(`[aria-controls=\"${current.getAttribute('id')}\"]`)).forEach(toggle => {\n            toggle.setAttribute('aria-expanded', false);\n        });\n\n        // If we can do fancy animations, we'll animate the height/width\n        if (support.transitions && !support.reducedMotion) {\n            // Set the current width as a base\n            container.style.width = `${current.scrollWidth}px`;\n            container.style.height = `${current.scrollHeight}px`;\n\n            // Get potential sizes\n            const size = controls.getTabSize.call(this, pane);\n\n            // Restore auto height/width\n            const restore = e => {\n                // We're only bothered about height and width on the container\n                if (e.target !== container || ![\n                    'width',\n                    'height',\n                ].includes(e.propertyName)) {\n                    return;\n                }\n\n                // Revert back to auto\n                container.style.width = '';\n                container.style.height = '';\n\n                // Only listen once\n                utils.off(container, utils.transitionEndEvent, restore);\n            };\n\n            // Listen for the transition finishing and restore auto height/width\n            utils.on(container, utils.transitionEndEvent, restore);\n\n            // Set dimensions to target\n            container.style.width = `${size.width}px`;\n            container.style.height = `${size.height}px`;\n        }\n\n        // Set attributes on current tab\n        current.setAttribute('aria-hidden', true);\n        current.setAttribute('tabindex', -1);\n\n        // Set attributes on target\n        pane.setAttribute('aria-hidden', !show);\n        tab.setAttribute('aria-expanded', show);\n        pane.removeAttribute('tabindex');\n\n        // Focus the first item\n        pane.querySelectorAll('button:not(:disabled), input:not(:disabled), [tabindex]')[0].focus();\n    },\n\n    // Build the default HTML\n    // TODO: Set order based on order in the config.controls array?\n    create(data) {\n        // Do nothing if we want no controls\n        if (utils.is.empty(this.config.controls)) {\n            return null;\n        }\n\n        // Create the container\n        const container = utils.createElement('div', utils.getAttributesFromSelector(this.config.selectors.controls.wrapper));\n\n        // Restart button\n        if (this.config.controls.includes('restart')) {\n            container.appendChild(controls.createButton.call(this, 'restart'));\n        }\n\n        // Rewind button\n        if (this.config.controls.includes('rewind')) {\n            container.appendChild(controls.createButton.call(this, 'rewind'));\n        }\n\n        // Play/Pause button\n        if (this.config.controls.includes('play')) {\n            container.appendChild(controls.createButton.call(this, 'play'));\n        }\n\n        // Fast forward button\n        if (this.config.controls.includes('fast-forward')) {\n            container.appendChild(controls.createButton.call(this, 'fast-forward'));\n        }\n\n        // Progress\n        if (this.config.controls.includes('progress')) {\n            const progress = utils.createElement('div', utils.getAttributesFromSelector(this.config.selectors.progress));\n\n            // Seek range slider\n            const seek = controls.createRange.call(this, 'seek', {\n                id: `plyr-seek-${data.id}`,\n            });\n            progress.appendChild(seek.label);\n            progress.appendChild(seek.input);\n\n            // Buffer progress\n            progress.appendChild(controls.createProgress.call(this, 'buffer'));\n\n            // TODO: Add loop display indicator\n\n            // Seek tooltip\n            if (this.config.tooltips.seek) {\n                const tooltip = utils.createElement(\n                    'span',\n                    {\n                        role: 'tooltip',\n                        class: this.config.classNames.tooltip,\n                    },\n                    '00:00',\n                );\n\n                progress.appendChild(tooltip);\n                this.elements.display.seekTooltip = tooltip;\n            }\n\n            this.elements.progress = progress;\n            container.appendChild(this.elements.progress);\n        }\n\n        // Media current time display\n        if (this.config.controls.includes('current-time')) {\n            container.appendChild(controls.createTime.call(this, 'currentTime'));\n        }\n\n        // Media duration display\n        if (this.config.controls.includes('duration')) {\n            container.appendChild(controls.createTime.call(this, 'duration'));\n        }\n\n        // Toggle mute button\n        if (this.config.controls.includes('mute')) {\n            container.appendChild(controls.createButton.call(this, 'mute'));\n        }\n\n        // Volume range control\n        if (this.config.controls.includes('volume')) {\n            const volume = utils.createElement('div', {\n                class: 'plyr__volume',\n            });\n\n            // Set the attributes\n            const attributes = {\n                max: 1,\n                step: 0.05,\n                value: this.config.volume,\n            };\n\n            // Create the volume range slider\n            const range = controls.createRange.call(\n                this,\n                'volume',\n                utils.extend(attributes, {\n                    id: `plyr-volume-${data.id}`,\n                }),\n            );\n            volume.appendChild(range.label);\n            volume.appendChild(range.input);\n\n            this.elements.volume = volume;\n\n            container.appendChild(volume);\n        }\n\n        // Toggle captions button\n        if (this.config.controls.includes('captions')) {\n            container.appendChild(controls.createButton.call(this, 'captions'));\n        }\n\n        // Settings button / menu\n        if (this.config.controls.includes('settings') && !utils.is.empty(this.config.settings)) {\n            const menu = utils.createElement('div', {\n                class: 'plyr__menu',\n                hidden: '',\n            });\n\n            menu.appendChild(\n                controls.createButton.call(this, 'settings', {\n                    id: `plyr-settings-toggle-${data.id}`,\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}`,\n                    'aria-expanded': false,\n                }),\n            );\n\n            const form = utils.createElement('form', {\n                class: 'plyr__menu__container',\n                id: `plyr-settings-${data.id}`,\n                'aria-hidden': true,\n                'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n                role: 'tablist',\n                tabindex: -1,\n            });\n\n            const inner = utils.createElement('div');\n\n            const home = utils.createElement('div', {\n                id: `plyr-settings-${data.id}-home`,\n                'aria-hidden': false,\n                'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n                role: 'tabpanel',\n            });\n\n            // Create the tab list\n            const tabs = utils.createElement('ul', {\n                role: 'tablist',\n            });\n\n            // Build the tabs\n            this.config.settings.forEach(type => {\n                const tab = utils.createElement('li', {\n                    role: 'tab',\n                    hidden: '',\n                });\n\n                const button = utils.createElement(\n                    'button',\n                    utils.extend(utils.getAttributesFromSelector(this.config.selectors.buttons.settings), {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n                        id: `plyr-settings-${data.id}-${type}-tab`,\n                        'aria-haspopup': true,\n                        'aria-controls': `plyr-settings-${data.id}-${type}`,\n                        'aria-expanded': false,\n                    }),\n                    i18n.get(type, this.config),\n                );\n\n                const value = utils.createElement('span', {\n                    class: this.config.classNames.menu.value,\n                });\n\n                // Speed contains HTML entities\n                value.innerHTML = data[type];\n\n                button.appendChild(value);\n                tab.appendChild(button);\n                tabs.appendChild(tab);\n\n                this.elements.settings.tabs[type] = tab;\n            });\n\n            home.appendChild(tabs);\n            inner.appendChild(home);\n\n            // Build the panes\n            this.config.settings.forEach(type => {\n                const pane = utils.createElement('div', {\n                    id: `plyr-settings-${data.id}-${type}`,\n                    'aria-hidden': true,\n                    'aria-labelled-by': `plyr-settings-${data.id}-${type}-tab`,\n                    role: 'tabpanel',\n                    tabindex: -1,\n                    hidden: '',\n                });\n\n                const back = utils.createElement(\n                    'button',\n                    {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n                        'aria-haspopup': true,\n                        'aria-controls': `plyr-settings-${data.id}-home`,\n                        'aria-expanded': false,\n                    },\n                    i18n.get(type, this.config),\n                );\n\n                pane.appendChild(back);\n\n                const options = utils.createElement('ul');\n\n                pane.appendChild(options);\n                inner.appendChild(pane);\n\n                this.elements.settings.panes[type] = pane;\n            });\n\n            form.appendChild(inner);\n            menu.appendChild(form);\n            container.appendChild(menu);\n\n            this.elements.settings.form = form;\n            this.elements.settings.menu = menu;\n        }\n\n        // Picture in picture button\n        if (this.config.controls.includes('pip') && support.pip) {\n            container.appendChild(controls.createButton.call(this, 'pip'));\n        }\n\n        // Airplay button\n        if (this.config.controls.includes('airplay') && support.airplay) {\n            container.appendChild(controls.createButton.call(this, 'airplay'));\n        }\n\n        // Toggle fullscreen button\n        if (this.config.controls.includes('fullscreen')) {\n            container.appendChild(controls.createButton.call(this, 'fullscreen'));\n        }\n\n        // Larger overlaid play button\n        if (this.config.controls.includes('play-large')) {\n            this.elements.container.appendChild(controls.createButton.call(this, 'play-large'));\n        }\n\n        this.elements.controls = container;\n\n        if (this.isHTML5) {\n            controls.setQualityMenu.call(this, html5.getQualityOptions.call(this));\n        }\n\n        controls.setSpeedMenu.call(this);\n\n        return container;\n    },\n\n    // Insert controls\n    inject() {\n        // Sprite\n        if (this.config.loadSprite) {\n            const icon = controls.getIconUrl.call(this);\n\n            // Only load external sprite using AJAX\n            if (icon.absolute) {\n                utils.loadSprite(icon.url, 'sprite-plyr');\n            }\n        }\n\n        // Create a unique ID\n        this.id = Math.floor(Math.random() * 10000);\n\n        // Null by default\n        let container = null;\n        this.elements.controls = null;\n\n        // HTML or Element passed as the option\n        if (utils.is.string(this.config.controls) || utils.is.element(this.config.controls)) {\n            container = this.config.controls;\n        } else if (utils.is.function(this.config.controls)) {\n            // A custom function to build controls\n            // The function can return a HTMLElement or String\n            container = this.config.controls({\n                id: this.id,\n                seektime: this.config.seekTime,\n                title: this.config.title,\n            });\n        } else {\n            // Create controls\n            container = controls.create.call(this, {\n                id: this.id,\n                seektime: this.config.seekTime,\n                speed: this.speed,\n                quality: this.quality,\n                captions: captions.getLabel.call(this),\n                // TODO: Looping\n                // loop: 'None',\n            });\n        }\n\n        // Controls container\n        let target;\n\n        // Inject to custom location\n        if (utils.is.string(this.config.selectors.controls.container)) {\n            target = document.querySelector(this.config.selectors.controls.container);\n        }\n\n        // Inject into the container by default\n        if (!utils.is.element(target)) {\n            target = this.elements.container;\n        }\n\n        // Inject controls HTML\n        if (utils.is.element(container)) {\n            target.appendChild(container);\n        } else if (container) {\n            target.insertAdjacentHTML('beforeend', container);\n        }\n\n        // Find the elements if need be\n        if (!utils.is.element(this.elements.controls)) {\n            utils.findElements.call(this);\n        }\n\n        // Edge sometimes doesn't finish the paint so force a redraw\n        if (window.navigator.userAgent.includes('Edge')) {\n            utils.repaint(target);\n        }\n\n        // Setup tooltips\n        if (this.config.tooltips.controls) {\n            const labels = utils.getElements.call(\n                this,\n                [\n                    this.config.selectors.controls.wrapper,\n                    ' ',\n                    this.config.selectors.labels,\n                    ' .',\n                    this.config.classNames.hidden,\n                ].join(''),\n            );\n\n            Array.from(labels).forEach(label => {\n                utils.toggleClass(label, this.config.classNames.hidden, false);\n                utils.toggleClass(label, this.config.classNames.tooltip, true);\n                label.setAttribute('role', 'tooltip');\n            });\n        }\n    },\n};\n\nexport default controls;\n","// ==========================================================================\n// Plyr Event Listeners\n// ==========================================================================\n\nimport utils from './utils';\nimport controls from './controls';\nimport ui from './ui';\n\n// Sniff out the browser\nconst browser = utils.getBrowser();\n\nclass Listeners {\n    constructor(player) {\n        this.player = player;\n        this.lastKey = null;\n\n        this.handleKey = this.handleKey.bind(this);\n        this.toggleMenu = this.toggleMenu.bind(this);\n        this.firstTouch = this.firstTouch.bind(this);\n    }\n\n    // Handle key presses\n    handleKey(event) {\n        const code = event.keyCode ? event.keyCode : event.which;\n        const pressed = event.type === 'keydown';\n        const repeat = pressed && code === this.lastKey;\n\n        // Bail if a modifier key is set\n        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n            return;\n        }\n\n        // If the event is bubbled from the media element\n        // Firefox doesn't get the keycode for whatever reason\n        if (!utils.is.number(code)) {\n            return;\n        }\n\n        // Seek by the number keys\n        const seekByKey = () => {\n            // Divide the max duration into 10th's and times by the number value\n            this.player.currentTime = this.player.duration / 10 * (code - 48);\n        };\n\n        // Handle the key on keydown\n        // Reset on keyup\n        if (pressed) {\n            // Which keycodes should we prevent default\n            const preventDefault = [\n                48,\n                49,\n                50,\n                51,\n                52,\n                53,\n                54,\n                56,\n                57,\n                32,\n                75,\n                38,\n                40,\n                77,\n                39,\n                37,\n                70,\n                67,\n                73,\n                76,\n                79,\n            ];\n\n            // Check focused element\n            // and if the focused element is not editable (e.g. text input)\n            // and any that accept key input http://webaim.org/techniques/keyboard/\n            const focused = utils.getFocusElement();\n            if (utils.is.element(focused) && utils.matches(focused, this.player.config.selectors.editable)) {\n                return;\n            }\n\n            // If the code is found prevent default (e.g. prevent scrolling for arrows)\n            if (preventDefault.includes(code)) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n\n            switch (code) {\n                case 48:\n                case 49:\n                case 50:\n                case 51:\n                case 52:\n                case 53:\n                case 54:\n                case 55:\n                case 56:\n                case 57:\n                    // 0-9\n                    if (!repeat) {\n                        seekByKey();\n                    }\n                    break;\n\n                case 32:\n                case 75:\n                    // Space and K key\n                    if (!repeat) {\n                        this.player.togglePlay();\n                    }\n                    break;\n\n                case 38:\n                    // Arrow up\n                    this.player.increaseVolume(0.1);\n                    break;\n\n                case 40:\n                    // Arrow down\n                    this.player.decreaseVolume(0.1);\n                    break;\n\n                case 77:\n                    // M key\n                    if (!repeat) {\n                        this.player.muted = !this.player.muted;\n                    }\n                    break;\n\n                case 39:\n                    // Arrow forward\n                    this.player.forward();\n                    break;\n\n                case 37:\n                    // Arrow back\n                    this.player.rewind();\n                    break;\n\n                case 70:\n                    // F key\n                    this.player.fullscreen.toggle();\n                    break;\n\n                case 67:\n                    // C key\n                    if (!repeat) {\n                        this.player.toggleCaptions();\n                    }\n                    break;\n\n                case 76:\n                    // L key\n                    this.player.loop = !this.player.loop;\n                    break;\n\n                /* case 73:\n                    this.setLoop('start');\n                    break;\n\n                case 76:\n                    this.setLoop();\n                    break;\n\n                case 79:\n                    this.setLoop('end');\n                    break; */\n\n                default:\n                    break;\n            }\n\n            // Escape is handle natively when in full screen\n            // So we only need to worry about non native\n            if (!this.player.fullscreen.enabled && this.player.fullscreen.active && code === 27) {\n                this.player.fullscreen.toggle();\n            }\n\n            // Store last code for next cycle\n            this.lastKey = code;\n        } else {\n            this.lastKey = null;\n        }\n    }\n\n    // Toggle menu\n    toggleMenu(event) {\n        controls.toggleMenu.call(this.player, event);\n    }\n\n    // Device is touch enabled\n    firstTouch() {\n        this.player.touch = true;\n\n        // Add touch class\n        utils.toggleClass(this.player.elements.container, this.player.config.classNames.isTouch, true);\n\n        // Clean up\n        utils.off(document.body, 'touchstart', this.firstTouch);\n    }\n\n    // Global window & document listeners\n    global(toggle = true) {\n        // Keyboard shortcuts\n        if (this.player.config.keyboard.global) {\n            utils.toggleListener(window, 'keydown keyup', this.handleKey, toggle, false);\n        }\n\n        // Click anywhere closes menu\n        utils.toggleListener(document.body, 'click', this.toggleMenu, toggle);\n\n        // Detect touch by events\n        utils.on(document.body, 'touchstart', this.firstTouch);\n    }\n\n    // Container listeners\n    container() {\n        // Keyboard shortcuts\n        if (!this.player.config.keyboard.global && this.player.config.keyboard.focused) {\n            utils.on(this.player.elements.container, 'keydown keyup', this.handleKey, false);\n        }\n\n        // Detect tab focus\n        // Remove class on blur/focusout\n        utils.on(this.player.elements.container, 'focusout', event => {\n            utils.toggleClass(event.target, this.player.config.classNames.tabFocus, false);\n        });\n\n        // Add classname to tabbed elements\n        utils.on(this.player.elements.container, 'keydown', event => {\n            if (event.keyCode !== 9) {\n                return;\n            }\n\n            // Delay the adding of classname until the focus has changed\n            // This event fires before the focusin event\n            setTimeout(() => {\n                utils.toggleClass(utils.getFocusElement(), this.player.config.classNames.tabFocus, true);\n            }, 0);\n        });\n\n        // Toggle controls visibility based on mouse movement\n        if (this.player.config.hideControls) {\n            // Toggle controls on mouse events and entering fullscreen\n            utils.on(this.player.elements.container, 'mouseenter mouseleave mousemove touchstart touchend touchmove enterfullscreen exitfullscreen', event => {\n                this.player.toggleControls(event);\n            });\n        }\n    }\n\n    // Listen for media events\n    media() {\n        // Time change on media\n        utils.on(this.player.media, 'timeupdate seeking', event => ui.timeUpdate.call(this.player, event));\n\n        // Display duration\n        utils.on(this.player.media, 'durationchange loadedmetadata', event => ui.durationUpdate.call(this.player, event));\n\n        // Check for audio tracks on load\n        // We can't use `loadedmetadata` as it doesn't seem to have audio tracks at that point\n        utils.on(this.player.media, 'loadeddata', () => {\n            utils.toggleHidden(this.player.elements.volume, !this.player.hasAudio);\n            utils.toggleHidden(this.player.elements.buttons.mute, !this.player.hasAudio);\n        });\n\n        // Handle the media finishing\n        utils.on(this.player.media, 'ended', () => {\n            // Show poster on end\n            if (this.player.isHTML5 && this.player.isVideo && this.player.config.showPosterOnEnd) {\n                // Restart\n                this.player.restart();\n\n                // Re-load media\n                this.player.media.load();\n            }\n        });\n\n        // Check for buffer progress\n        utils.on(this.player.media, 'progress playing', event => ui.updateProgress.call(this.player, event));\n\n        // Handle volume changes\n        utils.on(this.player.media, 'volumechange', event => ui.updateVolume.call(this.player, event));\n\n        // Handle play/pause\n        utils.on(this.player.media, 'playing play pause ended emptied', event => ui.checkPlaying.call(this.player, event));\n\n        // Loading state\n        utils.on(this.player.media, 'waiting canplay seeked playing', event => ui.checkLoading.call(this.player, event));\n\n        // Check if media failed to load\n        // utils.on(this.player.media, 'play', event => ui.checkFailed.call(this.player, event));\n\n        // If autoplay, then load advertisement if required\n        // TODO: Show some sort of loading state while the ad manager loads else there's a delay before ad shows\n        utils.on(this.player.media, 'playing', () => {\n            if (!this.player.ads) {\n                return;\n            }\n\n            // If ads are enabled, wait for them first\n            if (this.player.ads.enabled && !this.player.ads.initialized) {\n                // Wait for manager response\n                this.player.ads.managerPromise.then(() => this.player.ads.play()).catch(() => this.player.play());\n            }\n        });\n\n        // Click video\n        if (this.player.supported.ui && this.player.config.clickToPlay && !this.player.isAudio) {\n            // Re-fetch the wrapper\n            const wrapper = utils.getElement.call(this.player, `.${this.player.config.classNames.video}`);\n\n            // Bail if there's no wrapper (this should never happen)\n            if (!utils.is.element(wrapper)) {\n                return;\n            }\n\n            // On click play, pause ore restart\n            utils.on(wrapper, 'click', () => {\n                // Touch devices will just show controls (if we're hiding controls)\n                if (this.player.config.hideControls && this.player.touch && !this.player.paused) {\n                    return;\n                }\n\n                if (this.player.paused) {\n                    this.player.play();\n                } else if (this.player.ended) {\n                    this.player.restart();\n                    this.player.play();\n                } else {\n                    this.player.pause();\n                }\n            });\n        }\n\n        // Disable right click\n        if (this.player.supported.ui && this.player.config.disableContextMenu) {\n            utils.on(\n                this.player.elements.wrapper,\n                'contextmenu',\n                event => {\n                    event.preventDefault();\n                },\n                false,\n            );\n        }\n\n        // Volume change\n        utils.on(this.player.media, 'volumechange', () => {\n            // Save to storage\n            this.player.storage.set({ volume: this.player.volume, muted: this.player.muted });\n        });\n\n        // Speed change\n        utils.on(this.player.media, 'ratechange', () => {\n            // Update UI\n            controls.updateSetting.call(this.player, 'speed');\n\n            // Save to storage\n            this.player.storage.set({ speed: this.player.speed });\n        });\n\n        // Quality request\n        utils.on(this.player.media, 'qualityrequested', event => {\n            // Save to storage\n            this.player.storage.set({ quality: event.detail.quality });\n        });\n\n        // Quality change\n        utils.on(this.player.media, 'qualitychange', event => {\n            // Update UI\n            controls.updateSetting.call(this.player, 'quality', null, event.detail.quality);\n        });\n\n        // Caption language change\n        utils.on(this.player.media, 'languagechange', () => {\n            // Update UI\n            controls.updateSetting.call(this.player, 'captions');\n\n            // Save to storage\n            this.player.storage.set({ language: this.player.language });\n        });\n\n        // Captions toggle\n        utils.on(this.player.media, 'captionsenabled captionsdisabled', () => {\n            // Update UI\n            controls.updateSetting.call(this.player, 'captions');\n\n            // Save to storage\n            this.player.storage.set({ captions: this.player.captions.active });\n        });\n\n        // Proxy events to container\n        // Bubble up key events for Edge\n        utils.on(this.player.media, this.player.config.events.concat([\n            'keyup',\n            'keydown',\n        ]).join(' '), event => {\n            let detail = {};\n\n            // Get error details from media\n            if (event.type === 'error') {\n                detail = this.player.media.error;\n            }\n\n            utils.dispatchEvent.call(this.player, this.player.elements.container, event.type, true, detail);\n        });\n    }\n\n    // Listen for control events\n    controls() {\n        // IE doesn't support input event, so we fallback to change\n        const inputEvent = browser.isIE ? 'change' : 'input';\n\n        // Run default and custom handlers\n        const proxy = (event, defaultHandler, customHandlerKey) => {\n            const customHandler = this.player.config.listeners[customHandlerKey];\n            const hasCustomHandler = utils.is.function(customHandler);\n            let returned = true;\n\n            // Execute custom handler\n            if (hasCustomHandler) {\n                returned = customHandler.call(this.player, event);\n            }\n\n            // Only call default handler if not prevented in custom handler\n            if (returned && utils.is.function(defaultHandler)) {\n                defaultHandler.call(this.player, event);\n            }\n        };\n\n        // Trigger custom and default handlers\n        const on = (element, type, defaultHandler, customHandlerKey, passive = true) => {\n            const customHandler = this.player.config.listeners[customHandlerKey];\n            const hasCustomHandler = utils.is.function(customHandler);\n\n            utils.on(element, type, event => proxy(event, defaultHandler, customHandlerKey), passive && !hasCustomHandler);\n        };\n\n        // Play/pause toggle\n        on(this.player.elements.buttons.play, 'click', this.player.togglePlay, 'play');\n\n        // Pause\n        on(this.player.elements.buttons.restart, 'click', this.player.restart, 'restart');\n\n        // Rewind\n        on(this.player.elements.buttons.rewind, 'click', this.player.rewind, 'rewind');\n\n        // Rewind\n        on(this.player.elements.buttons.fastForward, 'click', this.player.forward, 'fastForward');\n\n        // Mute toggle\n        on(\n            this.player.elements.buttons.mute,\n            'click',\n            () => {\n                this.player.muted = !this.player.muted;\n            },\n            'mute',\n        );\n\n        // Captions toggle\n        on(this.player.elements.buttons.captions, 'click', this.player.toggleCaptions);\n\n        // Fullscreen toggle\n        on(\n            this.player.elements.buttons.fullscreen,\n            'click',\n            () => {\n                this.player.fullscreen.toggle();\n            },\n            'fullscreen',\n        );\n\n        // Picture-in-Picture\n        on(\n            this.player.elements.buttons.pip,\n            'click',\n            () => {\n                this.player.pip = 'toggle';\n            },\n            'pip',\n        );\n\n        // Airplay\n        on(this.player.elements.buttons.airplay, 'click', this.player.airplay, 'airplay');\n\n        // Settings menu\n        on(this.player.elements.buttons.settings, 'click', event => {\n            controls.toggleMenu.call(this.player, event);\n        });\n\n        // Settings menu\n        on(this.player.elements.settings.form, 'click', event => {\n            event.stopPropagation();\n\n            // Settings menu items - use event delegation as items are added/removed\n            if (utils.matches(event.target, this.player.config.selectors.inputs.language)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.language = event.target.value;\n                    },\n                    'language',\n                );\n            } else if (utils.matches(event.target, this.player.config.selectors.inputs.quality)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.quality = event.target.value;\n                    },\n                    'quality',\n                );\n            } else if (utils.matches(event.target, this.player.config.selectors.inputs.speed)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.speed = parseFloat(event.target.value);\n                    },\n                    'speed',\n                );\n            } else {\n                controls.showTab.call(this.player, event);\n            }\n        });\n\n        // Seek\n        on(\n            this.player.elements.inputs.seek,\n            inputEvent,\n            event => {\n                this.player.currentTime = event.target.value / event.target.max * this.player.duration;\n            },\n            'seek',\n        );\n\n        // Current time invert\n        // Only if one time element is used for both currentTime and duration\n        if (this.player.config.toggleInvert && !utils.is.element(this.player.elements.display.duration)) {\n            on(this.player.elements.display.currentTime, 'click', () => {\n                // Do nothing if we're at the start\n                if (this.player.currentTime === 0) {\n                    return;\n                }\n\n                this.player.config.invertTime = !this.player.config.invertTime;\n                ui.timeUpdate.call(this.player);\n            });\n        }\n\n        // Volume\n        on(\n            this.player.elements.inputs.volume,\n            inputEvent,\n            event => {\n                this.player.volume = event.target.value;\n            },\n            'volume',\n        );\n\n        // Polyfill for lower fill in <input type=\"range\"> for webkit\n        if (browser.isWebkit) {\n            on(utils.getElements.call(this.player, 'input[type=\"range\"]'), 'input', event => {\n                controls.updateRangeFill.call(this.player, event.target);\n            });\n        }\n\n        // Seek tooltip\n        on(this.player.elements.progress, 'mouseenter mouseleave mousemove', event => controls.updateSeekTooltip.call(this.player, event));\n\n        // Toggle controls visibility based on mouse movement\n        if (this.player.config.hideControls) {\n            // Watch for cursor over controls so they don't hide when trying to interact\n            on(this.player.elements.controls, 'mouseenter mouseleave', event => {\n                this.player.elements.controls.hover = !this.player.touch && event.type === 'mouseenter';\n            });\n\n            // Watch for cursor over controls so they don't hide when trying to interact\n            on(this.player.elements.controls, 'mousedown mouseup touchstart touchend touchcancel', event => {\n                this.player.elements.controls.pressed = [\n                    'mousedown',\n                    'touchstart',\n                ].includes(event.type);\n            });\n\n            // Focus in/out on controls\n            on(this.player.elements.controls, 'focusin focusout', event => {\n                this.player.toggleControls(event);\n            });\n        }\n\n        // Mouse wheel for volume\n        on(\n            this.player.elements.inputs.volume,\n            'wheel',\n            event => {\n                // Detect \"natural\" scroll - suppored on OS X Safari only\n                // Other browsers on OS X will be inverted until support improves\n                const inverted = event.webkitDirectionInvertedFromDevice;\n                const step = 1 / 50;\n                let direction = 0;\n\n                // Scroll down (or up on natural) to decrease\n                if (event.deltaY < 0 || event.deltaX > 0) {\n                    if (inverted) {\n                        this.player.decreaseVolume(step);\n                        direction = -1;\n                    } else {\n                        this.player.increaseVolume(step);\n                        direction = 1;\n                    }\n                }\n\n                // Scroll up (or down on natural) to increase\n                if (event.deltaY > 0 || event.deltaX < 0) {\n                    if (inverted) {\n                        this.player.increaseVolume(step);\n                        direction = 1;\n                    } else {\n                        this.player.decreaseVolume(step);\n                        direction = -1;\n                    }\n                }\n\n                // Don't break page scrolling at max and min\n                if ((direction === 1 && this.player.media.volume < 1) || (direction === -1 && this.player.media.volume > 0)) {\n                    event.preventDefault();\n                }\n            },\n            'volume',\n            false,\n        );\n    }\n\n    // Reset on destroy\n    clear() {\n        this.global(false);\n    }\n}\n\nexport default Listeners;\n","// ==========================================================================\n// Plyr storage\n// ==========================================================================\n\nimport utils from './utils';\n\nclass Storage {\n    constructor(player) {\n        this.enabled = player.config.storage.enabled;\n        this.key = player.config.storage.key;\n    }\n\n    // Check for actual support (see if we can use it)\n    static get supported() {\n        try {\n            if (!('localStorage' in window)) {\n                return false;\n            }\n\n            const test = '___test';\n\n            // Try to use it (it might be disabled, e.g. user is in private mode)\n            // see: https://github.com/sampotts/plyr/issues/131\n            window.localStorage.setItem(test, test);\n            window.localStorage.removeItem(test);\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    get(key) {\n        if (!Storage.supported) {\n            return null;\n        }\n\n        const store = window.localStorage.getItem(this.key);\n\n        if (utils.is.empty(store)) {\n            return null;\n        }\n\n        const json = JSON.parse(store);\n\n        return utils.is.string(key) && key.length ? json[key] : json;\n    }\n\n    set(object) {\n        // Bail if we don't have localStorage support or it's disabled\n        if (!Storage.supported || !this.enabled) {\n            return;\n        }\n\n        // Can only store objectst\n        if (!utils.is.object(object)) {\n            return;\n        }\n\n        // Get current storage\n        let storage = this.get();\n\n        // Default to empty object\n        if (utils.is.empty(storage)) {\n            storage = {};\n        }\n\n        // Update the working copy of the values\n        utils.extend(storage, object);\n\n        // Update storage\n        window.localStorage.setItem(this.key, JSON.stringify(storage));\n    }\n}\n\nexport default Storage;\n","// ==========================================================================\n// Advertisement plugin using Google IMA HTML5 SDK\n// Create an account with our ad partner, vi here:\n// https://www.vi.ai/publisher-video-monetization/\n// ==========================================================================\n\n/* global google */\n\nimport utils from '../utils';\nimport i18n from '../i18n';\n\nclass Ads {\n    /**\n     * Ads constructor.\n     * @param {object} player\n     * @return {Ads}\n     */\n    constructor(player) {\n        this.player = player;\n        this.publisherId = player.config.ads.publisherId;\n        this.enabled = player.isHTML5 && player.isVideo && player.config.ads.enabled && utils.is.string(this.publisherId) && this.publisherId.length;\n        this.playing = false;\n        this.initialized = false;\n        this.elements = {\n            container: null,\n            displayContainer: null,\n        };\n        this.manager = null;\n        this.loader = null;\n        this.cuePoints = null;\n        this.events = {};\n        this.safetyTimer = null;\n        this.countdownTimer = null;\n\n        // Setup a promise to resolve when the IMA manager is ready\n        this.managerPromise = new Promise((resolve, reject) => {\n            // The ad is loaded and ready\n            this.on('loaded', resolve);\n\n            // Ads failed\n            this.on('error', reject);\n        });\n\n        this.load();\n    }\n\n    /**\n     * Load the IMA SDK\n     */\n    load() {\n        if (this.enabled) {\n            // Check if the Google IMA3 SDK is loaded or load it ourselves\n            if (!utils.is.object(window.google) || !utils.is.object(window.google.ima)) {\n                utils\n                    .loadScript(this.player.config.urls.googleIMA.api)\n                    .then(() => {\n                        this.ready();\n                    })\n                    .catch(() => {\n                        // Script failed to load or is blocked\n                        this.trigger('error', new Error('Google IMA SDK failed to load'));\n                    });\n            } else {\n                this.ready();\n            }\n        }\n    }\n\n    /**\n     * Get the ads instance ready\n     */\n    ready() {\n        // Start ticking our safety timer. If the whole advertisement\n        // thing doesn't resolve within our set time; we bail\n        this.startSafetyTimer(12000, 'ready()');\n\n        // Clear the safety timer\n        this.managerPromise.then(() => {\n            this.clearSafetyTimer('onAdsManagerLoaded()');\n        });\n\n        // Set listeners on the Plyr instance\n        this.listeners();\n\n        // Setup the IMA SDK\n        this.setupIMA();\n    }\n\n    // Build the default tag URL\n    get tagUrl() {\n        const params = {\n            AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\n            AV_CHANNELID: '5a0458dc28a06145e4519d21',\n            AV_URL: location.hostname,\n            cb: Date.now(),\n            AV_WIDTH: 640,\n            AV_HEIGHT: 480,\n            AV_CDIM2: this.publisherId,\n        };\n\n        const base = 'https://go.aniview.com/api/adserver6/vast/';\n\n        return `${base}?${utils.buildUrlParams(params)}`;\n    }\n\n    /**\n     * In order for the SDK to display ads for our video, we need to tell it where to put them,\n     * so here we define our ad container. This div is set up to render on top of the video player.\n     * Using the code below, we tell the SDK to render ads within that div. We also provide a\n     * handle to the content video player - the SDK will poll the current time of our player to\n     * properly place mid-rolls. After we create the ad display container, we initialize it. On\n     * mobile devices, this initialization is done as the result of a user action.\n     */\n    setupIMA() {\n        // Create the container for our advertisements\n        this.elements.container = utils.createElement('div', {\n            class: this.player.config.classNames.ads,\n        });\n        this.player.elements.container.appendChild(this.elements.container);\n\n        // So we can run VPAID2\n        google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n\n        // Set language\n        google.ima.settings.setLocale(this.player.config.ads.language);\n\n        // We assume the adContainer is the video container of the plyr element\n        // that will house the ads\n        this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container);\n\n        // Request video ads to be pre-loaded\n        this.requestAds();\n    }\n\n    /**\n     * Request advertisements\n     */\n    requestAds() {\n        const { container } = this.player.elements;\n\n        try {\n            // Create ads loader\n            this.loader = new google.ima.AdsLoader(this.elements.displayContainer);\n\n            // Listen and respond to ads loaded and error events\n            this.loader.addEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, event => this.onAdsManagerLoaded(event), false);\n            this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error), false);\n\n            // Request video ads\n            const request = new google.ima.AdsRequest();\n            request.adTagUrl = this.tagUrl;\n\n            // Specify the linear and nonlinear slot sizes. This helps the SDK\n            // to select the correct creative if multiple are returned\n            request.linearAdSlotWidth = container.offsetWidth;\n            request.linearAdSlotHeight = container.offsetHeight;\n            request.nonLinearAdSlotWidth = container.offsetWidth;\n            request.nonLinearAdSlotHeight = container.offsetHeight;\n\n            // We only overlay ads as we only support video.\n            request.forceNonLinearFullSlot = false;\n\n            this.loader.requestAds(request);\n        } catch (e) {\n            this.onAdError(e);\n        }\n    }\n\n    /**\n     * Update the ad countdown\n     * @param {boolean} start\n     */\n    pollCountdown(start = false) {\n        if (!start) {\n            clearInterval(this.countdownTimer);\n            this.elements.container.removeAttribute('data-badge-text');\n            return;\n        }\n\n        const update = () => {\n            const time = utils.formatTime(Math.max(this.manager.getRemainingTime(), 0));\n            const label = `${i18n.get('advertisement', this.player.config)} - ${time}`;\n            this.elements.container.setAttribute('data-badge-text', label);\n        };\n\n        this.countdownTimer = setInterval(update, 100);\n    }\n\n    /**\n     * This method is called whenever the ads are ready inside the AdDisplayContainer\n     * @param {Event} adsManagerLoadedEvent\n     */\n    onAdsManagerLoaded(event) {\n        // Get the ads manager\n        const settings = new google.ima.AdsRenderingSettings();\n\n        // Tell the SDK to save and restore content video state on our behalf\n        settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n        settings.enablePreloading = true;\n\n        // The SDK is polling currentTime on the contentPlayback. And needs a duration\n        // so it can determine when to start the mid- and post-roll\n        this.manager = event.getAdsManager(this.player, settings);\n\n        // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\n        this.cuePoints = this.manager.getCuePoints();\n\n        // Add advertisement cue's within the time line if available\n        if (!utils.is.empty(this.cuePoints)) {\n            this.cuePoints.forEach(cuePoint => {\n                if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < this.player.duration) {\n                    const seekElement = this.player.elements.progress;\n\n                    if (utils.is.element(seekElement)) {\n                        const cuePercentage = 100 / this.player.duration * cuePoint;\n                        const cue = utils.createElement('span', {\n                            class: this.player.config.classNames.cues,\n                        });\n\n                        cue.style.left = `${cuePercentage.toString()}%`;\n                        seekElement.appendChild(cue);\n                    }\n                }\n            });\n        }\n\n        // Get skippable state\n        // TODO: Skip button\n        // this.manager.getAdSkippableState();\n\n        // Set volume to match player\n        this.manager.setVolume(this.player.volume);\n\n        // Add listeners to the required events\n        // Advertisement error events\n        this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error));\n\n        // Advertisement regular events\n        Object.keys(google.ima.AdEvent.Type).forEach(type => {\n            this.manager.addEventListener(google.ima.AdEvent.Type[type], event => this.onAdEvent(event));\n        });\n\n        // Resolve our adsManager\n        this.trigger('loaded');\n    }\n\n    /**\n     * This is where all the event handling takes place. Retrieve the ad from the event. Some\n     * events (e.g. ALL_ADS_COMPLETED) don't have the ad object associated\n     * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n     * @param {Event} event\n     */\n    onAdEvent(event) {\n        const { container } = this.player.elements;\n\n        // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\n        // don't have ad object associated\n        const ad = event.getAd();\n\n        // Proxy event\n        const dispatchEvent = type => {\n            const event = `ads${type.replace(/_/g, '').toLowerCase()}`;\n            utils.dispatchEvent.call(this.player, this.player.media, event);\n        };\n\n        switch (event.type) {\n            case google.ima.AdEvent.Type.LOADED:\n                // This is the first event sent for an ad - it is possible to determine whether the\n                // ad is a video ad or an overlay\n                this.trigger('loaded');\n\n                // Bubble event\n                dispatchEvent(event.type);\n\n                // Start countdown\n                this.pollCountdown(true);\n\n                if (!ad.isLinear()) {\n                    // Position AdDisplayContainer correctly for overlay\n                    ad.width = container.offsetWidth;\n                    ad.height = container.offsetHeight;\n                }\n\n                // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\n                // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\n                break;\n\n            case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n                // All ads for the current videos are done. We can now request new advertisements\n                // in case the video is re-played\n\n                // Fire event\n                dispatchEvent(event.type);\n\n                // TODO: Example for what happens when a next video in a playlist would be loaded.\n                // So here we load a new video when all ads are done.\n                // Then we load new ads within a new adsManager. When the video\n                // Is started - after - the ads are loaded, then we get ads.\n                // You can also easily test cancelling and reloading by running\n                // player.ads.cancel() and player.ads.play from the console I guess.\n                // this.player.source = {\n                //     type: 'video',\n                //     title: 'View From A Blue Moon',\n                //     sources: [{\n                //         src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\n                // 'video/mp4', }], poster:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\n                // [ { kind: 'captions', label: 'English', srclang: 'en', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n                // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\n                // };\n\n                // TODO: So there is still this thing where a video should only be allowed to start\n                // playing when the IMA SDK is ready or has failed\n\n                this.loadAds();\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\n                // This event indicates the ad has started - the video player can adjust the UI,\n                // for example display a pause button and remaining time. Fired when content should\n                // be paused. This usually happens right before an ad is about to cover the content\n\n                dispatchEvent(event.type);\n\n                this.pauseContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\n                // This event indicates the ad has finished - the video player can perform\n                // appropriate UI actions, such as removing the timer for remaining time detection.\n                // Fired when content should be resumed. This usually happens when an ad finishes\n                // or collapses\n\n                dispatchEvent(event.type);\n\n                this.pollCountdown();\n\n                this.resumeContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.STARTED:\n            case google.ima.AdEvent.Type.MIDPOINT:\n            case google.ima.AdEvent.Type.COMPLETE:\n            case google.ima.AdEvent.Type.IMPRESSION:\n            case google.ima.AdEvent.Type.CLICK:\n                dispatchEvent(event.type);\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Any ad error handling comes through here\n     * @param {Event} event\n     */\n    onAdError(event) {\n        this.cancel();\n        this.player.debug.warn('Ads error', event);\n    }\n\n    /**\n     * Setup hooks for Plyr and window events. This ensures\n     * the mid- and post-roll launch at the correct time. And\n     * resize the advertisement when the player resizes\n     */\n    listeners() {\n        const { container } = this.player.elements;\n        let time;\n\n        // Add listeners to the required events\n        this.player.on('ended', () => {\n            this.loader.contentComplete();\n        });\n\n        this.player.on('seeking', () => {\n            time = this.player.currentTime;\n            return time;\n        });\n\n        this.player.on('seeked', () => {\n            const seekedTime = this.player.currentTime;\n\n            if (utils.is.empty(this.cuePoints)) {\n                return;\n            }\n\n            this.cuePoints.forEach((cuePoint, index) => {\n                if (time < cuePoint && cuePoint < seekedTime) {\n                    this.manager.discardAdBreak();\n                    this.cuePoints.splice(index, 1);\n                }\n            });\n        });\n\n        // Listen to the resizing of the window. And resize ad accordingly\n        // TODO: eventually implement ResizeObserver\n        window.addEventListener('resize', () => {\n            if (this.manager) {\n                this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n            }\n        });\n    }\n\n    /**\n     * Initialize the adsManager and start playing advertisements\n     */\n    play() {\n        const { container } = this.player.elements;\n\n        if (!this.managerPromise) {\n            this.resumeContent();\n        }\n\n        // Play the requested advertisement whenever the adsManager is ready\n        this.managerPromise\n            .then(() => {\n                // Initialize the container. Must be done via a user action on mobile devices\n                this.elements.displayContainer.initialize();\n\n                try {\n                    if (!this.initialized) {\n                        // Initialize the ads manager. Ad rules playlist will start at this time\n                        this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n\n                        // Call play to start showing the ad. Single video and overlay ads will\n                        // start at this time; the call will be ignored for ad rules\n                        this.manager.start();\n                    }\n\n                    this.initialized = true;\n                } catch (adError) {\n                    // An error may be thrown if there was a problem with the\n                    // VAST response\n                    this.onAdError(adError);\n                }\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Resume our video\n     */\n    resumeContent() {\n        // Hide the advertisement container\n        this.elements.container.style.zIndex = '';\n\n        // Ad is stopped\n        this.playing = false;\n\n        // Play our video\n        if (this.player.currentTime < this.player.duration) {\n            this.player.play();\n        }\n    }\n\n    /**\n     * Pause our video\n     */\n    pauseContent() {\n        // Show the advertisement container\n        this.elements.container.style.zIndex = 3;\n\n        // Ad is playing.\n        this.playing = true;\n\n        // Pause our video.\n        this.player.pause();\n    }\n\n    /**\n     * Destroy the adsManager so we can grab new ads after this. If we don't then we're not\n     * allowed to call new ads based on google policies, as they interpret this as an accidental\n     * video requests. https://developers.google.com/interactive-\n     * media-ads/docs/sdks/android/faq#8\n     */\n    cancel() {\n        // Pause our video\n        if (this.initialized) {\n            this.resumeContent();\n        }\n\n        // Tell our instance that we're done for now\n        this.trigger('error');\n\n        // Re-create our adsManager\n        this.loadAds();\n    }\n\n    /**\n     * Re-create our adsManager\n     */\n    loadAds() {\n        // Tell our adsManager to go bye bye\n        this.managerPromise\n            .then(() => {\n                // Destroy our adsManager\n                if (this.manager) {\n                    this.manager.destroy();\n                }\n\n                // Re-set our adsManager promises\n                this.managerPromise = new Promise(resolve => {\n                    this.on('loaded', resolve);\n                    this.player.debug.log(this.manager);\n                });\n\n                // Now request some new advertisements\n                this.requestAds();\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Handles callbacks after an ad event was invoked\n     * @param {string} event - Event type\n     */\n    trigger(event, ...args) {\n        const handlers = this.events[event];\n\n        if (utils.is.array(handlers)) {\n            handlers.forEach(handler => {\n                if (utils.is.function(handler)) {\n                    handler.apply(this, args);\n                }\n            });\n        }\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     * @return {Ads}\n     */\n    on(event, callback) {\n        if (!utils.is.array(this.events[event])) {\n            this.events[event] = [];\n        }\n\n        this.events[event].push(callback);\n\n        return this;\n    }\n\n    /**\n     * Setup a safety timer for when the ad network doesn't respond for whatever reason.\n     * The advertisement has 12 seconds to get its things together. We stop this timer when the\n     * advertisement is playing, or when a user action is required to start, then we clear the\n     * timer on ad ready\n     * @param {number} time\n     * @param {string} from\n     */\n    startSafetyTimer(time, from) {\n        this.player.debug.log(`Safety timer invoked from: ${from}`);\n\n        this.safetyTimer = setTimeout(() => {\n            this.cancel();\n            this.clearSafetyTimer('startSafetyTimer()');\n        }, time);\n    }\n\n    /**\n     * Clear our safety timer(s)\n     * @param {string} from\n     */\n    clearSafetyTimer(from) {\n        if (!utils.is.nullOrUndefined(this.safetyTimer)) {\n            this.player.debug.log(`Safety timer cleared from: ${from}`);\n\n            clearTimeout(this.safetyTimer);\n            this.safetyTimer = null;\n        }\n    }\n}\n\nexport default Ads;\n","// ==========================================================================\n// YouTube plugin\n// ==========================================================================\n\nimport utils from './../utils';\nimport controls from './../controls';\nimport ui from './../ui';\n\n// Standardise YouTube quality unit\nfunction mapQualityUnit(input) {\n    switch (input) {\n        case 'hd2160':\n            return 2160;\n\n        case 2160:\n            return 'hd2160';\n\n        case 'hd1440':\n            return 1440;\n\n        case 1440:\n            return 'hd1440';\n\n        case 'hd1080':\n            return 1080;\n\n        case 1080:\n            return 'hd1080';\n\n        case 'hd720':\n            return 720;\n\n        case 720:\n            return 'hd720';\n\n        case 'large':\n            return 480;\n\n        case 480:\n            return 'large';\n\n        case 'medium':\n            return 360;\n\n        case 360:\n            return 'medium';\n\n        case 'small':\n            return 240;\n\n        case 240:\n            return 'small';\n\n        default:\n            return 'default';\n    }\n}\n\nfunction mapQualityUnits(levels) {\n    if (utils.is.empty(levels)) {\n        return levels;\n    }\n\n    return utils.dedupe(levels.map(level => mapQualityUnit(level)));\n}\n\nconst youtube = {\n    setup() {\n        // Add embed class for responsive\n        utils.toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set aspect ratio\n        youtube.setAspectRatio.call(this);\n\n        // Setup API\n        if (utils.is.object(window.YT) && utils.is.function(window.YT.Player)) {\n            youtube.ready.call(this);\n        } else {\n            // Load the API\n            utils.loadScript(this.config.urls.youtube.api).catch(error => {\n                this.debug.warn('YouTube API failed to load', error);\n            });\n\n            // Setup callback for the API\n            // YouTube has it's own system of course...\n            window.onYouTubeReadyCallbacks = window.onYouTubeReadyCallbacks || [];\n\n            // Add to queue\n            window.onYouTubeReadyCallbacks.push(() => {\n                youtube.ready.call(this);\n            });\n\n            // Set callback to process queue\n            window.onYouTubeIframeAPIReady = () => {\n                window.onYouTubeReadyCallbacks.forEach(callback => {\n                    callback();\n                });\n            };\n        }\n    },\n\n    // Get the media title\n    getTitle(videoId) {\n        // Try via undocumented API method first\n        // This method disappears now and then though...\n        // https://github.com/sampotts/plyr/issues/709\n        if (utils.is.function(this.embed.getVideoData)) {\n            const { title } = this.embed.getVideoData();\n\n            if (utils.is.empty(title)) {\n                this.config.title = title;\n                ui.setTitle.call(this);\n                return;\n            }\n        }\n\n        // Or via Google API\n        const key = this.config.keys.google;\n        if (utils.is.string(key) && !utils.is.empty(key)) {\n            const url = `https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=${key}&fields=items(snippet(title))&part=snippet`;\n\n            utils\n                .fetch(url)\n                .then(result => {\n                    if (utils.is.object(result)) {\n                        this.config.title = result.items[0].snippet.title;\n                        ui.setTitle.call(this);\n                    }\n                })\n                .catch(() => {});\n        }\n    },\n\n    // Set aspect ratio\n    setAspectRatio() {\n        const ratio = this.config.ratio.split(':');\n        this.elements.wrapper.style.paddingBottom = `${100 / ratio[0] * ratio[1]}%`;\n    },\n\n    // API ready\n    ready() {\n        const player = this;\n\n        // Ignore already setup (race condition)\n        const currentId = player.media.getAttribute('id');\n        if (!utils.is.empty(currentId) && currentId.startsWith('youtube-')) {\n            return;\n        }\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (utils.is.empty(source)) {\n            source = player.media.getAttribute(this.config.attributes.embed.id);\n        }\n\n        // Replace the <iframe> with a <div> due to YouTube API issues\n        const videoId = utils.parseYouTubeId(source);\n        const id = utils.generateId(player.provider);\n        const container = utils.createElement('div', { id });\n        player.media = utils.replaceElement(container, player.media);\n\n        // Setup instance\n        // https://developers.google.com/youtube/iframe_api_reference\n        player.embed = new window.YT.Player(id, {\n            videoId,\n            playerVars: {\n                autoplay: player.config.autoplay ? 1 : 0, // Autoplay\n                controls: player.supported.ui ? 0 : 1, // Only show controls if not fully supported\n                rel: 0, // No related vids\n                showinfo: 0, // Hide info\n                iv_load_policy: 3, // Hide annotations\n                modestbranding: 1, // Hide logos as much as possible (they still show one in the corner when paused)\n                disablekb: 1, // Disable keyboard as we handle it\n                playsinline: 1, // Allow iOS inline playback\n\n                // Tracking for stats\n                // origin: window ? `${window.location.protocol}//${window.location.host}` : null,\n                widget_referrer: window ? window.location.href : null,\n\n                // Captions are flaky on YouTube\n                cc_load_policy: player.captions.active ? 1 : 0,\n                cc_lang_pref: player.config.captions.language,\n            },\n            events: {\n                onError(event) {\n                    // If we've already fired an error, don't do it again\n                    // YouTube fires onError twice\n                    if (utils.is.object(player.media.error)) {\n                        return;\n                    }\n\n                    const detail = {\n                        code: event.data,\n                    };\n\n                    // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\n                    switch (event.data) {\n                        case 2:\n                            detail.message =\n                                'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.';\n                            break;\n\n                        case 5:\n                            detail.message =\n                                'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.';\n                            break;\n\n                        case 100:\n                            detail.message =\n                                'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.';\n                            break;\n\n                        case 101:\n                        case 150:\n                            detail.message = 'The owner of the requested video does not allow it to be played in embedded players.';\n                            break;\n\n                        default:\n                            detail.message = 'An unknown error occured';\n                            break;\n                    }\n\n                    player.media.error = detail;\n\n                    utils.dispatchEvent.call(player, player.media, 'error');\n                },\n                onPlaybackQualityChange() {\n                    utils.dispatchEvent.call(player, player.media, 'qualitychange', false, {\n                        quality: player.media.quality,\n                    });\n                },\n                onPlaybackRateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get current speed\n                    player.media.playbackRate = instance.getPlaybackRate();\n\n                    utils.dispatchEvent.call(player, player.media, 'ratechange');\n                },\n                onReady(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get the title\n                    youtube.getTitle.call(player, videoId);\n\n                    // Create a faux HTML5 API using the YouTube API\n                    player.media.play = () => {\n                        instance.playVideo();\n                    };\n\n                    player.media.pause = () => {\n                        instance.pauseVideo();\n                    };\n\n                    player.media.stop = () => {\n                        instance.stopVideo();\n                    };\n\n                    player.media.duration = instance.getDuration();\n                    player.media.paused = true;\n\n                    // Seeking\n                    player.media.currentTime = 0;\n                    Object.defineProperty(player.media, 'currentTime', {\n                        get() {\n                            return Number(instance.getCurrentTime());\n                        },\n                        set(time) {\n                            // Vimeo will automatically play on seek\n                            const { paused } = player.media;\n\n                            // Set seeking flag\n                            player.media.seeking = true;\n\n                            // Trigger seeking\n                            utils.dispatchEvent.call(player, player.media, 'seeking');\n\n                            // Seek after events sent\n                            instance.seekTo(time);\n\n                            // Restore pause state\n                            if (paused) {\n                                player.pause();\n                            }\n                        },\n                    });\n\n                    // Playback speed\n                    Object.defineProperty(player.media, 'playbackRate', {\n                        get() {\n                            return instance.getPlaybackRate();\n                        },\n                        set(input) {\n                            instance.setPlaybackRate(input);\n                        },\n                    });\n\n                    // Quality\n                    Object.defineProperty(player.media, 'quality', {\n                        get() {\n                            return mapQualityUnit(instance.getPlaybackQuality());\n                        },\n                        set(input) {\n                            const quality = input;\n\n                            // Set via API\n                            instance.setPlaybackQuality(mapQualityUnit(quality));\n\n                            // Trigger request event\n                            utils.dispatchEvent.call(player, player.media, 'qualityrequested', false, {\n                                quality,\n                            });\n                        },\n                    });\n\n                    // Volume\n                    let { volume } = player.config;\n                    Object.defineProperty(player.media, 'volume', {\n                        get() {\n                            return volume;\n                        },\n                        set(input) {\n                            volume = input;\n                            instance.setVolume(volume * 100);\n                            utils.dispatchEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Muted\n                    let { muted } = player.config;\n                    Object.defineProperty(player.media, 'muted', {\n                        get() {\n                            return muted;\n                        },\n                        set(input) {\n                            const toggle = utils.is.boolean(input) ? input : muted;\n                            muted = toggle;\n                            instance[toggle ? 'mute' : 'unMute']();\n                            utils.dispatchEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Source\n                    Object.defineProperty(player.media, 'currentSrc', {\n                        get() {\n                            return instance.getVideoUrl();\n                        },\n                    });\n\n                    // Ended\n                    Object.defineProperty(player.media, 'ended', {\n                        get() {\n                            return player.currentTime === player.duration;\n                        },\n                    });\n\n                    // Get available speeds\n                    player.options.speed = instance.getAvailablePlaybackRates();\n\n                    // Set the tabindex to avoid focus entering iframe\n                    if (player.supported.ui) {\n                        player.media.setAttribute('tabindex', -1);\n                    }\n\n                    utils.dispatchEvent.call(player, player.media, 'timeupdate');\n                    utils.dispatchEvent.call(player, player.media, 'durationchange');\n\n                    // Reset timer\n                    clearInterval(player.timers.buffering);\n\n                    // Setup buffering\n                    player.timers.buffering = setInterval(() => {\n                        // Get loaded % from YouTube\n                        player.media.buffered = instance.getVideoLoadedFraction();\n\n                        // Trigger progress only when we actually buffer something\n                        if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\n                            utils.dispatchEvent.call(player, player.media, 'progress');\n                        }\n\n                        // Set last buffer point\n                        player.media.lastBuffered = player.media.buffered;\n\n                        // Bail if we're at 100%\n                        if (player.media.buffered === 1) {\n                            clearInterval(player.timers.buffering);\n\n                            // Trigger event\n                            utils.dispatchEvent.call(player, player.media, 'canplaythrough');\n                        }\n                    }, 200);\n\n                    // Rebuild UI\n                    setTimeout(() => ui.build.call(player), 50);\n                },\n                onStateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Reset timer\n                    clearInterval(player.timers.playing);\n\n                    // Handle events\n                    // -1   Unstarted\n                    // 0    Ended\n                    // 1    Playing\n                    // 2    Paused\n                    // 3    Buffering\n                    // 5    Video cued\n                    switch (event.data) {\n                        case -1:\n                            // Update scrubber\n                            utils.dispatchEvent.call(player, player.media, 'timeupdate');\n\n                            // Get loaded % from YouTube\n                            player.media.buffered = instance.getVideoLoadedFraction();\n                            utils.dispatchEvent.call(player, player.media, 'progress');\n\n                            break;\n\n                        case 0:\n                            player.media.paused = true;\n\n                            // YouTube doesn't support loop for a single video, so mimick it.\n                            if (player.media.loop) {\n                                // YouTube needs a call to `stopVideo` before playing again\n                                instance.stopVideo();\n                                instance.playVideo();\n                            } else {\n                                utils.dispatchEvent.call(player, player.media, 'ended');\n                            }\n\n                            break;\n\n                        case 1:\n                            // If we were seeking, fire seeked event\n                            if (player.media.seeking) {\n                                utils.dispatchEvent.call(player, player.media, 'seeked');\n                            }\n                            player.media.seeking = false;\n\n                            // Only fire play if paused before\n                            if (player.media.paused) {\n                                utils.dispatchEvent.call(player, player.media, 'play');\n                            }\n                            player.media.paused = false;\n\n                            utils.dispatchEvent.call(player, player.media, 'playing');\n\n                            // Poll to get playback progress\n                            player.timers.playing = setInterval(() => {\n                                utils.dispatchEvent.call(player, player.media, 'timeupdate');\n                            }, 50);\n\n                            // Check duration again due to YouTube bug\n                            // https://github.com/sampotts/plyr/issues/374\n                            // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                            if (player.media.duration !== instance.getDuration()) {\n                                player.media.duration = instance.getDuration();\n                                utils.dispatchEvent.call(player, player.media, 'durationchange');\n                            }\n\n                            // Get quality\n\n                            // Disable quality controls on youtube due to bugs and lack of support\n                            // https://github.com/sampotts/plyr/issues/1149#issuecomment-412530577\n                            // controls.setQualityMenu.call(player, mapQualityUnits(instance.getAvailableQualityLevels()));\n\n                            break;\n\n                        case 2:\n                            player.media.paused = true;\n\n                            utils.dispatchEvent.call(player, player.media, 'pause');\n\n                            break;\n\n                        default:\n                            break;\n                    }\n\n                    utils.dispatchEvent.call(player, player.elements.container, 'statechange', false, {\n                        code: event.data,\n                    });\n                },\n            },\n        });\n    },\n};\n\nexport default youtube;\n","// ==========================================================================\n// Vimeo plugin\n// ==========================================================================\n\nimport utils from './../utils';\nimport captions from './../captions';\nimport controls from './../controls';\nimport ui from './../ui';\n\nconst vimeo = {\n    setup() {\n        // Add embed class for responsive\n        utils.toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set intial ratio\n        vimeo.setAspectRatio.call(this);\n\n        // Load the API if not already\n        if (!utils.is.object(window.Vimeo)) {\n            utils\n                .loadScript(this.config.urls.vimeo.api)\n                .then(() => {\n                    vimeo.ready.call(this);\n                })\n                .catch(error => {\n                    this.debug.warn('Vimeo API failed to load', error);\n                });\n        } else {\n            vimeo.ready.call(this);\n        }\n    },\n\n    // Set aspect ratio\n    // For Vimeo we have an extra 300% height <div> to hide the standard controls and UI\n    setAspectRatio(input) {\n        const ratio = utils.is.string(input) ? input.split(':') : this.config.ratio.split(':');\n        const padding = 100 / ratio[0] * ratio[1];\n        this.elements.wrapper.style.paddingBottom = `${padding}%`;\n\n        if (this.supported.ui) {\n            const height = 240;\n            const offset = (height - padding) / (height / 50);\n\n            this.media.style.transform = `translateY(-${offset}%)`;\n        }\n    },\n\n    // API Ready\n    ready() {\n        const player = this;\n\n        // Get Vimeo params for the iframe\n        const options = {\n            loop: player.config.loop.active,\n            autoplay: player.autoplay,\n            byline: false,\n            portrait: false,\n            title: false,\n            speed: true,\n            transparent: 0,\n            gesture: 'media',\n            playsinline: !this.config.fullscreen.iosNative,\n            quality: player.config.quality.default,\n        };\n        const params = utils.buildUrlParams(options);\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (utils.is.empty(source)) {\n            source = player.media.getAttribute(this.config.attributes.embed.id);\n        }\n\n        const id = utils.parseVimeoId(source);\n\n        // Build an iframe\n        const iframe = utils.createElement('iframe');\n        const src = `https://player.vimeo.com/video/${id}?${params}`;\n        iframe.setAttribute('src', src);\n        iframe.setAttribute('allowfullscreen', '');\n        iframe.setAttribute('allowtransparency', '');\n        iframe.setAttribute('allow', 'autoplay');\n\n        // Inject the package\n        const wrapper = utils.createElement('div');\n        wrapper.appendChild(iframe);\n        player.media = utils.replaceElement(wrapper, player.media);\n\n        // Setup instance\n        // https://github.com/vimeo/player.js\n        player.embed = new window.Vimeo.Player(iframe);\n\n        player.media.paused = true;\n        player.media.currentTime = 0;\n\n        // Disable native text track rendering\n        if (player.supported.ui) {\n            player.embed.disableTextTrack();\n        }\n\n        // Create a faux HTML5 API using the Vimeo API\n        player.media.play = () => {\n            player.embed.play().then(() => {\n                player.media.paused = false;\n            });\n        };\n\n        player.media.pause = () => {\n            player.embed.pause().then(() => {\n                player.media.paused = true;\n            });\n        };\n\n        player.media.stop = () => {\n            player.pause();\n            player.currentTime = 0;\n        };\n\n        // Seeking\n        let { currentTime } = player.media;\n        Object.defineProperty(player.media, 'currentTime', {\n            get() {\n                return currentTime;\n            },\n            set(time) {\n                // Get current paused state\n                // Vimeo will automatically play on seek\n                const { paused } = player.media;\n\n                // Set seeking flag\n                player.media.seeking = true;\n\n                // Trigger seeking\n                utils.dispatchEvent.call(player, player.media, 'seeking');\n\n                // Seek after events\n                player.embed.setCurrentTime(time).catch(() => {\n                    // Do nothing\n                });\n\n                // Restore pause state\n                if (paused) {\n                    player.pause();\n                }\n            },\n        });\n\n        // Playback speed\n        let speed = player.config.speed.selected;\n        Object.defineProperty(player.media, 'playbackRate', {\n            get() {\n                return speed;\n            },\n            set(input) {\n                player.embed\n                    .setPlaybackRate(input)\n                    .then(() => {\n                        speed = input;\n                        utils.dispatchEvent.call(player, player.media, 'ratechange');\n                    })\n                    .catch(error => {\n                        // Hide menu item (and menu if empty)\n                        if (error.name === 'Error') {\n                            controls.setSpeedMenu.call(player, []);\n                        }\n                    });\n            },\n        });\n\n        // Volume\n        let { volume } = player.config;\n        Object.defineProperty(player.media, 'volume', {\n            get() {\n                return volume;\n            },\n            set(input) {\n                player.embed.setVolume(input).then(() => {\n                    volume = input;\n                    utils.dispatchEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Muted\n        let { muted } = player.config;\n        Object.defineProperty(player.media, 'muted', {\n            get() {\n                return muted;\n            },\n            set(input) {\n                const toggle = utils.is.boolean(input) ? input : false;\n\n                player.embed.setVolume(toggle ? 0 : player.config.volume).then(() => {\n                    muted = toggle;\n                    utils.dispatchEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Loop\n        let { loop } = player.config;\n        Object.defineProperty(player.media, 'loop', {\n            get() {\n                return loop;\n            },\n            set(input) {\n                const toggle = utils.is.boolean(input) ? input : player.config.loop.active;\n\n                player.embed.setLoop(toggle).then(() => {\n                    loop = toggle;\n                });\n            },\n        });\n\n        // Source\n        let currentSrc;\n        player.embed\n            .getVideoUrl()\n            .then(value => {\n                currentSrc = value;\n            })\n            .catch(error => {\n                this.debug.warn(error);\n            });\n\n        Object.defineProperty(player.media, 'currentSrc', {\n            get() {\n                return currentSrc;\n            },\n        });\n\n        // Ended\n        Object.defineProperty(player.media, 'ended', {\n            get() {\n                return player.currentTime === player.duration;\n            },\n        });\n\n        // Set aspect ratio based on video size\n        Promise.all([\n            player.embed.getVideoWidth(),\n            player.embed.getVideoHeight(),\n        ]).then(dimensions => {\n            const ratio = utils.getAspectRatio(dimensions[0], dimensions[1]);\n            vimeo.setAspectRatio.call(this, ratio);\n        });\n\n        // Set autopause\n        player.embed.setAutopause(player.config.autopause).then(state => {\n            player.config.autopause = state;\n        });\n\n        // Get title\n        player.embed.getVideoTitle().then(title => {\n            player.config.title = title;\n            ui.setTitle.call(this);\n        });\n\n        // Get current time\n        player.embed.getCurrentTime().then(value => {\n            currentTime = value;\n            utils.dispatchEvent.call(player, player.media, 'timeupdate');\n        });\n\n        // Get duration\n        player.embed.getDuration().then(value => {\n            player.media.duration = value;\n            utils.dispatchEvent.call(player, player.media, 'durationchange');\n        });\n\n        // Get captions\n        player.embed.getTextTracks().then(tracks => {\n            player.media.textTracks = tracks;\n            captions.setup.call(player);\n        });\n\n        player.embed.on('cuechange', data => {\n            let cue = null;\n\n            if (data.cues.length) {\n                cue = utils.stripHTML(data.cues[0].text);\n            }\n\n            captions.setText.call(player, cue);\n        });\n\n        player.embed.on('loaded', () => {\n            if (utils.is.element(player.embed.element) && player.supported.ui) {\n                const frame = player.embed.element;\n\n                // Fix keyboard focus issues\n                // https://github.com/sampotts/plyr/issues/317\n                frame.setAttribute('tabindex', -1);\n            }\n        });\n\n        player.embed.on('play', () => {\n            // Only fire play if paused before\n            if (player.media.paused) {\n                utils.dispatchEvent.call(player, player.media, 'play');\n            }\n            player.media.paused = false;\n            utils.dispatchEvent.call(player, player.media, 'playing');\n        });\n\n        player.embed.on('pause', () => {\n            player.media.paused = true;\n            utils.dispatchEvent.call(player, player.media, 'pause');\n        });\n\n        player.embed.on('timeupdate', data => {\n            player.media.seeking = false;\n            currentTime = data.seconds;\n            utils.dispatchEvent.call(player, player.media, 'timeupdate');\n        });\n\n        player.embed.on('progress', data => {\n            player.media.buffered = data.percent;\n            utils.dispatchEvent.call(player, player.media, 'progress');\n\n            // Check all loaded\n            if (parseInt(data.percent, 10) === 1) {\n                utils.dispatchEvent.call(player, player.media, 'canplaythrough');\n            }\n\n            // Get duration as if we do it before load, it gives an incorrect value\n            // https://github.com/sampotts/plyr/issues/891\n            player.embed.getDuration().then(value => {\n                if (value !== player.media.duration) {\n                    player.media.duration = value;\n                    utils.dispatchEvent.call(player, player.media, 'durationchange');\n                }\n            });\n        });\n\n        player.embed.on('seeked', () => {\n            player.media.seeking = false;\n            utils.dispatchEvent.call(player, player.media, 'seeked');\n            utils.dispatchEvent.call(player, player.media, 'play');\n        });\n\n        player.embed.on('ended', () => {\n            player.media.paused = true;\n            utils.dispatchEvent.call(player, player.media, 'ended');\n        });\n\n        player.embed.on('error', detail => {\n            player.media.error = detail;\n            utils.dispatchEvent.call(player, player.media, 'error');\n        });\n\n        // Rebuild UI\n        setTimeout(() => ui.build.call(player), 0);\n    },\n};\n\nexport default vimeo;\n","// ==========================================================================\n// Plyr Media\n// ==========================================================================\n\nimport support from './support';\nimport utils from './utils';\nimport youtube from './plugins/youtube';\nimport vimeo from './plugins/vimeo';\nimport html5 from './html5';\nimport ui from './ui';\n\n// Sniff out the browser\nconst browser = utils.getBrowser();\n\nconst media = {\n    // Setup media\n    setup() {\n        // If there's no media, bail\n        if (!this.media) {\n            this.debug.warn('No media element found!');\n            return;\n        }\n\n        // Add type class\n        utils.toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true);\n\n        // Add provider class\n        utils.toggleClass(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true);\n\n        // Add video class for embeds\n        // This will require changes if audio embeds are added\n        if (this.isEmbed) {\n            utils.toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\n        }\n\n        if (this.supported.ui) {\n            // Check for picture-in-picture support\n            utils.toggleClass(this.elements.container, this.config.classNames.pip.supported, support.pip && this.isHTML5 && this.isVideo);\n\n            // Check for airplay support\n            utils.toggleClass(this.elements.container, this.config.classNames.airplay.supported, support.airplay && this.isHTML5);\n\n            // If there's no autoplay attribute, assume the video is stopped and add state class\n            utils.toggleClass(this.elements.container, this.config.classNames.stopped, this.config.autoplay);\n\n            // Add iOS class\n            utils.toggleClass(this.elements.container, this.config.classNames.isIos, browser.isIos);\n\n            // Add touch class\n            utils.toggleClass(this.elements.container, this.config.classNames.isTouch, this.touch);\n        }\n\n        // Inject the player wrapper\n        if (this.isVideo) {\n            // Create the wrapper div\n            this.elements.wrapper = utils.createElement('div', {\n                class: this.config.classNames.video,\n            });\n\n            // Wrap the video in a container\n            utils.wrap(this.media, this.elements.wrapper);\n        }\n\n        if (this.isEmbed) {\n            switch (this.provider) {\n                case 'youtube':\n                    youtube.setup.call(this);\n                    break;\n\n                case 'vimeo':\n                    vimeo.setup.call(this);\n                    break;\n\n                default:\n                    break;\n            }\n        } else if (this.isHTML5) {\n            ui.setTitle.call(this);\n\n            html5.extend.call(this);\n        }\n    },\n};\n\nexport default media;\n","// ==========================================================================\n// Plyr source update\n// ==========================================================================\n\nimport { providers } from './types';\nimport utils from './utils';\nimport html5 from './html5';\nimport media from './media';\nimport ui from './ui';\nimport support from './support';\n\nconst source = {\n    // Add elements to HTML5 media (source, tracks, etc)\n    insertElements(type, attributes) {\n        if (utils.is.string(attributes)) {\n            utils.insertElement(type, this.media, {\n                src: attributes,\n            });\n        } else if (utils.is.array(attributes)) {\n            attributes.forEach(attribute => {\n                utils.insertElement(type, this.media, attribute);\n            });\n        }\n    },\n\n    // Update source\n    // Sources are not checked for support so be careful\n    change(input) {\n        if (!utils.is.object(input) || !('sources' in input) || !input.sources.length) {\n            this.debug.warn('Invalid source format');\n            return;\n        }\n\n        // Cancel current network requests\n        html5.cancelRequests.call(this);\n\n        // Destroy instance and re-setup\n        this.destroy.call(\n            this,\n            () => {\n                // Reset quality options\n                this.options.quality = [];\n\n                // Remove elements\n                utils.removeElement(this.media);\n                this.media = null;\n\n                // Reset class name\n                if (utils.is.element(this.elements.container)) {\n                    this.elements.container.removeAttribute('class');\n                }\n\n                // Set the type and provider\n                this.type = input.type;\n                this.provider = !utils.is.empty(input.sources[0].provider) ? input.sources[0].provider : providers.html5;\n\n                // Check for support\n                this.supported = support.check(this.type, this.provider, this.config.playsinline);\n\n                // Create new markup\n                switch (`${this.provider}:${this.type}`) {\n                    case 'html5:video':\n                        this.media = utils.createElement('video');\n                        break;\n\n                    case 'html5:audio':\n                        this.media = utils.createElement('audio');\n                        break;\n\n                    case 'youtube:video':\n                    case 'vimeo:video':\n                        this.media = utils.createElement('div', {\n                            src: input.sources[0].src,\n                        });\n                        break;\n\n                    default:\n                        break;\n                }\n\n                // Inject the new element\n                this.elements.container.appendChild(this.media);\n\n                // Autoplay the new source?\n                if (utils.is.boolean(input.autoplay)) {\n                    this.config.autoplay = input.autoplay;\n                }\n\n                // Set attributes for audio and video\n                if (this.isHTML5) {\n                    if (this.config.crossorigin) {\n                        this.media.setAttribute('crossorigin', '');\n                    }\n                    if (this.config.autoplay) {\n                        this.media.setAttribute('autoplay', '');\n                    }\n                    if ('poster' in input) {\n                        this.media.setAttribute('poster', input.poster);\n                    }\n                    if (this.config.loop.active) {\n                        this.media.setAttribute('loop', '');\n                    }\n                    if (this.config.muted) {\n                        this.media.setAttribute('muted', '');\n                    }\n                    if (this.config.playsinline) {\n                        this.media.setAttribute('playsinline', '');\n                    }\n                }\n\n                // Restore class hook\n                ui.addStyleHook.call(this);\n\n                // Set new sources for html5\n                if (this.isHTML5) {\n                    source.insertElements.call(this, 'source', input.sources);\n                }\n\n                // Set video title\n                this.config.title = input.title;\n\n                // Set up from scratch\n                media.setup.call(this);\n\n                // HTML5 stuff\n                if (this.isHTML5) {\n                    // Setup captions\n                    if ('tracks' in input) {\n                        source.insertElements.call(this, 'track', input.tracks);\n                    }\n\n                    // Load HTML5 sources\n                    this.media.load();\n                }\n\n                // If HTML5 or embed but not fully supported, setupInterface and call ready now\n                if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n                    // Setup interface\n                    ui.build.call(this);\n                }\n\n                // Update the fullscreen support\n                this.fullscreen.update();\n            },\n            true,\n        );\n    },\n};\n\nexport default source;\n","// ==========================================================================\n// Plyr\n// plyr.js v3.2.1\n// https://github.com/sampotts/plyr\n// License: The MIT License (MIT)\n// ==========================================================================\n\nimport { providers, types } from './types';\nimport defaults from './defaults';\nimport support from './support';\nimport utils from './utils';\n\nimport Console from './console';\nimport Fullscreen from './fullscreen';\nimport Listeners from './listeners';\nimport Storage from './storage';\nimport Ads from './plugins/ads';\n\nimport captions from './captions';\nimport controls from './controls';\nimport media from './media';\nimport source from './source';\nimport ui from './ui';\n\n// Private properties\n// TODO: Use a WeakMap for private globals\n// const globals = new WeakMap();\n\n// Plyr instance\nclass Plyr {\n    constructor(target, options) {\n        this.timers = {};\n\n        // State\n        this.ready = false;\n        this.loading = false;\n        this.failed = false;\n\n        // Touch device\n        this.touch = support.touch;\n\n        // Set the media element\n        this.media = target;\n\n        // String selector passed\n        if (utils.is.string(this.media)) {\n            this.media = document.querySelectorAll(this.media);\n        }\n\n        // jQuery, NodeList or Array passed, use first element\n        if ((window.jQuery && this.media instanceof jQuery) || utils.is.nodeList(this.media) || utils.is.array(this.media)) {\n            // eslint-disable-next-line\n            this.media = this.media[0];\n        }\n\n        // Set config\n        this.config = utils.extend(\n            {},\n            defaults,\n            options || {},\n            (() => {\n                try {\n                    return JSON.parse(this.media.getAttribute('data-plyr-config'));\n                } catch (e) {\n                    return {};\n                }\n            })(),\n        );\n\n        // Elements cache\n        this.elements = {\n            container: null,\n            buttons: {},\n            display: {},\n            progress: {},\n            inputs: {},\n            settings: {\n                menu: null,\n                panes: {},\n                tabs: {},\n            },\n            captions: null,\n        };\n\n        // Captions\n        this.captions = {\n            active: null,\n            currentTrack: null,\n        };\n\n        // Fullscreen\n        this.fullscreen = {\n            active: false,\n        };\n\n        // Options\n        this.options = {\n            speed: [],\n            quality: [],\n            captions: [],\n        };\n\n        // Debugging\n        // TODO: move to globals\n        this.debug = new Console(this.config.debug);\n\n        // Log config options and support\n        this.debug.log('Config', this.config);\n        this.debug.log('Support', support);\n\n        // We need an element to setup\n        if (utils.is.nullOrUndefined(this.media) || !utils.is.element(this.media)) {\n            this.debug.error('Setup failed: no suitable element passed');\n            return;\n        }\n\n        // Bail if the element is initialized\n        if (this.media.plyr) {\n            this.debug.warn('Target already setup');\n            return;\n        }\n\n        // Bail if not enabled\n        if (!this.config.enabled) {\n            this.debug.error('Setup failed: disabled by config');\n            return;\n        }\n\n        // Bail if disabled or no basic support\n        // You may want to disable certain UAs etc\n        if (!support.check().api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        // Cache original element state for .destroy()\n        // TODO: Investigate a better solution as I suspect this causes reported double load issues?\n        setTimeout(() => {\n            const clone = this.media.cloneNode(true);\n\n            // Prevent the clone autoplaying\n            if (clone.getAttribute('autoplay')) {\n                clone.pause();\n            }\n\n            this.elements.original = clone;\n        }, 0);\n\n        // Set media type based on tag or data attribute\n        // Supported: video, audio, vimeo, youtube\n        const type = this.media.tagName.toLowerCase();\n\n        // Embed properties\n        let iframe = null;\n        let url = null;\n        let params = null;\n\n        // Different setup based on type\n        switch (type) {\n            case 'div':\n                // Find the frame\n                iframe = this.media.querySelector('iframe');\n\n                // <iframe> type\n                if (utils.is.element(iframe)) {\n                    // Detect provider\n                    url = iframe.getAttribute('src');\n                    this.provider = utils.getProviderByUrl(url);\n\n                    // Rework elements\n                    this.elements.container = this.media;\n                    this.media = iframe;\n\n                    // Reset classname\n                    this.elements.container.className = '';\n\n                    // Get attributes from URL and set config\n                    params = utils.getUrlParams(url);\n                    if (!utils.is.empty(params)) {\n                        const truthy = [\n                            '1',\n                            'true',\n                        ];\n\n                        if (truthy.includes(params.autoplay)) {\n                            this.config.autoplay = true;\n                        }\n                        if (truthy.includes(params.loop)) {\n                            this.config.loop.active = true;\n                        }\n\n                        // TODO: replace fullscreen.iosNative with this playsinline config option\n                        // YouTube requires the playsinline in the URL\n                        if (this.isYouTube) {\n                            this.config.playsinline = truthy.includes(params.playsinline);\n                        } else {\n                            this.config.playsinline = true;\n                        }\n                    }\n                } else {\n                    // <div> with attributes\n                    this.provider = this.media.getAttribute(this.config.attributes.embed.provider);\n\n                    // Remove attribute\n                    this.media.removeAttribute(this.config.attributes.embed.provider);\n                }\n\n                // Unsupported or missing provider\n                if (utils.is.empty(this.provider) || !Object.keys(providers).includes(this.provider)) {\n                    this.debug.error('Setup failed: Invalid provider');\n                    return;\n                }\n\n                // Audio will come later for external providers\n                this.type = types.video;\n\n                break;\n\n            case 'video':\n            case 'audio':\n                this.type = type;\n                this.provider = providers.html5;\n\n                // Get config from attributes\n                if (this.media.hasAttribute('crossorigin')) {\n                    this.config.crossorigin = true;\n                }\n                if (this.media.hasAttribute('autoplay')) {\n                    this.config.autoplay = true;\n                }\n                if (this.media.hasAttribute('playsinline')) {\n                    this.config.playsinline = true;\n                }\n                if (this.media.hasAttribute('muted')) {\n                    this.config.muted = true;\n                }\n                if (this.media.hasAttribute('loop')) {\n                    this.config.loop.active = true;\n                }\n\n                break;\n\n            default:\n                this.debug.error('Setup failed: unsupported type');\n                return;\n        }\n\n        // Check for support again but with type\n        this.supported = support.check(this.type, this.provider, this.config.playsinline);\n\n        // If no support for even API, bail\n        if (!this.supported.api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        // Create listeners\n        this.listeners = new Listeners(this);\n\n        // Setup local storage for user settings\n        this.storage = new Storage(this);\n\n        // Store reference\n        this.media.plyr = this;\n\n        // Wrap media\n        if (!utils.is.element(this.elements.container)) {\n            this.elements.container = utils.createElement('div');\n            utils.wrap(this.media, this.elements.container);\n        }\n\n        // Allow focus to be captured\n        this.elements.container.setAttribute('tabindex', 0);\n\n        // Add style hook\n        ui.addStyleHook.call(this);\n\n        // Setup media\n        media.setup.call(this);\n\n        // Listen for events if debugging\n        if (this.config.debug) {\n            utils.on(this.elements.container, this.config.events.join(' '), event => {\n                this.debug.log(`event: ${event.type}`);\n            });\n        }\n\n        // Setup interface\n        // If embed but not fully supported, build interface now to avoid flash of controls\n        if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n            ui.build.call(this);\n        }\n\n        // Container listeners\n        this.listeners.container();\n\n        // Global listeners\n        this.listeners.global();\n\n        // Setup fullscreen\n        this.fullscreen = new Fullscreen(this);\n\n        // Setup ads if provided\n        this.ads = new Ads(this);\n\n        // Autoplay if required\n        if (this.config.autoplay) {\n            this.play();\n        }\n    }\n\n    // ---------------------------------------\n    // API\n    // ---------------------------------------\n\n    /**\n     * Types and provider helpers\n     */\n    get isHTML5() {\n        return Boolean(this.provider === providers.html5);\n    }\n    get isEmbed() {\n        return Boolean(this.isYouTube || this.isVimeo);\n    }\n    get isYouTube() {\n        return Boolean(this.provider === providers.youtube);\n    }\n    get isVimeo() {\n        return Boolean(this.provider === providers.vimeo);\n    }\n    get isVideo() {\n        return Boolean(this.type === types.video);\n    }\n    get isAudio() {\n        return Boolean(this.type === types.audio);\n    }\n\n    /**\n     * Play the media, or play the advertisement (if they are not blocked)\n     */\n    play() {\n        if (!utils.is.function(this.media.play)) {\n            return null;\n        }\n\n        // If ads are enabled, wait for them first\n        /* if (this.ads.enabled && !this.ads.initialized) {\n            return this.ads.managerPromise.then(() => this.ads.play()).catch(() => this.media.play());\n        } */\n\n        // Return the promise (for HTML5)\n        return this.media.play();\n    }\n\n    /**\n     * Pause the media\n     */\n    pause() {\n        if (!this.playing || !utils.is.function(this.media.pause)) {\n            return;\n        }\n\n        this.media.pause();\n    }\n\n    /**\n     * Get paused state\n     */\n    get paused() {\n        return Boolean(this.media.paused);\n    }\n\n    /**\n     * Get playing state\n     */\n    get playing() {\n        return Boolean(this.ready && !this.paused && !this.ended && (this.isHTML5 ? this.media.readyState > 2 : true));\n    }\n\n    /**\n     * Get ended state\n     */\n    get ended() {\n        return Boolean(this.media.ended);\n    }\n\n    /**\n     * Toggle playback based on current status\n     * @param {boolean} input\n     */\n    togglePlay(input) {\n        // Toggle based on current state if nothing passed\n        const toggle = utils.is.boolean(input) ? input : !this.playing;\n\n        if (toggle) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n\n    /**\n     * Stop playback\n     */\n    stop() {\n        if (this.isHTML5) {\n            this.media.load();\n        } else if (utils.is.function(this.media.stop)) {\n            this.media.stop();\n        }\n    }\n\n    /**\n     * Restart playback\n     */\n    restart() {\n        this.currentTime = 0;\n    }\n\n    /**\n     * Rewind\n     * @param {number} seekTime - how far to rewind in seconds. Defaults to the config.seekTime\n     */\n    rewind(seekTime) {\n        this.currentTime = this.currentTime - (utils.is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Fast forward\n     * @param {number} seekTime - how far to fast forward in seconds. Defaults to the config.seekTime\n     */\n    forward(seekTime) {\n        this.currentTime = this.currentTime + (utils.is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Seek to a time\n     * @param {number} input - where to seek to in seconds. Defaults to 0 (the start)\n     */\n    set currentTime(input) {\n        let targetTime = 0;\n\n        if (utils.is.number(input)) {\n            targetTime = input;\n        }\n\n        // Normalise targetTime\n        if (targetTime < 0) {\n            targetTime = 0;\n        } else if (targetTime > this.duration) {\n            targetTime = this.duration;\n        }\n\n        // Set\n        this.media.currentTime = targetTime;\n\n        // Logging\n        this.debug.log(`Seeking to ${this.currentTime} seconds`);\n    }\n\n    /**\n     * Get current time\n     */\n    get currentTime() {\n        return Number(this.media.currentTime);\n    }\n\n    /**\n     * Get buffered\n     */\n    get buffered() {\n        const { buffered } = this.media;\n\n        // YouTube / Vimeo return a float between 0-1\n        if (utils.is.number(buffered)) {\n            return buffered;\n        }\n\n        // HTML5\n        // TODO: Handle buffered chunks of the media\n        // (i.e. seek to another section buffers only that section)\n        if (buffered && buffered.length && this.duration > 0) {\n            return buffered.end(0) / this.duration;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Get seeking status\n     */\n    get seeking() {\n        return Boolean(this.media.seeking);\n    }\n\n    /**\n     * Get the duration of the current media\n     */\n    get duration() {\n        // Faux duration set via config\n        const fauxDuration = parseFloat(this.config.duration);\n\n        // True duration\n        const realDuration = this.media ? Number(this.media.duration) : 0;\n\n        // If custom duration is funky, use regular duration\n        return !Number.isNaN(fauxDuration) ? fauxDuration : realDuration;\n    }\n\n    /**\n     * Set the player volume\n     * @param {number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\n     */\n    set volume(value) {\n        let volume = value;\n        const max = 1;\n        const min = 0;\n\n        if (utils.is.string(volume)) {\n            volume = Number(volume);\n        }\n\n        // Load volume from storage if no value specified\n        if (!utils.is.number(volume)) {\n            volume = this.storage.get('volume');\n        }\n\n        // Use config if all else fails\n        if (!utils.is.number(volume)) {\n            ({ volume } = this.config);\n        }\n\n        // Maximum is volumeMax\n        if (volume > max) {\n            volume = max;\n        }\n        // Minimum is volumeMin\n        if (volume < min) {\n            volume = min;\n        }\n\n        // Update config\n        this.config.volume = volume;\n\n        // Set the player volume\n        this.media.volume = volume;\n\n        // If muted, and we're increasing volume manually, reset muted state\n        if (!utils.is.empty(value) && this.muted && volume > 0) {\n            this.muted = false;\n        }\n    }\n\n    /**\n     * Get the current player volume\n     */\n    get volume() {\n        return Number(this.media.volume);\n    }\n\n    /**\n     * Increase volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    increaseVolume(step) {\n        const volume = this.media.muted ? 0 : this.volume;\n        this.volume = volume + (utils.is.number(step) ? step : 1);\n    }\n\n    /**\n     * Decrease volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    decreaseVolume(step) {\n        const volume = this.media.muted ? 0 : this.volume;\n        this.volume = volume - (utils.is.number(step) ? step : 1);\n    }\n\n    /**\n     * Set muted state\n     * @param {boolean} mute\n     */\n    set muted(mute) {\n        let toggle = mute;\n\n        // Load muted state from storage\n        if (!utils.is.boolean(toggle)) {\n            toggle = this.storage.get('muted');\n        }\n\n        // Use config if all else fails\n        if (!utils.is.boolean(toggle)) {\n            toggle = this.config.muted;\n        }\n\n        // Update config\n        this.config.muted = toggle;\n\n        // Set mute on the player\n        this.media.muted = toggle;\n    }\n\n    /**\n     * Get current muted state\n     */\n    get muted() {\n        return Boolean(this.media.muted);\n    }\n\n    /**\n     * Check if the media has audio\n     */\n    get hasAudio() {\n        // Assume yes for all non HTML5 (as we can't tell...)\n        if (!this.isHTML5) {\n            return true;\n        }\n\n        if (this.isAudio) {\n            return true;\n        }\n\n        // Get audio tracks\n        return (\n            Boolean(this.media.mozHasAudio) ||\n            Boolean(this.media.webkitAudioDecodedByteCount) ||\n            Boolean(this.media.audioTracks && this.media.audioTracks.length)\n        );\n    }\n\n    /**\n     * Set playback speed\n     * @param {number} speed - the speed of playback (0.5-2.0)\n     */\n    set speed(input) {\n        let speed = null;\n\n        if (utils.is.number(input)) {\n            speed = input;\n        }\n\n        if (!utils.is.number(speed)) {\n            speed = this.storage.get('speed');\n        }\n\n        if (!utils.is.number(speed)) {\n            speed = this.config.speed.selected;\n        }\n\n        // Set min/max\n        if (speed < 0.1) {\n            speed = 0.1;\n        }\n        if (speed > 2.0) {\n            speed = 2.0;\n        }\n\n        if (!this.config.speed.options.includes(speed)) {\n            this.debug.warn(`Unsupported speed (${speed})`);\n            return;\n        }\n\n        // Update config\n        this.config.speed.selected = speed;\n\n        // Set media speed\n        this.media.playbackRate = speed;\n    }\n\n    /**\n     * Get current playback speed\n     */\n    get speed() {\n        return Number(this.media.playbackRate);\n    }\n\n    /**\n     * Set playback quality\n     * Currently HTML5 & YouTube only\n     * @param {number} input - Quality level\n     */\n    set quality(input) {\n        let quality = null;\n\n        if (!utils.is.empty(input)) {\n            quality = Number(input);\n        }\n\n        if (!utils.is.number(quality) || quality === 0) {\n            quality = this.storage.get('quality');\n        }\n\n        if (!utils.is.number(quality)) {\n            quality = this.config.quality.selected;\n        }\n\n        if (!utils.is.number(quality)) {\n            quality = this.config.quality.default;\n        }\n\n        if (!this.options.quality.length) {\n            return;\n        }\n\n        if (!this.options.quality.includes(quality)) {\n            const closest = utils.closest(this.options.quality, quality);\n            this.debug.warn(`Unsupported quality option: ${quality}, using ${closest} instead`);\n            quality = closest;\n        }\n\n        // Update config\n        this.config.quality.selected = quality;\n\n        // Set quality\n        this.media.quality = quality;\n    }\n\n    /**\n     * Get current quality level\n     */\n    get quality() {\n        return this.media.quality;\n    }\n\n    /**\n     * Toggle loop\n     * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\n     * @param {boolean} input - Whether to loop or not\n     */\n    set loop(input) {\n        const toggle = utils.is.boolean(input) ? input : this.config.loop.active;\n        this.config.loop.active = toggle;\n        this.media.loop = toggle;\n\n        // Set default to be a true toggle\n        /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\n\n        switch (type) {\n            case 'start':\n                if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\n                    this.config.loop.end = null;\n                }\n                this.config.loop.start = this.currentTime;\n                // this.config.loop.indicator.start = this.elements.display.played.value;\n                break;\n\n            case 'end':\n                if (this.config.loop.start >= this.currentTime) {\n                    return this;\n                }\n                this.config.loop.end = this.currentTime;\n                // this.config.loop.indicator.end = this.elements.display.played.value;\n                break;\n\n            case 'all':\n                this.config.loop.start = 0;\n                this.config.loop.end = this.duration - 2;\n                this.config.loop.indicator.start = 0;\n                this.config.loop.indicator.end = 100;\n                break;\n\n            case 'toggle':\n                if (this.config.loop.active) {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = null;\n                } else {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = this.duration - 2;\n                }\n                break;\n\n            default:\n                this.config.loop.start = 0;\n                this.config.loop.end = null;\n                break;\n        } */\n    }\n\n    /**\n     * Get current loop state\n     */\n    get loop() {\n        return Boolean(this.media.loop);\n    }\n\n    /**\n     * Set new media source\n     * @param {object} input - The new source object (see docs)\n     */\n    set source(input) {\n        source.change.call(this, input);\n    }\n\n    /**\n     * Get current source\n     */\n    get source() {\n        return this.media.currentSrc;\n    }\n\n    /**\n     * Set the poster image for a HTML5 video\n     * @param {input} - the URL for the new poster image\n     */\n    set poster(input) {\n        if (!this.isHTML5 || !this.isVideo) {\n            this.debug.warn('Poster can only be set on HTML5 video');\n            return;\n        }\n\n        if (utils.is.string(input)) {\n            this.media.setAttribute('poster', input);\n        }\n    }\n\n    /**\n     * Get the current poster image\n     */\n    get poster() {\n        if (!this.isHTML5 || !this.isVideo) {\n            return null;\n        }\n\n        return this.media.getAttribute('poster');\n    }\n\n    /**\n     * Set the autoplay state\n     * @param {boolean} input - Whether to autoplay or not\n     */\n    set autoplay(input) {\n        const toggle = utils.is.boolean(input) ? input : this.config.autoplay;\n        this.config.autoplay = toggle;\n    }\n\n    /**\n     * Get the current autoplay state\n     */\n    get autoplay() {\n        return Boolean(this.config.autoplay);\n    }\n\n    /**\n     * Toggle captions\n     * @param {boolean} input - Whether to enable captions\n     */\n    toggleCaptions(input) {\n        // If there's no full support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // If the method is called without parameter, toggle based on current value\n        const show = utils.is.boolean(input) ? input : !this.elements.container.classList.contains(this.config.classNames.captions.active);\n\n        // Nothing to change...\n        if (this.captions.active === show) {\n            return;\n        }\n\n        // Set global\n        this.captions.active = show;\n\n        // Toggle state\n        utils.toggleState(this.elements.buttons.captions, this.captions.active);\n\n        // Add class hook\n        utils.toggleClass(this.elements.container, this.config.classNames.captions.active, this.captions.active);\n\n        // Trigger an event\n        utils.dispatchEvent.call(this, this.media, this.captions.active ? 'captionsenabled' : 'captionsdisabled');\n    }\n\n    /**\n     * Set the captions language\n     * @param {string} - Two character ISO language code (e.g. EN, FR, PT, etc)\n     */\n    set language(input) {\n        // Nothing specified\n        if (!utils.is.string(input)) {\n            return;\n        }\n\n        // If empty string is passed, assume disable captions\n        if (utils.is.empty(input)) {\n            this.toggleCaptions(false);\n            return;\n        }\n\n        // Normalize\n        const language = input.toLowerCase();\n\n        // Check for support\n        if (!this.options.captions.includes(language)) {\n            this.debug.warn(`Unsupported language option: ${language}`);\n            return;\n        }\n\n        // Ensure captions are enabled\n        this.toggleCaptions(true);\n\n        // Enabled only\n        if (language === 'enabled') {\n            return;\n        }\n\n        // If nothing to change, bail\n        if (this.language === language) {\n            return;\n        }\n\n        // Update config\n        this.captions.language = language;\n\n        // Clear caption\n        captions.setText.call(this, null);\n\n        // Update captions\n        captions.setLanguage.call(this);\n\n        // Trigger an event\n        utils.dispatchEvent.call(this, this.media, 'languagechange');\n    }\n\n    /**\n     * Get the current captions language\n     */\n    get language() {\n        return this.captions.language;\n    }\n\n    /**\n     * Toggle picture-in-picture playback on WebKit/MacOS\n     * TODO: update player with state, support, enabled\n     * TODO: detect outside changes\n     */\n    set pip(input) {\n        const states = {\n            pip: 'picture-in-picture',\n            inline: 'inline',\n        };\n\n        // Bail if no support\n        if (!support.pip) {\n            return;\n        }\n\n        // Toggle based on current state if not passed\n        const toggle = utils.is.boolean(input) ? input : this.pip === states.inline;\n\n        // Toggle based on current state\n        this.media.webkitSetPresentationMode(toggle ? states.pip : states.inline);\n    }\n\n    /**\n     * Get the current picture-in-picture state\n     */\n    get pip() {\n        if (!support.pip) {\n            return null;\n        }\n\n        return this.media.webkitPresentationMode;\n    }\n\n    /**\n     * Trigger the airplay dialog\n     * TODO: update player with state, support, enabled\n     */\n    airplay() {\n        // Show dialog if supported\n        if (support.airplay) {\n            this.media.webkitShowPlaybackTargetPicker();\n        }\n    }\n\n    /**\n     * Toggle the player controls\n     * @param {boolean} toggle - Whether to show the controls\n     */\n    toggleControls(toggle) {\n        // We need controls of course...\n        if (!utils.is.element(this.elements.controls)) {\n            return;\n        }\n\n        // Don't hide if no UI support or it's audio\n        if (!this.supported.ui || this.isAudio) {\n            return;\n        }\n\n        let delay = 0;\n        let show = toggle;\n        let isEnterFullscreen = false;\n\n        // Get toggle state if not set\n        if (!utils.is.boolean(toggle)) {\n            if (utils.is.event(toggle)) {\n                // Is the enter fullscreen event\n                isEnterFullscreen = toggle.type === 'enterfullscreen';\n\n                // Events that show the controls\n                const showEvents = [\n                    'touchstart',\n                    'touchmove',\n                    'mouseenter',\n                    'mousemove',\n                    'focusin',\n                ];\n\n                // Events that delay hiding\n                const delayEvents = [\n                    'touchmove',\n                    'touchend',\n                    'mousemove',\n                ];\n\n                // Whether to show controls\n                show = showEvents.includes(toggle.type);\n\n                // Delay hiding on move events\n                if (delayEvents.includes(toggle.type)) {\n                    delay = 2000;\n                }\n\n                // Delay a little more for keyboard users\n                if (!this.touch && toggle.type === 'focusin') {\n                    delay = 3000;\n                    utils.toggleClass(this.elements.controls, this.config.classNames.noTransition, true);\n                }\n            } else {\n                show = utils.hasClass(this.elements.container, this.config.classNames.hideControls);\n            }\n        }\n\n        // Clear timer on every call\n        clearTimeout(this.timers.controls);\n\n        // If the mouse is not over the controls, set a timeout to hide them\n        if (show || this.paused || this.loading) {\n            // Check if controls toggled\n            const toggled = utils.toggleClass(this.elements.container, this.config.classNames.hideControls, false);\n\n            // Trigger event\n            if (toggled) {\n                utils.dispatchEvent.call(this, this.media, 'controlsshown');\n            }\n\n            // Always show controls when paused or if touch\n            if (this.paused || this.loading) {\n                return;\n            }\n\n            // Delay for hiding on touch\n            if (this.touch) {\n                delay = 3000;\n            }\n        }\n\n        // If toggle is false or if we're playing (regardless of toggle),\n        // then set the timer to hide the controls\n        if (!show || this.playing) {\n            this.timers.controls = setTimeout(() => {\n                // We need controls of course...\n                if (!utils.is.element(this.elements.controls)) {\n                    return;\n                }\n\n                // If the mouse is over the controls (and not entering fullscreen), bail\n                if ((this.elements.controls.pressed || this.elements.controls.hover) && !isEnterFullscreen) {\n                    return;\n                }\n\n                // Restore transition behaviour\n                if (!utils.hasClass(this.elements.container, this.config.classNames.hideControls)) {\n                    utils.toggleClass(this.elements.controls, this.config.classNames.noTransition, false);\n                }\n\n                // Check if controls toggled\n                const toggled = utils.toggleClass(this.elements.container, this.config.classNames.hideControls, true);\n\n                // Trigger event and close menu\n                if (toggled) {\n                    utils.dispatchEvent.call(this, this.media, 'controlshidden');\n\n                    if (this.config.controls.includes('settings') && !utils.is.empty(this.config.settings)) {\n                        controls.toggleMenu.call(this, false);\n                    }\n                }\n            }, delay);\n        }\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    on(event, callback) {\n        utils.on(this.elements.container, event, callback);\n    }\n\n    /**\n     * Remove event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    off(event, callback) {\n        utils.off(this.elements.container, event, callback);\n    }\n\n    /**\n     * Destroy an instance\n     * Event listeners are removed when elements are removed\n     * http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n     * @param {function} callback - Callback for when destroy is complete\n     * @param {boolean} soft - Whether it's a soft destroy (for source changes etc)\n     */\n    destroy(callback, soft = false) {\n        if (!this.ready) {\n            return;\n        }\n\n        const done = () => {\n            // Reset overflow (incase destroyed while in fullscreen)\n            document.body.style.overflow = '';\n\n            // GC for embed\n            this.embed = null;\n\n            // If it's a soft destroy, make minimal changes\n            if (soft) {\n                if (Object.keys(this.elements).length) {\n                    // Remove elements\n                    utils.removeElement(this.elements.buttons.play);\n                    utils.removeElement(this.elements.captions);\n                    utils.removeElement(this.elements.controls);\n                    utils.removeElement(this.elements.wrapper);\n\n                    // Clear for GC\n                    this.elements.buttons.play = null;\n                    this.elements.captions = null;\n                    this.elements.controls = null;\n                    this.elements.wrapper = null;\n                }\n\n                // Callback\n                if (utils.is.function(callback)) {\n                    callback();\n                }\n            } else {\n                // Unbind listeners\n                this.listeners.clear();\n\n                // Replace the container with the original element provided\n                utils.replaceElement(this.elements.original, this.elements.container);\n\n                // Event\n                utils.dispatchEvent.call(this, this.elements.original, 'destroyed', true);\n\n                // Callback\n                if (utils.is.function(callback)) {\n                    callback.call(this.elements.original);\n                }\n\n                // Reset state\n                this.ready = false;\n\n                // Clear for garbage collection\n                setTimeout(() => {\n                    this.elements = null;\n                    this.media = null;\n                }, 200);\n            }\n        };\n\n        // Stop playback\n        this.stop();\n\n        // Type specific stuff\n        switch (`${this.provider}:${this.type}`) {\n            case 'html5:video':\n            case 'html5:audio':\n                // Clear timeout\n                clearTimeout(this.timers.loading);\n\n                // Restore native video controls\n                ui.toggleNativeControls.call(this, true);\n\n                // Clean up\n                done();\n\n                break;\n\n            case 'youtube:video':\n                // Clear timers\n                clearInterval(this.timers.buffering);\n                clearInterval(this.timers.playing);\n\n                // Destroy YouTube API\n                if (this.embed !== null && utils.is.function(this.embed.destroy)) {\n                    this.embed.destroy();\n                }\n\n                // Clean up\n                done();\n\n                break;\n\n            case 'vimeo:video':\n                // Destroy Vimeo API\n                // then clean up (wait, to prevent postmessage errors)\n                if (this.embed !== null) {\n                    this.embed.unload().then(done);\n                }\n\n                // Vimeo does not always return\n                setTimeout(done, 200);\n\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Check for support for a mime type (HTML5 only)\n     * @param {string} type - Mime type\n     */\n    supports(type) {\n        return support.mime.call(this, type);\n    }\n\n    /**\n     * Check for support\n     * @param {string} type - Player type (audio/video)\n     * @param {string} provider - Provider (html5/youtube/vimeo)\n     * @param {bool} inline - Where player has `playsinline` sttribute\n     */\n    static supported(type, provider, inline) {\n        return support.check(type, provider, inline);\n    }\n\n    /**\n     * Load an SVG sprite into the page\n     * @param {string} url - URL for the SVG sprite\n     * @param {string} [id] - Unique ID\n     */\n    static loadSprite(url, id) {\n        return utils.loadSprite(url, id);\n    }\n}\n\nexport default Plyr;\n"]}