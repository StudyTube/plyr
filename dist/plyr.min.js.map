{"version":3,"sources":["src/js/types.js","src/js/defaults.js","src/js/support.js","node_modules/loadjs/dist/loadjs.umd.js","src/js/utils.js","src/js/console.js","src/js/fullscreen.js","src/js/i18n.js","src/js/captions.js","src/js/ui.js","src/js/html5.js","src/js/controls.js","src/js/listeners.js","src/js/storage.js","src/js/plugins/ads.js","src/js/plugins/youtube.js","src/js/plugins/vimeo.js","src/js/media.js","src/js/source.js","src/js/plyr.js"],"names":["providers","html5","youtube","vimeo","types","audio","video","defaults","enabled","title","debug","autoplay","autopause","seekTime","volume","muted","duration","displayDuration","invertTime","toggleInvert","ratio","clickToPlay","hideControls","showPosterOnEnd","disableContextMenu","loadSprite","iconPrefix","iconUrl","blankVideo","quality","default","options","loop","active","speed","selected","keyboard","focused","global","tooltips","controls","seek","captions","language","navigator","userLanguage","split","fallbackLanguage","fullscreen","fallback","iosNative","storage","key","settings","i18n","restart","rewind","play","pause","fastForward","played","buffered","currentTime","mute","unmute","enableCaptions","disableCaptions","enterFullscreen","exitFullscreen","frameTitle","normal","start","end","all","reset","disabled","advertisement","urls","api","googleIMA","listeners","pip","airplay","events","selectors","editable","container","wrapper","labels","buttons","inputs","display","buffer","progress","menu","classNames","embed","ads","control","type","provider","stopped","playing","loading","error","hover","tooltip","cues","hidden","isIos","isTouch","uiSupported","noTransition","value","badge","open","supported","tabFocus","attributes","id","keys","google","publisherId","range","module","exports","devnull","bundleIdCache","bundleResultCache","bundleCallbackQueue","publish","bundleId","pathsNotFound","q","length","splice","executeCallbacks","args","depsNotFound","call","success","loadFile","path","callbackFn","numTries","isLegacyIECss","e","doc","document","async","maxTries","numRetries","beforeCallbackFn","before","pathStripped","replace","test","createElement","rel","href","relList","as","src","undefined","onload","onerror","onbeforeload","ev","result","sheet","cssText","x","code","defaultPrevented","head","appendChild","loadjs","paths","arg1","arg2","trim","loadFn","resolve","reject","fn","i","numWaiting","push","loadFiles","returnPromise","Promise","ready","deps","bundleIds","r","subscribe","done","isDefined","factory","utils","is","plyr","input","this","instanceof","window","Plyr","object","getConstructor","Object","number","Number","isNaN","string","String","boolean","Boolean","function","Function","array","nullOrUndefined","Array","isArray","weakMap","WeakMap","nodeList","NodeList","element","Element","textNode","Text","event","Event","cue","TextTrackCue","VTTCue","track","TextTrack","kind","url","empty","constructor","getBrowser","isIE","documentMode","isWebkit","documentElement","style","userAgent","isIPhone","platform","fetch","responseType","arguments","request","XMLHttpRequest","addEventListener","JSON","parse","responseText","response","Error","statusText","send","loadScript","hasId","exists","querySelectorAll","toggleHidden","setAttribute","support","cached","localStorage","getItem","data","injectSprite","content","then","setItem","stringify","catch","innerHTML","body","insertBefore","childNodes","generateId","prefix","Math","floor","random","wrap","elements","targets","from","reverse","forEach","index","child","cloneNode","parent","parentNode","sibling","nextSibling","text","setAttributes","textContent","insertAfter","target","insertElement","removeElement","removeChild","emptyElement","lastChild","replaceElement","newChild","oldChild","replaceChild","entries","_ref","_ref2","slicedToArray","getAttributesFromSelector","sel","existingAttributes","existing","s","selector","className","parts","charAt","class","toggleClass","toggle","contains","classList","hasClass","removeAttribute","matches","includes","getElements","getElement","querySelector","findElements","config","seekTooltip","warn","toggleNativeControls","getFocusElement","activeElement","trapFocus","focusable","first","last","trap","keyCode","shiftKey","focus","preventDefault","on","off","toggleListener","callback","passive","capture","Node","passiveListeners","dispatchEvent","bubbles","detail","CustomEvent","assign","toggleState","pressed","getAttribute","state","getPercentage","current","max","toFixed","getHours","parseInt","getMinutes","getSeconds","formatTime","time","displayHours","inverted","format","slice","hours","mins","secs","replaceAll","find","RegExp","toString","toTitleCase","toUpperCase","substr","toLowerCase","toPascalCase","toCamelCase","extend","_len","sources","_key","source","shift","defineProperty","apply","concat","toConsumableArray","dedupe","filter","item","indexOf","closest","reduce","prev","curr","abs","getProviderByUrl","parseYouTubeId","match","$2","parseVimeoId","parseUrl","parser","getUrlParams","search","startsWith","params","hash","_hash$split","_hash$split2","val","decodeURIComponent","buildUrlParams","map","encodeURIComponent","join","stripHTML","fragment","createDocumentFragment","firstChild","innerText","getAspectRatio","width","height","getRatio","w","h","transitionEndEvent","WebkitTransition","MozTransition","OTransition","transition","repaint","setTimeout","offsetHeight","check","playsinline","ui","browser","canPlayInline","rangeInput","webkitSetPresentationMode","WebKitPlaybackTargetAvailabilityEvent","mime","media","isHTML5","canPlayType","isVideo","isAudio","textTracks","get","touch","transitions","reducedMotion","matchMedia","noop","Console","classCallCheck","console","log","prototype","bind","onChange","button","player","toggleFallback","scrollPosition","scrollX","y","scrollY","scrollTo","overflow","Fullscreen","_this","name","update","native","webkitEnterFullscreen","requestFullscreen","webkitExitFullscreen","action","cancelFullScreen","exit","enter","fullscreenElement","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","some","pre","{seektime}","{title}","setup","tracks","getTracks","stored","trackLanguages","isYouTube","setCaptionsMenu","URL","hostname","location","protocol","blob","createObjectURL","setLanguage","show","setCue","mode","currentTrack","getCurrentTrack","activeCues","isVimeo","enableTextTrack","_this2","getLabel","label","setText","getCueAsHTML","caption","addStyleHook","build","inject","updateVolume","timeUpdate","checkPlaying","setTitle","isEmbed","iframe","paused","toggleControls","checkLoading","clearTimeout","timers","checkFailed","_this3","failed","networkState","setRange","updateRangeFill","setProgress","getElementsByTagName","nodeValue","updateProgress","updateTimeDisplay","invert","seeking","durationUpdate","hasDuration","updateSeekTooltip","getSources","getQualityOptions","sizes","set","load","cancelRequests","setProperty","getIconUrl","absolute","svg4everybody","createIcon","iconPath","icon","createElementNS","role","use","setAttributeNS","createLabel","attr","createBadge","createButton","buttonType","labelPressed","iconPressed","createRange","for","min","step","autocomplete","aria-labelledby","aria-valuemin","aria-valuemax","aria-valuenow","createProgress","aria-hidden","suffix","createTime","createMenuItem","list","checked","radio","faux","insertAdjacentHTML","percent","clientRect","getBoundingClientRect","visible","_toggle","pageX","left","parseFloat","toggleTab","setting","tab","tabs","pane","panes","setQualityMenu","checkMenu","sort","a","b","sorting","getBadge","updateSetting","lang","unshift","setSpeedMenu","_this4","values","toggleMenu","form","isMenuItem","isButton","stopPropagation","getTabSize","clone","position","opacity","scrollWidth","scrollHeight","showTab","getElementById","size","restore","propertyName","create","_this5","aria-haspopup","aria-controls","aria-expanded","aria-labelled-by","tabindex","inner","home","back","_this6","seektime","Listeners","lastKey","handleKey","firstTouch","which","repeat","altKey","ctrlKey","metaKey","togglePlay","increaseVolume","decreaseVolume","forward","toggleCaptions","hasAudio","initialized","managerPromise","ended","inputEvent","proxy","defaultHandler","customHandlerKey","customHandler","returned","hasCustomHandler","webkitDirectionInvertedFromDevice","direction","deltaY","deltaX","Storage","store","json","removeItem","Ads","displayContainer","manager","loader","cuePoints","safetyTimer","countdownTimer","ima","trigger","startSafetyTimer","clearSafetyTimer","setupIMA","setVpaidMode","ImaSdkSettings","VpaidMode","ENABLED","setLocale","AdDisplayContainer","requestAds","AdsLoader","AdsManagerLoadedEvent","Type","ADS_MANAGER_LOADED","onAdsManagerLoaded","AdErrorEvent","AD_ERROR","onAdError","AdsRequest","adTagUrl","tagUrl","linearAdSlotWidth","offsetWidth","linearAdSlotHeight","nonLinearAdSlotWidth","nonLinearAdSlotHeight","forceNonLinearFullSlot","clearInterval","setInterval","getRemainingTime","AdsRenderingSettings","restoreCustomPlaybackStateOnAdBreakComplete","enablePreloading","getAdsManager","getCuePoints","cuePoint","seekElement","cuePercentage","setVolume","AdEvent","onAdEvent","_this7","ad","getAd","LOADED","pollCountdown","isLinear","ALL_ADS_COMPLETED","loadAds","CONTENT_PAUSE_REQUESTED","pauseContent","CONTENT_RESUME_REQUESTED","resumeContent","STARTED","MIDPOINT","COMPLETE","IMPRESSION","CLICK","cancel","_this8","contentComplete","seekedTime","discardAdBreak","resize","ViewMode","NORMAL","_this9","initialize","init","adError","zIndex","_this10","destroy","_this11","handlers","handler","_this12","AV_PUBLISHERID","AV_CHANNELID","AV_URL","cb","Date","now","AV_WIDTH","AV_HEIGHT","AV_CDIM2","base","mapQualityUnit","setAspectRatio","YT","Player","onYouTubeReadyCallbacks","onYouTubeIframeAPIReady","getTitle","videoId","getVideoData","items","snippet","paddingBottom","currentId","playerVars","showinfo","iv_load_policy","modestbranding","disablekb","widget_referrer","cc_load_policy","cc_lang_pref","onError","message","onPlaybackQualityChange","onPlaybackRateChange","instance","playbackRate","getPlaybackRate","onReady","playVideo","pauseVideo","stop","stopVideo","getDuration","getCurrentTime","seekTo","setPlaybackRate","getPlaybackQuality","setPlaybackQuality","getVideoUrl","getAvailablePlaybackRates","buffering","getVideoLoadedFraction","lastBuffered","onStateChange","Vimeo","padding","offset","transform","byline","portrait","transparent","gesture","disableTextTrack","setCurrentTime","setLoop","currentSrc","getVideoWidth","getVideoHeight","dimensions","setAutopause","getVideoTitle","getTextTracks","seconds","insertElements","attribute","change","crossorigin","poster","jQuery","original","tagName","truthy","hasAttribute","webkitShowPlaybackTargetPicker","delay","isEnterFullscreen","soft","clear","unload","readyState","targetTime","fauxDuration","realDuration","mozHasAudio","webkitAudioDecodedByteCount","audioTracks","states","webkitPresentationMode","inline"],"mappings":"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","file":"plyr.min.js","sourcesContent":["// ==========================================================================\n// Plyr supported types and providers\n// ==========================================================================\n\nexport const providers = {\n    html5: 'html5',\n    youtube: 'youtube',\n    vimeo: 'vimeo',\n};\n\nexport const types = {\n    audio: 'audio',\n    video: 'video',\n};\n\nexport default { providers, types };\n","// ==========================================================================\n// Plyr default config\n// ==========================================================================\n\nconst defaults = {\n    // Disable\n    enabled: true,\n\n    // Custom media title\n    title: '',\n\n    // Logging to console\n    debug: false,\n\n    // Auto play (if supported)\n    autoplay: false,\n\n    // Only allow one media playing at once (vimeo only)\n    autopause: true,\n\n    // Default time to skip when rewind/fast forward\n    seekTime: 10,\n\n    // Default volume\n    volume: 1,\n    muted: false,\n\n    // Pass a custom duration\n    duration: null,\n\n    // Display the media duration on load in the current time position\n    // If you have opted to display both duration and currentTime, this is ignored\n    displayDuration: true,\n\n    // Invert the current time to be a countdown\n    invertTime: true,\n\n    // Clicking the currentTime inverts it's value to show time left rather than elapsed\n    toggleInvert: true,\n\n    // Aspect ratio (for embeds)\n    ratio: '16:9',\n\n    // Click video container to play/pause\n    clickToPlay: true,\n\n    // Auto hide the controls\n    hideControls: true,\n\n    // Revert to poster on finish (HTML5 - will cause reload)\n    showPosterOnEnd: false,\n\n    // Disable the standard context menu\n    disableContextMenu: true,\n\n    // Sprite (for icons)\n    loadSprite: true,\n    iconPrefix: 'plyr',\n    iconUrl: 'https://cdn.plyr.io/3.2.1/plyr.svg',\n\n    // Blank video (used to prevent errors on source change)\n    blankVideo: 'https://cdn.plyr.io/static/blank.mp4',\n\n    // Quality default\n    quality: {\n        default: 576,\n        options: [\n            4320,\n            2880,\n            2160,\n            1440,\n            1080,\n            720,\n            576,\n            480,\n            360,\n            240,\n            'default', // YouTube's \"auto\"\n        ],\n    },\n\n    // Set loops\n    loop: {\n        active: false,\n        // start: null,\n        // end: null,\n    },\n\n    // Speed default and options to display\n    speed: {\n        selected: 1,\n        options: [\n            0.5,\n            0.75,\n            1,\n            1.25,\n            1.5,\n            1.75,\n            2,\n        ],\n    },\n\n    // Keyboard shortcut settings\n    keyboard: {\n        focused: true,\n        global: false,\n    },\n\n    // Display tooltips\n    tooltips: {\n        controls: false,\n        seek: true,\n    },\n\n    // Captions settings\n    captions: {\n        active: false,\n        language: (navigator.language || navigator.userLanguage).split('-')[0],\n        fallbackLanguage: 'en'\n    },\n\n    // Fullscreen settings\n    fullscreen: {\n        enabled: true, // Allow fullscreen?\n        fallback: true, // Fallback for vintage browsers\n        iosNative: false, // Use the native fullscreen in iOS (disables custom controls)\n    },\n\n    // Local storage\n    storage: {\n        enabled: true,\n        key: 'plyr',\n    },\n\n    // Default controls\n    controls: [\n        'play-large',\n        // 'restart',\n        // 'rewind',\n        'play',\n        // 'fast-forward',\n        'progress',\n        'current-time',\n        'mute',\n        'volume',\n        'captions',\n        'settings',\n        'pip',\n        'airplay',\n        'fullscreen',\n    ],\n    settings: [\n        'captions',\n        'quality',\n        'speed',\n    ],\n\n    // Localisation\n    i18n: {\n        restart: 'Restart',\n        rewind: 'Rewind {seektime} secs',\n        play: 'Play',\n        pause: 'Pause',\n        fastForward: 'Forward {seektime} secs',\n        seek: 'Seek',\n        played: 'Played',\n        buffered: 'Buffered',\n        currentTime: 'Current time',\n        duration: 'Duration',\n        volume: 'Volume',\n        mute: 'Mute',\n        unmute: 'Unmute',\n        enableCaptions: 'Enable captions',\n        disableCaptions: 'Disable captions',\n        enterFullscreen: 'Enter fullscreen',\n        exitFullscreen: 'Exit fullscreen',\n        frameTitle: 'Player for {title}',\n        captions: 'Captions',\n        settings: 'Settings',\n        speed: 'Speed',\n        normal: 'Normal',\n        quality: 'Quality',\n        loop: 'Loop',\n        start: 'Start',\n        end: 'End',\n        all: 'All',\n        reset: 'Reset',\n        disabled: 'Disabled',\n        enabled: 'Enabled',\n        advertisement: 'Ad',\n    },\n\n    // URLs\n    urls: {\n        vimeo: {\n            api: 'https://player.vimeo.com/api/player.js',\n        },\n        youtube: {\n            api: 'https://www.youtube.com/iframe_api',\n        },\n        googleIMA: {\n            api: 'https://imasdk.googleapis.com/js/sdkloader/ima3.js',\n        },\n    },\n\n    // Custom control listeners\n    listeners: {\n        seek: null,\n        play: null,\n        pause: null,\n        restart: null,\n        rewind: null,\n        fastForward: null,\n        mute: null,\n        volume: null,\n        captions: null,\n        fullscreen: null,\n        pip: null,\n        airplay: null,\n        speed: null,\n        quality: null,\n        loop: null,\n        language: null,\n    },\n\n    // Events to watch and bubble\n    events: [\n        // Events to watch on HTML5 media elements and bubble\n        // https://developer.mozilla.org/en/docs/Web/Guide/Events/Media_events\n        'ended',\n        'progress',\n        'stalled',\n        'playing',\n        'waiting',\n        'canplay',\n        'canplaythrough',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'timeupdate',\n        'volumechange',\n        'play',\n        'pause',\n        'error',\n        'seeking',\n        'seeked',\n        'emptied',\n        'ratechange',\n        'cuechange',\n\n        // Custom events\n        'enterfullscreen',\n        'exitfullscreen',\n        'captionsenabled',\n        'captionsdisabled',\n        'languagechange',\n        'controlshidden',\n        'controlsshown',\n        'ready',\n\n        // YouTube\n        'statechange',\n        'qualitychange',\n        'qualityrequested',\n\n        // Ads\n        'adsloaded',\n        'adscontentpause',\n        'adscontentresume',\n        'adstarted',\n        'adsmidpoint',\n        'adscomplete',\n        'adsallcomplete',\n        'adsimpression',\n        'adsclick',\n    ],\n\n    // Selectors\n    // Change these to match your template if using custom HTML\n    selectors: {\n        editable: 'input, textarea, select, [contenteditable]',\n        container: '.plyr',\n        controls: {\n            container: null,\n            wrapper: '.plyr__controls',\n        },\n        labels: '[data-plyr]',\n        buttons: {\n            play: '[data-plyr=\"play\"]',\n            pause: '[data-plyr=\"pause\"]',\n            restart: '[data-plyr=\"restart\"]',\n            rewind: '[data-plyr=\"rewind\"]',\n            fastForward: '[data-plyr=\"fast-forward\"]',\n            mute: '[data-plyr=\"mute\"]',\n            captions: '[data-plyr=\"captions\"]',\n            fullscreen: '[data-plyr=\"fullscreen\"]',\n            pip: '[data-plyr=\"pip\"]',\n            airplay: '[data-plyr=\"airplay\"]',\n            settings: '[data-plyr=\"settings\"]',\n            loop: '[data-plyr=\"loop\"]',\n        },\n        inputs: {\n            seek: '[data-plyr=\"seek\"]',\n            volume: '[data-plyr=\"volume\"]',\n            speed: '[data-plyr=\"speed\"]',\n            language: '[data-plyr=\"language\"]',\n            quality: '[data-plyr=\"quality\"]',\n        },\n        display: {\n            currentTime: '.plyr__time--current',\n            duration: '.plyr__time--duration',\n            buffer: '.plyr__progress--buffer',\n            played: '.plyr__progress--played',\n            loop: '.plyr__progress--loop',\n            volume: '.plyr__volume--display',\n        },\n        progress: '.plyr__progress',\n        captions: '.plyr__captions',\n        menu: {\n            quality: '.js-plyr__menu__list--quality',\n        },\n    },\n\n    // Class hooks added to the player in different states\n    classNames: {\n        video: 'plyr__video-wrapper',\n        embed: 'plyr__video-embed',\n        ads: 'plyr__ads',\n        control: 'plyr__control',\n        type: 'plyr--{0}',\n        provider: 'plyr--{0}',\n        stopped: 'plyr--stopped',\n        playing: 'plyr--playing',\n        loading: 'plyr--loading',\n        error: 'plyr--has-error',\n        hover: 'plyr--hover',\n        tooltip: 'plyr__tooltip',\n        cues: 'plyr__cues',\n        hidden: 'plyr__sr-only',\n        hideControls: 'plyr--hide-controls',\n        isIos: 'plyr--is-ios',\n        isTouch: 'plyr--is-touch',\n        uiSupported: 'plyr--full-ui',\n        noTransition: 'plyr--no-transition',\n        menu: {\n            value: 'plyr__menu__value',\n            badge: 'plyr__badge',\n            open: 'plyr--menu-open',\n        },\n        captions: {\n            enabled: 'plyr--captions-enabled',\n            active: 'plyr--captions-active',\n        },\n        fullscreen: {\n            enabled: 'plyr--fullscreen-enabled',\n            fallback: 'plyr--fullscreen-fallback',\n        },\n        pip: {\n            supported: 'plyr--pip-supported',\n            active: 'plyr--pip-active',\n        },\n        airplay: {\n            supported: 'plyr--airplay-supported',\n            active: 'plyr--airplay-active',\n        },\n        tabFocus: 'plyr__tab-focus',\n    },\n\n    // Embed attributes\n    attributes: {\n        embed: {\n            provider: 'data-plyr-provider',\n            id: 'data-plyr-embed-id',\n        },\n    },\n\n    // API keys\n    keys: {\n        google: null,\n    },\n\n    // Advertisements plugin\n    // Register for an account here: http://vi.ai/publisher-video-monetization/?aid=plyrio\n    ads: {\n        enabled: false,\n        publisherId: '',\n    },\n};\n\nexport default defaults;\n","// ==========================================================================\n// Plyr support checks\n// ==========================================================================\n\nimport utils from './utils';\n\n// Check for feature support\nconst support = {\n    // Basic support\n    audio: 'canPlayType' in document.createElement('audio'),\n    video: 'canPlayType' in document.createElement('video'),\n\n    // Check for support\n    // Basic functionality vs full UI\n    check(type, provider, playsinline) {\n        let api = false;\n        let ui = false;\n        const browser = utils.getBrowser();\n        const canPlayInline = browser.isIPhone && playsinline && support.playsinline;\n\n        switch (`${provider}:${type}`) {\n            case 'html5:video':\n                api = support.video;\n                ui = api && support.rangeInput && (!browser.isIPhone || canPlayInline);\n                break;\n\n            case 'html5:audio':\n                api = support.audio;\n                ui = api && support.rangeInput;\n                break;\n\n            case 'youtube:video':\n            case 'vimeo:video':\n                api = true;\n                ui = support.rangeInput && (!browser.isIPhone || canPlayInline);\n                break;\n\n            default:\n                api = support.audio && support.video;\n                ui = api && support.rangeInput;\n        }\n\n        return {\n            api,\n            ui,\n        };\n    },\n\n    // Picture-in-picture support\n    // Safari only currently\n    pip: (() => {\n        const browser = utils.getBrowser();\n        return !browser.isIPhone && utils.is.function(utils.createElement('video').webkitSetPresentationMode);\n    })(),\n\n    // Airplay support\n    // Safari only currently\n    airplay: utils.is.function(window.WebKitPlaybackTargetAvailabilityEvent),\n\n    // Inline playback support\n    // https://webkit.org/blog/6784/new-video-policies-for-ios/\n    playsinline: 'playsInline' in document.createElement('video'),\n\n    // Check for mime type support against a player instance\n    // Credits: http://diveintohtml5.info/everything.html\n    // Related: http://www.leanbackplayer.com/test/h5mt.html\n    mime(type) {\n        const { media } = this;\n\n        try {\n            // Bail if no checking function\n            if (!this.isHTML5 || !utils.is.function(media.canPlayType)) {\n                return false;\n            }\n\n            // Check directly if codecs specified\n            if (type.includes('codecs=')) {\n                return media.canPlayType(type).replace(/no/, '');\n            }\n\n            // Type specific checks\n            if (this.isVideo) {\n                switch (type) {\n                    case 'video/webm':\n                        return media.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/no/, '');\n\n                    case 'video/mp4':\n                        return media.canPlayType('video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"').replace(/no/, '');\n\n                    case 'video/ogg':\n                        return media.canPlayType('video/ogg; codecs=\"theora\"').replace(/no/, '');\n\n                    default:\n                        return false;\n                }\n            } else if (this.isAudio) {\n                switch (type) {\n                    case 'audio/mpeg':\n                        return media.canPlayType('audio/mpeg;').replace(/no/, '');\n\n                    case 'audio/ogg':\n                        return media.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/no/, '');\n\n                    case 'audio/wav':\n                        return media.canPlayType('audio/wav; codecs=\"1\"').replace(/no/, '');\n\n                    default:\n                        return false;\n                }\n            }\n        } catch (e) {\n            return false;\n        }\n\n        // If we got this far, we're stuffed\n        return false;\n    },\n\n    // Check for textTracks support\n    textTracks: 'textTracks' in document.createElement('video'),\n\n    // Check for passive event listener support\n    // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n    // https://www.youtube.com/watch?v=NPM6172J22g\n    passiveListeners: (() => {\n        // Test via a getter in the options object to see if the passive property is accessed\n        let supported = false;\n        try {\n            const options = Object.defineProperty({}, 'passive', {\n                get() {\n                    supported = true;\n                    return null;\n                },\n            });\n            window.addEventListener('test', null, options);\n        } catch (e) {\n            // Do nothing\n        }\n\n        return supported;\n    })(),\n\n    // <input type=\"range\"> Sliders\n    rangeInput: (() => {\n        const range = document.createElement('input');\n        range.type = 'range';\n        return range.type === 'range';\n    })(),\n\n    // Touch\n    // NOTE: Remember a device can be mouse + touch enabled so we check on first touch event\n    touch: 'ontouchstart' in document.documentElement,\n\n    // Detect transitions support\n    transitions: utils.transitionEndEvent !== false,\n\n    // Reduced motion iOS & MacOS setting\n    // https://webkit.org/blog/7551/responsive-design-for-motion/\n    reducedMotion: 'matchMedia' in window && window.matchMedia('(prefers-reduced-motion)').matches,\n};\n\nexport default support;\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathStripped = path.replace(/^(css|img)!/, ''),\n      isLegacyIECss,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(path)) {\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped;\n\n    // tag IE9+\n    isLegacyIECss = 'hideFocus' in e;\n\n    // use preload in IE Edge (to detect load errors)\n    if (isLegacyIECss && e.relList) {\n      isLegacyIECss = 0;\n      e.rel = 'preload';\n      e.as = 'style';\n    }\n  } else if (/(^img!|\\.(png|gif|jpg|svg)$)/.test(path)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = path;\n    e.async = async === undefined ? true : async;\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // treat empty stylesheets as failures to get around lack of onerror\n    // support in IE9-11\n    if (isLegacyIECss) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText` (unless error is Code:18 SecurityError)\n        if (x.code != 18) result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    } else if (e.rel == 'preload' && e.as == 'style') {\n      // activate preloaded stylesheets\n      return e.rel = 'stylesheet'; // jshint ignore:line\n    }\n    \n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function|Object)} [arg1] - The (1) bundleId or (2) success\n *   callback or (3) object literal with success/error arguments, numRetries,\n *   etc.\n * @param {(Function|Object)} [arg2] - The (1) success callback or (2) object\n *   literal with success/error arguments, numRetries, etc.\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  function loadFn(resolve, reject) {\n    loadFiles(paths, function (pathsNotFound) {\n      // execute callbacks\n      executeCallbacks(args, pathsNotFound);\n      \n      // resolve Promise\n      if (resolve) {\n        executeCallbacks({success: resolve, error: reject}, pathsNotFound);\n      }\n\n      // publish bundle load event\n      publish(bundleId, pathsNotFound);\n    }, args);\n  }\n  \n  if (args.returnPromise) return new Promise(loadFn);\n  else loadFn();\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n","// ==========================================================================\n// Plyr utils\n// ==========================================================================\n\nimport loadjs from 'loadjs';\n\nimport support from './support';\nimport { providers } from './types';\n\nconst utils = {\n    // Check variable types\n    is: {\n        plyr(input) {\n            return this.instanceof(input, window.Plyr);\n        },\n        object(input) {\n            return this.getConstructor(input) === Object;\n        },\n        number(input) {\n            return this.getConstructor(input) === Number && !Number.isNaN(input);\n        },\n        string(input) {\n            return this.getConstructor(input) === String;\n        },\n        boolean(input) {\n            return this.getConstructor(input) === Boolean;\n        },\n        function(input) {\n            return this.getConstructor(input) === Function;\n        },\n        array(input) {\n            return !this.nullOrUndefined(input) && Array.isArray(input);\n        },\n        weakMap(input) {\n            return this.instanceof(input, window.WeakMap);\n        },\n        nodeList(input) {\n            return this.instanceof(input, window.NodeList);\n        },\n        element(input) {\n            return this.instanceof(input, window.Element);\n        },\n        textNode(input) {\n            return this.getConstructor(input) === Text;\n        },\n        event(input) {\n            return this.instanceof(input, window.Event);\n        },\n        cue(input) {\n            return this.instanceof(input, window.TextTrackCue) || this.instanceof(input, window.VTTCue);\n        },\n        track(input) {\n            return this.instanceof(input, TextTrack) || (!this.nullOrUndefined(input) && this.string(input.kind));\n        },\n        url(input) {\n            return !this.nullOrUndefined(input) && /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-/]))?/.test(input);\n        },\n        nullOrUndefined(input) {\n            return input === null || typeof input === 'undefined';\n        },\n        empty(input) {\n            return (\n                this.nullOrUndefined(input) ||\n                ((this.string(input) || this.array(input) || this.nodeList(input)) && !input.length) ||\n                (this.object(input) && !Object.keys(input).length)\n            );\n        },\n        instanceof(input, constructor) {\n            return Boolean(input && constructor && input instanceof constructor);\n        },\n        getConstructor(input) {\n            return !this.nullOrUndefined(input) ? input.constructor : null;\n        },\n    },\n\n    // Unfortunately, due to mixed support, UA sniffing is required\n    getBrowser() {\n        return {\n            isIE: /* @cc_on!@ */ false || !!document.documentMode,\n            isWebkit: 'WebkitAppearance' in document.documentElement.style && !/Edge/.test(navigator.userAgent),\n            isIPhone: /(iPhone|iPod)/gi.test(navigator.platform),\n            isIos: /(iPad|iPhone|iPod)/gi.test(navigator.platform),\n        };\n    },\n\n    // Fetch wrapper\n    // Using XHR to avoid issues with older browsers\n    fetch(url, responseType = 'text') {\n        return new Promise((resolve, reject) => {\n            try {\n                const request = new XMLHttpRequest();\n\n                // Check for CORS support\n                if (!('withCredentials' in request)) {\n                    return;\n                }\n\n                request.addEventListener('load', () => {\n                    if (responseType === 'text') {\n                        try {\n                            resolve(JSON.parse(request.responseText));\n                        } catch (e) {\n                            resolve(request.responseText);\n                        }\n                    } else {\n                        resolve(request.response);\n                    }\n                });\n\n                request.addEventListener('error', () => {\n                    throw new Error(request.statusText);\n                });\n\n                request.open('GET', url, true);\n\n                // Set the required response type\n                request.responseType = responseType;\n\n                request.send();\n            } catch (e) {\n                reject(e);\n            }\n        });\n    },\n\n    // Load an external script\n    loadScript(url) {\n        return new Promise((resolve, reject) => {\n            loadjs(url, {\n                success: resolve,\n                error: reject,\n            });\n        });\n    },\n\n    // Load an external SVG sprite\n    loadSprite(url, id) {\n        if (!utils.is.string(url)) {\n            return;\n        }\n\n        const prefix = 'cache-';\n        const hasId = utils.is.string(id);\n        let isCached = false;\n\n        const exists = () => document.querySelectorAll(`#${id}`).length;\n\n        function injectSprite(data) {\n            // Check again incase of race condition\n            if (hasId && exists()) {\n                return;\n            }\n\n            // Inject content\n            this.innerHTML = data;\n\n            // Inject the SVG to the body\n            document.body.insertBefore(this, document.body.childNodes[0]);\n        }\n\n        // Only load once if ID set\n        if (!hasId || !exists()) {\n            // Create container\n            const container = document.createElement('div');\n            utils.toggleHidden(container, true);\n\n            if (hasId) {\n                container.setAttribute('id', id);\n            }\n\n            // Check in cache\n            if (support.storage) {\n                const cached = window.localStorage.getItem(prefix + id);\n                isCached = cached !== null;\n\n                if (isCached) {\n                    const data = JSON.parse(cached);\n                    injectSprite.call(container, data.content);\n                    return;\n                }\n            }\n\n            // Get the sprite\n            utils\n                .fetch(url)\n                .then(result => {\n                    if (utils.is.empty(result)) {\n                        return;\n                    }\n\n                    if (support.storage) {\n                        window.localStorage.setItem(\n                            prefix + id,\n                            JSON.stringify({\n                                content: result,\n                            }),\n                        );\n                    }\n\n                    injectSprite.call(container, result);\n                })\n                .catch(() => {});\n        }\n    },\n\n    // Generate a random ID\n    generateId(prefix) {\n        return `${prefix}-${Math.floor(Math.random() * 10000)}`;\n    },\n\n    // Wrap an element\n    wrap(elements, wrapper) {\n        // Convert `elements` to an array, if necessary.\n        const targets = elements.length ? elements : [elements];\n\n        // Loops backwards to prevent having to clone the wrapper on the\n        // first element (see `child` below).\n        Array.from(targets)\n            .reverse()\n            .forEach((element, index) => {\n                const child = index > 0 ? wrapper.cloneNode(true) : wrapper;\n\n                // Cache the current parent and sibling.\n                const parent = element.parentNode;\n                const sibling = element.nextSibling;\n\n                // Wrap the element (is automatically removed from its current\n                // parent).\n                child.appendChild(element);\n\n                // If the element had a sibling, insert the wrapper before\n                // the sibling to maintain the HTML structure; otherwise, just\n                // append it to the parent.\n                if (sibling) {\n                    parent.insertBefore(child, sibling);\n                } else {\n                    parent.appendChild(child);\n                }\n            });\n    },\n\n    // Create a DocumentFragment\n    createElement(type, attributes, text) {\n        // Create a new <element>\n        const element = document.createElement(type);\n\n        // Set all passed attributes\n        if (utils.is.object(attributes)) {\n            utils.setAttributes(element, attributes);\n        }\n\n        // Add text node\n        if (utils.is.string(text)) {\n            element.textContent = text;\n        }\n\n        // Return built element\n        return element;\n    },\n\n    // Inaert an element after another\n    insertAfter(element, target) {\n        target.parentNode.insertBefore(element, target.nextSibling);\n    },\n\n    // Insert a DocumentFragment\n    insertElement(type, parent, attributes, text) {\n        // Inject the new <element>\n        parent.appendChild(utils.createElement(type, attributes, text));\n    },\n\n    // Remove an element\n    removeElement(element) {\n        if (!utils.is.element(element) || !utils.is.element(element.parentNode)) {\n            return;\n        }\n\n        if (utils.is.nodeList(element) || utils.is.array(element)) {\n            Array.from(element).forEach(utils.removeElement);\n            return;\n        }\n\n        element.parentNode.removeChild(element);\n    },\n\n    // Remove all child elements\n    emptyElement(element) {\n        let { length } = element.childNodes;\n\n        while (length > 0) {\n            element.removeChild(element.lastChild);\n            length -= 1;\n        }\n    },\n\n    // Replace element\n    replaceElement(newChild, oldChild) {\n        if (!utils.is.element(oldChild) || !utils.is.element(oldChild.parentNode) || !utils.is.element(newChild)) {\n            return null;\n        }\n\n        oldChild.parentNode.replaceChild(newChild, oldChild);\n\n        return newChild;\n    },\n\n    // Set attributes\n    setAttributes(element, attributes) {\n        if (!utils.is.element(element) || utils.is.empty(attributes)) {\n            return;\n        }\n\n        Object.entries(attributes).forEach(([\n            key,\n            value,\n        ]) => {\n            element.setAttribute(key, value);\n        });\n    },\n\n    // Get an attribute object from a string selector\n    getAttributesFromSelector(sel, existingAttributes) {\n        // For example:\n        // '.test' to { class: 'test' }\n        // '#test' to { id: 'test' }\n        // '[data-test=\"test\"]' to { 'data-test': 'test' }\n\n        if (!utils.is.string(sel) || utils.is.empty(sel)) {\n            return {};\n        }\n\n        const attributes = {};\n        const existing = existingAttributes;\n\n        sel.split(',').forEach(s => {\n            // Remove whitespace\n            const selector = s.trim();\n            const className = selector.replace('.', '');\n            const stripped = selector.replace(/[[\\]]/g, '');\n\n            // Get the parts and value\n            const parts = stripped.split('=');\n            const key = parts[0];\n            const value = parts.length > 1 ? parts[1].replace(/[\"']/g, '') : '';\n\n            // Get the first character\n            const start = selector.charAt(0);\n\n            switch (start) {\n                case '.':\n                    // Add to existing classname\n                    if (utils.is.object(existing) && utils.is.string(existing.class)) {\n                        existing.class += ` ${className}`;\n                    }\n\n                    attributes.class = className;\n                    break;\n\n                case '#':\n                    // ID selector\n                    attributes.id = selector.replace('#', '');\n                    break;\n\n                case '[':\n                    // Attribute selector\n                    attributes[key] = value;\n\n                    break;\n\n                default:\n                    break;\n            }\n        });\n\n        return attributes;\n    },\n\n    // Toggle class on an element\n    toggleClass(element, className, toggle) {\n        if (utils.is.element(element)) {\n            const contains = element.classList.contains(className);\n\n            element.classList[toggle ? 'add' : 'remove'](className);\n\n            return (toggle && !contains) || (!toggle && contains);\n        }\n\n        return null;\n    },\n\n    // Has class name\n    hasClass(element, className) {\n        return utils.is.element(element) && element.classList.contains(className);\n    },\n\n    // Toggle hidden attribute on an element\n    toggleHidden(element, toggle) {\n        if (!utils.is.element(element)) {\n            return;\n        }\n\n        if (toggle) {\n            element.setAttribute('hidden', '');\n        } else {\n            element.removeAttribute('hidden');\n        }\n    },\n\n    // Element matches selector\n    matches(element, selector) {\n        const prototype = { Element };\n\n        function match() {\n            return Array.from(document.querySelectorAll(selector)).includes(this);\n        }\n\n        const matches = prototype.matches || prototype.webkitMatchesSelector || prototype.mozMatchesSelector || prototype.msMatchesSelector || match;\n\n        return matches.call(element, selector);\n    },\n\n    // Find all elements\n    getElements(selector) {\n        return this.elements.container.querySelectorAll(selector);\n    },\n\n    // Find a single element\n    getElement(selector) {\n        return this.elements.container.querySelector(selector);\n    },\n\n    // Find the UI controls and store references in custom controls\n    // TODO: Allow settings menus with custom controls\n    findElements() {\n        try {\n            this.elements.controls = utils.getElement.call(this, this.config.selectors.controls.wrapper);\n\n            // Buttons\n            this.elements.buttons = {\n                play: utils.getElements.call(this, this.config.selectors.buttons.play),\n                pause: utils.getElement.call(this, this.config.selectors.buttons.pause),\n                restart: utils.getElement.call(this, this.config.selectors.buttons.restart),\n                rewind: utils.getElement.call(this, this.config.selectors.buttons.rewind),\n                fastForward: utils.getElement.call(this, this.config.selectors.buttons.fastForward),\n                mute: utils.getElement.call(this, this.config.selectors.buttons.mute),\n                pip: utils.getElement.call(this, this.config.selectors.buttons.pip),\n                airplay: utils.getElement.call(this, this.config.selectors.buttons.airplay),\n                settings: utils.getElement.call(this, this.config.selectors.buttons.settings),\n                captions: utils.getElement.call(this, this.config.selectors.buttons.captions),\n                fullscreen: utils.getElement.call(this, this.config.selectors.buttons.fullscreen),\n            };\n\n            // Progress\n            this.elements.progress = utils.getElement.call(this, this.config.selectors.progress);\n\n            // Inputs\n            this.elements.inputs = {\n                seek: utils.getElement.call(this, this.config.selectors.inputs.seek),\n                volume: utils.getElement.call(this, this.config.selectors.inputs.volume),\n            };\n\n            // Display\n            this.elements.display = {\n                buffer: utils.getElement.call(this, this.config.selectors.display.buffer),\n                duration: utils.getElement.call(this, this.config.selectors.display.duration),\n                currentTime: utils.getElement.call(this, this.config.selectors.display.currentTime),\n            };\n\n            // Seek tooltip\n            if (utils.is.element(this.elements.progress)) {\n                this.elements.display.seekTooltip = this.elements.progress.querySelector(`.${this.config.classNames.tooltip}`);\n            }\n\n            return true;\n        } catch (error) {\n            // Log it\n            this.debug.warn('It looks like there is a problem with your custom controls HTML', error);\n\n            // Restore native video controls\n            this.toggleNativeControls(true);\n\n            return false;\n        }\n    },\n\n    // Get the focused element\n    getFocusElement() {\n        let focused = document.activeElement;\n\n        if (!focused || focused === document.body) {\n            focused = null;\n        } else {\n            focused = document.querySelector(':focus');\n        }\n\n        return focused;\n    },\n\n    // Trap focus inside container\n    trapFocus(element = null, toggle = false) {\n        if (!utils.is.element(element)) {\n            return;\n        }\n\n        const focusable = utils.getElements.call(this, 'button:not(:disabled), input:not(:disabled), [tabindex]');\n        const first = focusable[0];\n        const last = focusable[focusable.length - 1];\n\n        const trap = event => {\n            // Bail if not tab key or not fullscreen\n            if (event.key !== 'Tab' || event.keyCode !== 9) {\n                return;\n            }\n\n            // Get the current focused element\n            const focused = utils.getFocusElement();\n\n            if (focused === last && !event.shiftKey) {\n                // Move focus to first element that can be tabbed if Shift isn't used\n                first.focus();\n                event.preventDefault();\n            } else if (focused === first && event.shiftKey) {\n                // Move focus to last element that can be tabbed if Shift is used\n                last.focus();\n                event.preventDefault();\n            }\n        };\n\n        if (toggle) {\n            utils.on(this.elements.container, 'keydown', trap, false);\n        } else {\n            utils.off(this.elements.container, 'keydown', trap, false);\n        }\n    },\n\n    // Toggle event listener\n    toggleListener(elements, event, callback, toggle = false, passive = true, capture = false) {\n        // Bail if no elemetns, event, or callback\n        if (utils.is.empty(elements) || utils.is.empty(event) || !utils.is.function(callback)) {\n            return;\n        }\n\n        // If a nodelist is passed, call itself on each node\n        if (utils.is.nodeList(elements) || utils.is.array(elements)) {\n            // Create listener for each node\n            Array.from(elements).forEach(element => {\n                if (element instanceof Node) {\n                    utils.toggleListener.call(null, element, event, callback, toggle, passive, capture);\n                }\n            });\n\n            return;\n        }\n\n        // Allow multiple events\n        const events = event.split(' ');\n\n        // Build options\n        // Default to just the capture boolean for browsers with no passive listener support\n        let options = capture;\n\n        // If passive events listeners are supported\n        if (support.passiveListeners) {\n            options = {\n                // Whether the listener can be passive (i.e. default never prevented)\n                passive,\n                // Whether the listener is a capturing listener or not\n                capture,\n            };\n        }\n\n        // If a single node is passed, bind the event listener\n        events.forEach(type => {\n            elements[toggle ? 'addEventListener' : 'removeEventListener'](type, callback, options);\n        });\n    },\n\n    // Bind event handler\n    on(element, events = '', callback, passive = true, capture = false) {\n        utils.toggleListener(element, events, callback, true, passive, capture);\n    },\n\n    // Unbind event handler\n    off(element, events = '', callback, passive = true, capture = false) {\n        utils.toggleListener(element, events, callback, false, passive, capture);\n    },\n\n    // Trigger event\n    dispatchEvent(element, type = '', bubbles = false, detail = {}) {\n        // Bail if no element\n        if (!utils.is.element(element) || utils.is.empty(type)) {\n            return;\n        }\n\n        // Create and dispatch the event\n        const event = new CustomEvent(type, {\n            bubbles,\n            detail: Object.assign({}, detail, {\n                plyr: utils.is.plyr(this) ? this : null,\n            }),\n        });\n\n        // Dispatch the event\n        element.dispatchEvent(event);\n    },\n\n    // Toggle aria-pressed state on a toggle button\n    // http://www.ssbbartgroup.com/blog/how-not-to-misuse-aria-states-properties-and-roles\n    toggleState(element, input) {\n        // If multiple elements passed\n        if (utils.is.array(element) || utils.is.nodeList(element)) {\n            Array.from(element).forEach(target => utils.toggleState(target, input));\n            return;\n        }\n\n        // Bail if no target\n        if (!utils.is.element(element)) {\n            return;\n        }\n\n        // Get state\n        const pressed = element.getAttribute('aria-pressed') === 'true';\n        const state = utils.is.boolean(input) ? input : !pressed;\n\n        // Set the attribute on target\n        element.setAttribute('aria-pressed', state);\n    },\n\n    // Get percentage\n    getPercentage(current, max) {\n        if (current === 0 || max === 0 || Number.isNaN(current) || Number.isNaN(max)) {\n            return 0;\n        }\n\n        return (current / max * 100).toFixed(2);\n    },\n\n    // Time helpers\n    getHours(value) {\n        return parseInt((value / 60 / 60) % 60, 10);\n    },\n    getMinutes(value) {\n        return parseInt((value / 60) % 60, 10);\n    },\n    getSeconds(value) {\n        return parseInt(value % 60, 10);\n    },\n\n    // Format time to UI friendly string\n    formatTime(time = 0, displayHours = false, inverted = false) {\n        // Bail if the value isn't a number\n        if (!utils.is.number(time)) {\n            return this.formatTime(null, displayHours, inverted);\n        }\n\n        // Format time component to add leading zero\n        const format = value => `0${value}`.slice(-2);\n\n        // Breakdown to hours, mins, secs\n        let hours = this.getHours(time);\n        const mins = this.getMinutes(time);\n        const secs = this.getSeconds(time);\n\n        // Do we need to display hours?\n        if (displayHours || hours > 0) {\n            hours = `${hours}:`;\n        } else {\n            hours = '';\n        }\n\n        // Render\n        return `${inverted ? '-' : ''}${hours}${format(mins)}:${format(secs)}`;\n    },\n\n    // Replace all occurances of a string in a string\n    replaceAll(input = '', find = '', replace = '') {\n        return input.replace(new RegExp(find.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g, '\\\\$1'), 'g'), replace.toString());\n    },\n\n    // Convert to title case\n    toTitleCase(input = '') {\n        return input.toString().replace(/\\w\\S*/g, text => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase());\n    },\n\n    // Convert string to pascalCase\n    toPascalCase(input = '') {\n        let string = input.toString();\n\n        // Convert kebab case\n        string = utils.replaceAll(string, '-', ' ');\n\n        // Convert snake case\n        string = utils.replaceAll(string, '_', ' ');\n\n        // Convert to title case\n        string = utils.toTitleCase(string);\n\n        // Convert to pascal case\n        return utils.replaceAll(string, ' ', '');\n    },\n\n    // Convert string to pascalCase\n    toCamelCase(input = '') {\n        let string = input.toString();\n\n        // Convert to pascal case\n        string = utils.toPascalCase(string);\n\n        // Convert first character to lowercase\n        return string.charAt(0).toLowerCase() + string.slice(1);\n    },\n\n    // Deep extend destination object with N more objects\n    extend(target = {}, ...sources) {\n        if (!sources.length) {\n            return target;\n        }\n\n        const source = sources.shift();\n\n        if (!utils.is.object(source)) {\n            return target;\n        }\n\n        Object.keys(source).forEach(key => {\n            if (utils.is.object(source[key])) {\n                if (!Object.keys(target).includes(key)) {\n                    Object.assign(target, { [key]: {} });\n                }\n\n                utils.extend(target[key], source[key]);\n            } else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        });\n\n        return utils.extend(target, ...sources);\n    },\n\n    // Remove duplicates in an array\n    dedupe(array) {\n        if (!utils.is.array(array)) {\n            return array;\n        }\n\n        return array.filter((item, index) => array.indexOf(item) === index);\n    },\n\n    // Get the closest value in an array\n    closest(array, value) {\n        if (!utils.is.array(array) || !array.length) {\n            return null;\n        }\n\n        return array.reduce((prev, curr) => Math.abs(curr - value) < Math.abs(prev - value) ? curr : prev);\n    },\n\n    // Get the provider for a given URL\n    getProviderByUrl(url) {\n        // YouTube\n        if (/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+$/.test(url)) {\n            return providers.youtube;\n        }\n\n        // Vimeo\n        if (/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{8,}(?=\\b|\\/)/.test(url)) {\n            return providers.vimeo;\n        }\n\n        return null;\n    },\n\n    // Parse YouTube ID from URL\n    parseYouTubeId(url) {\n        if (utils.is.empty(url)) {\n            return null;\n        }\n\n        const regex = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n        return url.match(regex) ? RegExp.$2 : url;\n    },\n\n    // Parse Vimeo ID from URL\n    parseVimeoId(url) {\n        if (utils.is.empty(url)) {\n            return null;\n        }\n\n        if (utils.is.number(Number(url))) {\n            return url;\n        }\n\n        const regex = /^.*(vimeo.com\\/|video\\/)(\\d+).*/;\n        return url.match(regex) ? RegExp.$2 : url;\n    },\n\n    // Convert a URL to a location object\n    parseUrl(url) {\n        const parser = document.createElement('a');\n        parser.href = url;\n        return parser;\n    },\n\n    // Get URL query parameters\n    getUrlParams(input) {\n        let search = input;\n\n        // Parse URL if needed\n        if (input.startsWith('http://') || input.startsWith('https://')) {\n            ({ search } = this.parseUrl(input));\n        }\n\n        if (this.is.empty(search)) {\n            return null;\n        }\n\n        const hashes = search.slice(search.indexOf('?') + 1).split('&');\n\n        return hashes.reduce((params, hash) => {\n            const [\n                key,\n                val,\n            ] = hash.split('=');\n\n            return Object.assign(params, { [key]: decodeURIComponent(val) });\n        }, {});\n    },\n\n    // Convert object to URL parameters\n    buildUrlParams(input) {\n        if (!utils.is.object(input)) {\n            return '';\n        }\n\n        return Object.keys(input)\n            .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(input[key])}`)\n            .join('&');\n    },\n\n    // Remove HTML from a string\n    stripHTML(source) {\n        const fragment = document.createDocumentFragment();\n        const element = document.createElement('div');\n        fragment.appendChild(element);\n        element.innerHTML = source;\n        return fragment.firstChild.innerText;\n    },\n\n    // Get aspect ratio for dimensions\n    getAspectRatio(width, height) {\n        const getRatio = (w, h) => (h === 0 ? w : getRatio(h, w % h));\n        const ratio = getRatio(width, height);\n        return `${width / ratio}:${height / ratio}`;\n    },\n\n    // Get the transition end event\n    get transitionEndEvent() {\n        const element = document.createElement('span');\n\n        const events = {\n            WebkitTransition: 'webkitTransitionEnd',\n            MozTransition: 'transitionend',\n            OTransition: 'oTransitionEnd otransitionend',\n            transition: 'transitionend',\n        };\n\n        const type = Object.keys(events).find(event => element.style[event] !== undefined);\n\n        return utils.is.string(type) ? events[type] : false;\n    },\n\n    // Force repaint of element\n    repaint(element) {\n        setTimeout(() => {\n            utils.toggleHidden(element, true);\n            element.offsetHeight; // eslint-disable-line\n            utils.toggleHidden(element, false);\n        }, 0);\n    },\n};\n\nexport default utils;\n","// ==========================================================================\n// Console wrapper\n// ==========================================================================\n\nconst noop = () => {};\n\nexport default class Console {\n    constructor(enabled = false) {\n        this.enabled = window.console && enabled;\n\n        if (this.enabled) {\n            this.log('Debugging enabled');\n        }\n    }\n\n    get log() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.log, console) : noop;\n    }\n    get warn() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.warn, console) : noop;\n    }\n    get error() {\n        // eslint-disable-next-line no-console\n        return this.enabled ? Function.prototype.bind.call(console.error, console) : noop;\n    }\n}\n","// ==========================================================================\n// Fullscreen wrapper\n// https://developer.mozilla.org/en-US/docs/Web/API/Fullscreen_API#prefixing\n// ==========================================================================\n\nimport utils from './utils';\n\nconst browser = utils.getBrowser();\n\nfunction onChange() {\n    if (!this.enabled) {\n        return;\n    }\n\n    // Update toggle button\n    const button = this.player.elements.buttons.fullscreen;\n    if (utils.is.element(button)) {\n        utils.toggleState(button, this.active);\n    }\n\n    // Trigger an event\n    utils.dispatchEvent(this.target, this.active ? 'enterfullscreen' : 'exitfullscreen', true);\n\n    // Trap focus in container\n    if (!browser.isIos) {\n        utils.trapFocus.call(this.player, this.target, this.active);\n    }\n}\n\nfunction toggleFallback(toggle = false) {\n    // Store or restore scroll position\n    if (toggle) {\n        this.scrollPosition = {\n            x: window.scrollX || 0,\n            y: window.scrollY || 0,\n        };\n    } else {\n        window.scrollTo(this.scrollPosition.x, this.scrollPosition.y);\n    }\n\n    // Toggle scroll\n    document.body.style.overflow = toggle ? 'hidden' : '';\n\n    // Toggle class hook\n    utils.toggleClass(this.target, this.player.config.classNames.fullscreen.fallback, toggle);\n\n    // Toggle button and fire events\n    onChange.call(this);\n}\n\nclass Fullscreen {\n    constructor(player) {\n        // Keep reference to parent\n        this.player = player;\n\n        // Get prefix\n        this.prefix = Fullscreen.prefix;\n        this.name = Fullscreen.name;\n\n        // Scroll position\n        this.scrollPosition = { x: 0, y: 0 };\n\n        // Register event listeners\n        // Handle event (incase user presses escape etc)\n        utils.on(document, this.prefix === 'ms' ? 'MSFullscreenChange' : `${this.prefix}fullscreenchange`, () => {\n            // TODO: Filter for target??\n            onChange.call(this);\n        });\n\n        // Fullscreen toggle on double click\n        utils.on(this.player.elements.container, 'dblclick', event => {\n            // Ignore double click in controls\n            if (this.player.elements.controls.contains(event.target)) {\n                return;\n            }\n\n            this.toggle();\n        });\n\n        // Update the UI\n        this.update();\n    }\n\n    // Determine if native supported\n    static get native() {\n        return !!(document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled);\n    }\n\n    // Get the prefix for handlers\n    static get prefix() {\n        // No prefix\n        if (utils.is.function(document.exitFullscreen)) {\n            return '';\n        }\n\n        // Check for fullscreen support by vendor prefix\n        let value = '';\n        const prefixes = [\n            'webkit',\n            'moz',\n            'ms',\n        ];\n\n        prefixes.some(pre => {\n            if (utils.is.function(document[`${pre}ExitFullscreen`]) || utils.is.function(document[`${pre}CancelFullScreen`])) {\n                value = pre;\n                return true;\n            }\n\n            return false;\n        });\n\n        return value;\n    }\n\n    static get name() {\n        return this.prefix === 'moz' ? 'FullScreen' : 'Fullscreen';\n    }\n\n    // Determine if fullscreen is enabled\n    get enabled() {\n        return (\n            (Fullscreen.native || this.player.config.fullscreen.fallback) &&\n            this.player.config.fullscreen.enabled &&\n            this.player.supported.ui &&\n            this.player.isVideo\n        );\n    }\n\n    // Get active state\n    get active() {\n        if (!this.enabled) {\n            return false;\n        }\n\n        // Fallback using classname\n        if (!Fullscreen.native) {\n            return utils.hasClass(this.target, this.player.config.classNames.fullscreen.fallback);\n        }\n\n        const element = !this.prefix ? document.fullscreenElement : document[`${this.prefix}${this.name}Element`];\n\n        return element === this.target;\n    }\n\n    // Get target element\n    get target() {\n        return browser.isIos && this.player.config.fullscreen.iosNative ? this.player.media : this.player.elements.container;\n    }\n\n    // Update UI\n    update() {\n        if (this.enabled) {\n            this.player.debug.log(`${Fullscreen.native ? 'Native' : 'Fallback'} fullscreen enabled`);\n        } else {\n            this.player.debug.log('Fullscreen not supported and fallback disabled');\n        }\n\n        // Add styling hook to show button\n        utils.toggleClass(this.player.elements.container, this.player.config.classNames.fullscreen.enabled, this.enabled);\n    }\n\n    // Make an element fullscreen\n    enter() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen doesn't need the request step\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            if (this.player.playing) {\n                this.target.webkitEnterFullscreen();\n            }\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, true);\n        } else if (!this.prefix) {\n            this.target.requestFullscreen();\n        } else if (!utils.is.empty(this.prefix)) {\n            this.target[`${this.prefix}Request${this.name}`]();\n        }\n    }\n\n    // Bail from fullscreen\n    exit() {\n        if (!this.enabled) {\n            return;\n        }\n\n        // iOS native fullscreen\n        if (browser.isIos && this.player.config.fullscreen.iosNative) {\n            this.target.webkitExitFullscreen();\n            this.player.play();\n        } else if (!Fullscreen.native) {\n            toggleFallback.call(this, false);\n        } else if (!this.prefix) {\n            (document.cancelFullScreen || document.exitFullscreen).call(document);\n        } else if (!utils.is.empty(this.prefix)) {\n            const action = this.prefix === 'moz' ? 'Cancel' : 'Exit';\n            document[`${this.prefix}${action}${this.name}`]();\n        }\n    }\n\n    // Toggle state\n    toggle() {\n        if (!this.active) {\n            this.enter();\n        } else {\n            this.exit();\n        }\n    }\n}\n\nexport default Fullscreen;\n","// ==========================================================================\n// Plyr internationalization\n// ==========================================================================\n\nimport utils from './utils';\n\nconst i18n = {\n    get(key = '', config = {}) {\n        if (utils.is.empty(key) || utils.is.empty(config) || !Object.keys(config.i18n).includes(key)) {\n            return '';\n        }\n\n        let string = config.i18n[key];\n\n        const replace = {\n            '{seektime}': config.seekTime,\n            '{title}': config.title,\n        };\n\n        Object.entries(replace).forEach(([\n            key,\n            value,\n        ]) => {\n            string = utils.replaceAll(string, key, value);\n        });\n\n        return string;\n    },\n};\n\nexport default i18n;\n","// ==========================================================================\n// Plyr Captions\n// TODO: Create as class\n// ==========================================================================\n\nimport support from './support';\nimport utils from './utils';\nimport controls from './controls';\nimport i18n from './i18n';\nimport defaults from './defaults';\n\nconst captions = {\n    // Setup captions\n    setup() {\n        // Requires UI support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Get tracks\n        const tracks = captions.getTracks.call(this);\n\n        // Set default language if not set\n        const stored = this.storage.get('language');\n\n        if (!utils.is.empty(stored)) {\n            this.captions.language = stored;\n        }\n\n        if (utils.is.empty(this.captions.language)) {\n            this.captions.language = this.config.captions.language.toLowerCase();\n        }\n\n        // if desired language is not available,\n        // check availability of fallbackLanguage ('en'),\n        // and if not available too, take the first existing language\n        if (!utils.is.empty(tracks)) {\n            const trackLanguages = tracks.map(track => track.language);\n\n            // eslint-disable-next-line no-nested-ternary\n            this.captions.language = trackLanguages.includes(this.captions.language)\n                ? this.captions.language\n                : trackLanguages.includes(defaults.captions.fallbackLanguage)\n                    ? defaults.captions.fallbackLanguage\n                    : trackLanguages[0];\n        }\n\n        // Set captions enabled state if not set\n        if (!utils.is.boolean(this.captions.active)) {\n            const active = this.storage.get('captions');\n\n            if (utils.is.boolean(active)) {\n                this.captions.active = active;\n            } else {\n                this.captions.active = this.config.captions.active;\n            }\n        }\n\n        // Only Vimeo and HTML5 video supported at this point\n        if (!this.isVideo || this.isYouTube || (this.isHTML5 && !support.textTracks)) {\n            // Clear menu and hide\n            if (utils.is.array(this.config.controls) && this.config.controls.includes('settings') && this.config.settings.includes('captions')) {\n                controls.setCaptionsMenu.call(this);\n            }\n\n            return;\n        }\n\n        // Inject the container\n        if (!utils.is.element(this.elements.captions)) {\n            this.elements.captions = utils.createElement('div', utils.getAttributesFromSelector(this.config.selectors.captions));\n\n            utils.insertAfter(this.elements.captions, this.elements.wrapper);\n        }\n\n        // Set the class hook\n        utils.toggleClass(this.elements.container, this.config.classNames.captions.enabled, !utils.is.empty(tracks));\n\n        // If no caption file exists, hide container for caption text\n        if (utils.is.empty(tracks)) {\n            return;\n        }\n\n        // Get browser info\n        const browser = utils.getBrowser();\n\n        // Fix IE captions if CORS is used\n        // Fetch captions and inject as blobs instead (data URIs not supported!)\n        if (browser.isIE && window.URL) {\n            const elements = this.media.querySelectorAll('track');\n\n            Array.from(elements).forEach(track => {\n                const src = track.getAttribute('src');\n                const href = utils.parseUrl(src);\n\n                if (href.hostname !== window.location.href.hostname && [\n                    'http:',\n                    'https:',\n                ].includes(href.protocol)) {\n                    utils\n                        .fetch(src, 'blob')\n                        .then(blob => {\n                            track.setAttribute('src', window.URL.createObjectURL(blob));\n                        })\n                        .catch(() => {\n                            utils.removeElement(track);\n                        });\n                }\n            });\n        }\n\n        // Set language\n        captions.setLanguage.call(this);\n\n        // Enable UI\n        captions.show.call(this);\n\n        // Set available languages in list\n        if (utils.is.array(this.config.controls) && this.config.controls.includes('settings') && this.config.settings.includes('captions')) {\n            controls.setCaptionsMenu.call(this);\n        }\n    },\n\n    // Set the captions language\n    setLanguage() {\n        // Setup HTML5 track rendering\n        if (this.isHTML5 && this.isVideo) {\n            captions.getTracks.call(this).forEach(track => {\n                // Show track\n                utils.on(track, 'cuechange', event => captions.setCue.call(this, event));\n\n                // Turn off native caption rendering to avoid double captions\n                // eslint-disable-next-line\n                track.mode = 'hidden';\n            });\n\n            // Get current track\n            const currentTrack = captions.getCurrentTrack.call(this);\n\n            // Check if suported kind\n            if (utils.is.track(currentTrack)) {\n                // If we change the active track while a cue is already displayed we need to update it\n                if (Array.from(currentTrack.activeCues || []).length) {\n                    captions.setCue.call(this, currentTrack);\n                }\n            }\n        } else if (this.isVimeo) {\n            this.embed.enableTextTrack(this.language);\n        }\n    },\n\n    // Get the tracks\n    getTracks() {\n        // Return empty array at least\n        if (utils.is.nullOrUndefined(this.media)) {\n            return [];\n        }\n\n        // Only get accepted kinds\n        return Array.from(this.media.textTracks || []).filter(track => [\n            'captions',\n            'subtitles',\n        ].includes(track.kind));\n    },\n\n    // Get the current track for the current language\n    getCurrentTrack() {\n        const tracks = captions.getTracks.call(this);\n\n        if (!tracks.length) {\n            return null;\n        }\n\n        // Get track based on current language\n        let track = tracks.find(track => track.language.toLowerCase() === this.language);\n\n        // Get the <track> with default attribute\n        if (!track) {\n            track = utils.getElement.call(this, 'track[default]');\n        }\n\n        // Get the first track\n        if (!track) {\n            [track] = tracks;\n        }\n\n        return track;\n    },\n\n    // Get UI label for track\n    getLabel(track) {\n        let currentTrack = track;\n\n        if (!utils.is.track(currentTrack) && support.textTracks && this.captions.active) {\n            currentTrack = captions.getCurrentTrack.call(this);\n        }\n\n        if (utils.is.track(currentTrack)) {\n            if (!utils.is.empty(currentTrack.label)) {\n                return currentTrack.label;\n            }\n\n            if (!utils.is.empty(currentTrack.language)) {\n                return track.language.toUpperCase();\n            }\n\n            return i18n.get('enabled', this.config);\n        }\n\n        return i18n.get('disabled', this.config);\n    },\n\n    // Display active caption if it contains text\n    setCue(input) {\n        // Get the track from the event if needed\n        const track = utils.is.event(input) ? input.target : input;\n        const { activeCues } = track;\n        const active = activeCues.length && activeCues[0];\n        const currentTrack = captions.getCurrentTrack.call(this);\n\n        // Only display current track\n        if (track !== currentTrack) {\n            return;\n        }\n\n        // Display a cue, if there is one\n        if (utils.is.cue(active)) {\n            captions.setText.call(this, active.getCueAsHTML());\n        } else {\n            captions.setText.call(this, null);\n        }\n\n        utils.dispatchEvent.call(this, this.media, 'cuechange');\n    },\n\n    // Set the current caption\n    setText(input) {\n        // Requires UI\n        if (!this.supported.ui) {\n            return;\n        }\n\n        if (utils.is.element(this.elements.captions)) {\n            const content = utils.createElement('span');\n\n            // Empty the container\n            utils.emptyElement(this.elements.captions);\n\n            // Default to empty\n            const caption = !utils.is.nullOrUndefined(input) ? input : '';\n\n            // Set the span content\n            if (utils.is.string(caption)) {\n                content.textContent = caption.trim();\n            } else {\n                content.appendChild(caption);\n            }\n\n            // Set new caption text\n            this.elements.captions.appendChild(content);\n        } else {\n            this.debug.warn('No captions element to render to');\n        }\n    },\n\n    // Display captions container and button (for initialization)\n    show() {\n        // Try to load the value from storage\n        let active = this.storage.get('captions');\n\n        // Otherwise fall back to the default config\n        if (!utils.is.boolean(active)) {\n            ({ active } = this.config.captions);\n        } else {\n            this.captions.active = active;\n        }\n\n        if (active) {\n            utils.toggleClass(this.elements.container, this.config.classNames.captions.active, true);\n            utils.toggleState(this.elements.buttons.captions, true);\n        }\n    },\n};\n\nexport default captions;\n","// ==========================================================================\n// Plyr UI\n// ==========================================================================\n\nimport utils from './utils';\nimport captions from './captions';\nimport controls from './controls';\nimport i18n from './i18n';\n\nconst ui = {\n    addStyleHook() {\n        utils.toggleClass(this.elements.container, this.config.selectors.container.replace('.', ''), true);\n        utils.toggleClass(this.elements.container, this.config.classNames.uiSupported, this.supported.ui);\n    },\n\n    // Toggle native HTML5 media controls\n    toggleNativeControls(toggle = false) {\n        if (toggle && this.isHTML5) {\n            this.media.setAttribute('controls', '');\n        } else {\n            this.media.removeAttribute('controls');\n        }\n    },\n\n    // Setup the UI\n    build() {\n        // Re-attach media element listeners\n        // TODO: Use event bubbling?\n        this.listeners.media();\n\n        // Don't setup interface if no support\n        if (!this.supported.ui) {\n            this.debug.warn(`Basic support only for ${this.provider} ${this.type}`);\n\n            // Restore native controls\n            ui.toggleNativeControls.call(this, true);\n\n            // Bail\n            return;\n        }\n\n        // Inject custom controls if not present\n        if (!utils.is.element(this.elements.controls)) {\n            // Inject custom controls\n            controls.inject.call(this);\n\n            // Re-attach control listeners\n            this.listeners.controls();\n        }\n\n        // If there's no controls, bail\n        if (!utils.is.element(this.elements.controls)) {\n            return;\n        }\n\n        // Remove native controls\n        ui.toggleNativeControls.call(this);\n\n        // Captions\n        captions.setup.call(this);\n\n        // Reset volume\n        this.volume = null;\n\n        // Reset mute state\n        this.muted = null;\n\n        // Reset speed\n        this.speed = null;\n\n        // Reset loop state\n        this.loop = null;\n\n        // Reset quality setting\n        this.quality = null;\n\n        // Reset volume display\n        ui.updateVolume.call(this);\n\n        // Reset time display\n        ui.timeUpdate.call(this);\n\n        // Update the UI\n        ui.checkPlaying.call(this);\n\n        // Ready for API calls\n        this.ready = true;\n\n        // Ready event at end of execution stack\n        setTimeout(() => {\n            utils.dispatchEvent.call(this, this.media, 'ready');\n        }, 0);\n\n        // Set the title\n        ui.setTitle.call(this);\n    },\n\n    // Setup aria attribute for play and iframe title\n    setTitle() {\n        // Find the current text\n        let label = i18n.get('play', this.config);\n\n        // If there's a media title set, use that for the label\n        if (utils.is.string(this.config.title) && !utils.is.empty(this.config.title)) {\n            label += `, ${this.config.title}`;\n\n            // Set container label\n            this.elements.container.setAttribute('aria-label', this.config.title);\n        }\n\n        // If there's a play button, set label\n        if (utils.is.nodeList(this.elements.buttons.play)) {\n            Array.from(this.elements.buttons.play).forEach(button => {\n                button.setAttribute('aria-label', label);\n            });\n        }\n\n        // Set iframe title\n        // https://github.com/sampotts/plyr/issues/124\n        if (this.isEmbed) {\n            const iframe = utils.getElement.call(this, 'iframe');\n\n            if (!utils.is.element(iframe)) {\n                return;\n            }\n\n            // Default to media type\n            const title = !utils.is.empty(this.config.title) ? this.config.title : 'video';\n\n            iframe.setAttribute('title', i18n.get('frameTitle', this.config));\n        }\n    },\n\n    // Check playing state\n    checkPlaying() {\n        // Class hooks\n        utils.toggleClass(this.elements.container, this.config.classNames.playing, this.playing);\n        utils.toggleClass(this.elements.container, this.config.classNames.stopped, this.paused);\n\n        // Set ARIA state\n        utils.toggleState(this.elements.buttons.play, this.playing);\n\n        // Toggle controls\n        this.toggleControls(!this.playing);\n    },\n\n    // Check if media is loading\n    checkLoading(event) {\n        this.loading = [\n            'stalled',\n            'waiting',\n        ].includes(event.type);\n\n        // Clear timer\n        clearTimeout(this.timers.loading);\n\n        // Timer to prevent flicker when seeking\n        this.timers.loading = setTimeout(() => {\n            // Toggle container class hook\n            utils.toggleClass(this.elements.container, this.config.classNames.loading, this.loading);\n\n            // Show controls if loading, hide if done\n            this.toggleControls(this.loading);\n        }, this.loading ? 250 : 0);\n    },\n\n    // Check if media failed to load\n    checkFailed() {\n        // https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/networkState\n        this.failed = this.media.networkState === 3;\n\n        if (this.failed) {\n            utils.toggleClass(this.elements.container, this.config.classNames.loading, false);\n            utils.toggleClass(this.elements.container, this.config.classNames.error, true);\n        }\n\n        // Clear timer\n        clearTimeout(this.timers.failed);\n\n        // Timer to prevent flicker when seeking\n        this.timers.loading = setTimeout(() => {\n            // Toggle container class hook\n            utils.toggleClass(this.elements.container, this.config.classNames.loading, this.loading);\n\n            // Show controls if loading, hide if done\n            this.toggleControls(this.loading);\n        }, this.loading ? 250 : 0);\n    },\n\n    // Update volume UI and storage\n    updateVolume() {\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // Update range\n        if (utils.is.element(this.elements.inputs.volume)) {\n            ui.setRange.call(this, this.elements.inputs.volume, this.muted ? 0 : this.volume);\n        }\n\n        // Update mute state\n        if (utils.is.element(this.elements.buttons.mute)) {\n            utils.toggleState(this.elements.buttons.mute, this.muted || this.volume === 0);\n        }\n    },\n\n    // Update seek value and lower fill\n    setRange(target, value = 0) {\n        if (!utils.is.element(target)) {\n            return;\n        }\n\n        // eslint-disable-next-line\n        target.value = value;\n\n        // Webkit range fill\n        controls.updateRangeFill.call(this, target);\n    },\n\n    // Set <progress> value\n    setProgress(target, input) {\n        const value = utils.is.number(input) ? input : 0;\n        const progress = utils.is.element(target) ? target : this.elements.display.buffer;\n\n        // Update value and label\n        if (utils.is.element(progress)) {\n            progress.value = value;\n\n            // Update text label inside\n            const label = progress.getElementsByTagName('span')[0];\n            if (utils.is.element(label)) {\n                label.childNodes[0].nodeValue = value;\n            }\n        }\n    },\n\n    // Update <progress> elements\n    updateProgress(event) {\n        if (!this.supported.ui || !utils.is.event(event)) {\n            return;\n        }\n\n        let value = 0;\n\n        if (event) {\n            switch (event.type) {\n                // Video playing\n                case 'timeupdate':\n                case 'seeking':\n                    value = utils.getPercentage(this.currentTime, this.duration);\n\n                    // Set seek range value only if it's a 'natural' time event\n                    if (event.type === 'timeupdate') {\n                        ui.setRange.call(this, this.elements.inputs.seek, value);\n                    }\n\n                    break;\n\n                // Check buffer status\n                case 'playing':\n                case 'progress':\n                    ui.setProgress.call(this, this.elements.display.buffer, this.buffered * 100);\n\n                    break;\n\n                default:\n                    break;\n            }\n        }\n    },\n\n    // Update the displayed time\n    updateTimeDisplay(target = null, time = 0, inverted = false) {\n        // Bail if there's no element to display or the value isn't a number\n        if (!utils.is.element(target) || !utils.is.number(time)) {\n            return;\n        }\n\n        // Always display hours if duration is over an hour\n        const displayHours = utils.getHours(this.duration) > 0;\n\n        // eslint-disable-next-line no-param-reassign\n        target.textContent = utils.formatTime(time, displayHours, inverted);\n    },\n\n    // Handle time change event\n    timeUpdate(event) {\n        // Only invert if only one time element is displayed and used for both duration and currentTime\n        const invert = !utils.is.element(this.elements.display.duration) && this.config.invertTime;\n\n        // Duration\n        ui.updateTimeDisplay.call(this, this.elements.display.currentTime, invert ? this.duration - this.currentTime : this.currentTime, invert);\n\n        // Ignore updates while seeking\n        if (event && event.type === 'timeupdate' && this.media.seeking) {\n            return;\n        }\n\n        // Playing progress\n        ui.updateProgress.call(this, event);\n    },\n\n    // Show the duration on metadataloaded\n    durationUpdate() {\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // If there's a spot to display duration\n        const hasDuration = utils.is.element(this.elements.display.duration);\n\n        // If there's only one time display, display duration there\n        if (!hasDuration && this.config.displayDuration && this.paused) {\n            ui.updateTimeDisplay.call(this, this.elements.display.currentTime, this.duration);\n        }\n\n        // If there's a duration element, update content\n        if (hasDuration) {\n            ui.updateTimeDisplay.call(this, this.elements.display.duration, this.duration);\n        }\n\n        // Update the tooltip (if visible)\n        controls.updateSeekTooltip.call(this);\n    },\n};\n\nexport default ui;\n","// ==========================================================================\n// Plyr HTML5 helpers\n// ==========================================================================\n\nimport support from './support';\nimport utils from './utils';\n\nconst html5 = {\n    getSources() {\n        if (!this.isHTML5) {\n            return null;\n        }\n\n        return this.media.querySelectorAll('source');\n    },\n\n    // Get quality levels\n    getQualityOptions() {\n        if (!this.isHTML5) {\n            return null;\n        }\n\n        // Get sources\n        const sources = html5.getSources.call(this);\n\n        if (utils.is.empty(sources)) {\n            return null;\n        }\n\n        // Get <source> with size attribute\n        const sizes = Array.from(sources).filter(source => !utils.is.empty(source.getAttribute('size')));\n\n        // If none, bail\n        if (utils.is.empty(sizes)) {\n            return null;\n        }\n\n        // Reduce to unique list\n        return utils.dedupe(sizes.map(source => Number(source.getAttribute('size'))));\n    },\n\n    extend() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        const player = this;\n\n        // Quality\n        Object.defineProperty(player.media, 'quality', {\n            get() {\n                // Get sources\n                const sources = html5.getSources.call(player);\n\n                if (utils.is.empty(sources)) {\n                    return null;\n                }\n\n                const matches = Array.from(sources).filter(source => source.getAttribute('src') === player.source);\n\n                if (utils.is.empty(matches)) {\n                    return null;\n                }\n\n                return Number(matches[0].getAttribute('size'));\n            },\n            set(input) {\n                // Get sources\n                const sources = html5.getSources.call(player);\n\n                if (utils.is.empty(sources)) {\n                    return;\n                }\n\n                // Get matches for requested size\n                const matches = Array.from(sources).filter(source => Number(source.getAttribute('size')) === input);\n\n                // No matches for requested size\n                if (utils.is.empty(matches)) {\n                    return;\n                }\n\n                // Get supported sources\n                const supported = matches.filter(source => support.mime.call(player, source.getAttribute('type')));\n\n                // No supported sources\n                if (utils.is.empty(supported)) {\n                    return;\n                }\n\n                // Trigger change event\n                utils.dispatchEvent.call(player, player.media, 'qualityrequested', false, {\n                    quality: input,\n                });\n\n                // Get current state\n                const { currentTime, playing } = player;\n\n                // Set new source\n                player.media.src = supported[0].getAttribute('src');\n\n                // Load new source\n                player.media.load();\n\n                // Resume playing\n                if (playing) {\n                    player.play();\n                }\n\n                // Restore time\n                player.currentTime = currentTime;\n\n                // Trigger change event\n                utils.dispatchEvent.call(player, player.media, 'qualitychange', false, {\n                    quality: input,\n                });\n            },\n        });\n    },\n\n    // Cancel current network requests\n    // See https://github.com/sampotts/plyr/issues/174\n    cancelRequests() {\n        if (!this.isHTML5) {\n            return;\n        }\n\n        // Remove child sources\n        utils.removeElement(html5.getSources());\n\n        // Set blank video src attribute\n        // This is to prevent a MEDIA_ERR_SRC_NOT_SUPPORTED error\n        // Info: http://stackoverflow.com/questions/32231579/how-to-properly-dispose-of-an-html5-video-and-close-socket-or-connection\n        this.media.setAttribute('src', this.config.blankVideo);\n\n        // Load the new empty source\n        // This will cancel existing requests\n        // See https://github.com/sampotts/plyr/issues/174\n        this.media.load();\n\n        // Debugging\n        this.debug.log('Cancelled network requests');\n    },\n};\n\nexport default html5;\n","// ==========================================================================\n// Plyr controls\n// ==========================================================================\n\nimport support from './support';\nimport utils from './utils';\nimport ui from './ui';\nimport i18n from './i18n';\nimport captions from './captions';\nimport html5 from './html5';\n\n// Sniff out the browser\nconst browser = utils.getBrowser();\n\nconst controls = {\n    // Webkit polyfill for lower fill range\n    updateRangeFill(target) {\n\n\n        // Get range from event if event passed\n        const range = utils.is.event(target) ? target.target : target;\n\n        // Needs to be a valid <input type='range'>\n        if (!utils.is.element(range) || range.getAttribute('type') !== 'range') {\n            return;\n        }\n\n        // Set aria value for https://github.com/sampotts/plyr/issues/905\n        range.setAttribute('aria-valuenow', range.value);\n\n        // WebKit only\n        if (!browser.isWebkit) {\n            return;\n        }\n\n        // Set CSS custom property\n        range.style.setProperty('--value', `${range.value / range.max * 100}%`);\n    },\n\n    // Get icon URL\n    getIconUrl() {\n        return {\n            url: this.config.iconUrl,\n            absolute: this.config.iconUrl.indexOf('http') === 0 || (browser.isIE && !window.svg4everybody),\n        };\n    },\n\n    // Create <svg> icon\n    createIcon(type, attributes) {\n        const namespace = 'http://www.w3.org/2000/svg';\n        const iconUrl = controls.getIconUrl.call(this);\n        const iconPath = `${!iconUrl.absolute ? iconUrl.url : ''}#${this.config.iconPrefix}`;\n\n        // Create <svg>\n        const icon = document.createElementNS(namespace, 'svg');\n        utils.setAttributes(\n            icon,\n            utils.extend(attributes, {\n                role: 'presentation',\n                focusable: 'false',\n            }),\n        );\n\n        // Create the <use> to reference sprite\n        const use = document.createElementNS(namespace, 'use');\n        const path = `${iconPath}-${type}`;\n\n        // Set `href` attributes\n        // https://github.com/sampotts/plyr/issues/460\n        // https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/xlink:href\n        if ('href' in use) {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\n        } else {\n            use.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', path);\n        }\n\n        // Add <use> to <svg>\n        icon.appendChild(use);\n\n        return icon;\n    },\n\n    // Create hidden text label\n    createLabel(type, attr) {\n        let text = i18n.get(type, this.config);\n        const attributes = Object.assign({}, attr);\n\n        switch (type) {\n            case 'pip':\n                text = 'PIP';\n                break;\n\n            case 'airplay':\n                text = 'AirPlay';\n                break;\n\n            default:\n                break;\n        }\n\n        if ('class' in attributes) {\n            attributes.class += ` ${this.config.classNames.hidden}`;\n        } else {\n            attributes.class = this.config.classNames.hidden;\n        }\n\n        return utils.createElement('span', attributes, text);\n    },\n\n    // Create a badge\n    createBadge(text) {\n        if (utils.is.empty(text)) {\n            return null;\n        }\n\n        const badge = utils.createElement('span', {\n            class: this.config.classNames.menu.value,\n        });\n\n        badge.appendChild(\n            utils.createElement(\n                'span',\n                {\n                    class: this.config.classNames.menu.badge,\n                },\n                text,\n            ),\n        );\n\n        return badge;\n    },\n\n    // Create a <button>\n    createButton(buttonType, attr) {\n        const button = utils.createElement('button');\n        const attributes = Object.assign({}, attr);\n        let type = utils.toCamelCase(buttonType);\n\n        let toggle = false;\n        let label;\n        let icon;\n        let labelPressed;\n        let iconPressed;\n\n        if (!('type' in attributes)) {\n            attributes.type = 'button';\n        }\n\n        if ('class' in attributes) {\n            if (attributes.class.includes(this.config.classNames.control)) {\n                attributes.class += ` ${this.config.classNames.control}`;\n            }\n        } else {\n            attributes.class = this.config.classNames.control;\n        }\n\n        // Large play button\n        switch (buttonType) {\n            case 'play':\n                toggle = true;\n                label = 'play';\n                labelPressed = 'pause';\n                icon = 'play';\n                iconPressed = 'pause';\n                break;\n\n            case 'mute':\n                toggle = true;\n                label = 'mute';\n                labelPressed = 'unmute';\n                icon = 'volume';\n                iconPressed = 'muted';\n                break;\n\n            case 'captions':\n                toggle = true;\n                label = 'enableCaptions';\n                labelPressed = 'disableCaptions';\n                icon = 'captions-off';\n                iconPressed = 'captions-on';\n                break;\n\n            case 'fullscreen':\n                toggle = true;\n                label = 'enterFullscreen';\n                labelPressed = 'exitFullscreen';\n                icon = 'enter-fullscreen';\n                iconPressed = 'exit-fullscreen';\n                break;\n\n            case 'play-large':\n                attributes.class += ` ${this.config.classNames.control}--overlaid`;\n                type = 'play';\n                label = 'play';\n                icon = 'play';\n                break;\n\n            default:\n                label = type;\n                icon = buttonType;\n        }\n\n        // Setup toggle icon and labels\n        if (toggle) {\n            // Icon\n            button.appendChild(controls.createIcon.call(this, iconPressed, { class: 'icon--pressed' }));\n            button.appendChild(controls.createIcon.call(this, icon, { class: 'icon--not-pressed' }));\n\n            // Label/Tooltip\n            button.appendChild(controls.createLabel.call(this, labelPressed, { class: 'label--pressed' }));\n            button.appendChild(controls.createLabel.call(this, label, { class: 'label--not-pressed' }));\n\n            // Add aria attributes\n            attributes['aria-pressed'] = false;\n            attributes['aria-label'] = i18n.get(label, this.config);\n        } else {\n            button.appendChild(controls.createIcon.call(this, icon));\n            button.appendChild(controls.createLabel.call(this, label));\n        }\n\n        // Merge attributes\n        utils.extend(attributes, utils.getAttributesFromSelector(this.config.selectors.buttons[type], attributes));\n\n        utils.setAttributes(button, attributes);\n\n        // We have multiple play buttons\n        if (type === 'play') {\n            if (!utils.is.array(this.elements.buttons[type])) {\n                this.elements.buttons[type] = [];\n            }\n\n            this.elements.buttons[type].push(button);\n        } else {\n            this.elements.buttons[type] = button;\n        }\n\n        return button;\n    },\n\n    // Create an <input type='range'>\n    createRange(type, attributes) {\n        // Seek label\n        const label = utils.createElement(\n            'label',\n            {\n                for: attributes.id,\n                id: `${attributes.id}-label`,\n                class: this.config.classNames.hidden,\n            },\n            i18n.get(type, this.config),\n        );\n\n        // Seek input\n        const input = utils.createElement(\n            'input',\n            utils.extend(\n                utils.getAttributesFromSelector(this.config.selectors.inputs[type]),\n                {\n                    type: 'range',\n                    min: 0,\n                    max: 100,\n                    step: 0.01,\n                    value: 0,\n                    autocomplete: 'off',\n                    // A11y fixes for https://github.com/sampotts/plyr/issues/905\n                    role: 'slider',\n                    'aria-labelledby': `${attributes.id}-label`,\n                    'aria-valuemin': 0,\n                    'aria-valuemax': 100,\n                    'aria-valuenow': 0,\n                },\n                attributes,\n            ),\n        );\n\n        this.elements.inputs[type] = input;\n\n        // Set the fill for webkit now\n        controls.updateRangeFill.call(this, input);\n\n        return {\n            label,\n            input,\n        };\n    },\n\n    // Create a <progress>\n    createProgress(type, attributes) {\n        const progress = utils.createElement(\n            'progress',\n            utils.extend(\n                utils.getAttributesFromSelector(this.config.selectors.display[type]),\n                {\n                    min: 0,\n                    max: 100,\n                    value: 0,\n                    role: 'presentation',\n                    'aria-hidden': true,\n                },\n                attributes,\n            ),\n        );\n\n        // Create the label inside\n        if (type !== 'volume') {\n            progress.appendChild(utils.createElement('span', null, '0'));\n\n            let suffix = '';\n            switch (type) {\n                case 'played':\n                    suffix = i18n.get('played', this.config);\n                    break;\n\n                case 'buffer':\n                    suffix = i18n.get('buffered', this.config);\n                    break;\n\n                default:\n                    break;\n            }\n\n            progress.textContent = `% ${suffix.toLowerCase()}`;\n        }\n\n        this.elements.display[type] = progress;\n\n        return progress;\n    },\n\n    // Create time display\n    createTime(type) {\n        const container = utils.createElement('div', {\n            class: 'plyr__time',\n        });\n\n        container.appendChild(\n            utils.createElement(\n                'span',\n                {\n                    class: this.config.classNames.hidden,\n                },\n                i18n.get(type, this.config),\n            ),\n        );\n\n        container.appendChild(utils.createElement('span', utils.getAttributesFromSelector(this.config.selectors.display[type]), '00:00'));\n\n        this.elements.display[type] = container;\n\n        return container;\n    },\n\n    // Create a settings menu item\n    createMenuItem(value, list, type, title, badge = null, checked = false) {\n        const item = utils.createElement('li');\n\n        const label = utils.createElement('label', {\n            class: this.config.classNames.control,\n        });\n\n        const radio = utils.createElement(\n            'input',\n            utils.extend(utils.getAttributesFromSelector(this.config.selectors.inputs[type]), {\n                type: 'radio',\n                name: `plyr-${type}`,\n                value,\n                checked,\n                class: 'plyr__sr-only',\n            }),\n        );\n\n        const faux = utils.createElement('span', { 'aria-hidden': true });\n\n        label.appendChild(radio);\n        label.appendChild(faux);\n        label.insertAdjacentHTML('beforeend', title);\n\n        if (utils.is.element(badge)) {\n            label.appendChild(badge);\n        }\n\n        item.appendChild(label);\n        list.appendChild(item);\n    },\n\n    // Update hover tooltip for seeking\n    updateSeekTooltip(event) {\n        // Bail if setting not true\n        if (\n            !this.config.tooltips.seek ||\n            !utils.is.element(this.elements.inputs.seek) ||\n            !utils.is.element(this.elements.display.seekTooltip) ||\n            this.duration === 0\n        ) {\n            return;\n        }\n\n        // Calculate percentage\n        let percent = 0;\n        const clientRect = this.elements.inputs.seek.getBoundingClientRect();\n        const visible = `${this.config.classNames.tooltip}--visible`;\n\n        const toggle = toggle => {\n            utils.toggleClass(this.elements.display.seekTooltip, visible, toggle);\n        };\n\n        // Hide on touch\n        if (this.touch) {\n            toggle(false);\n            return;\n        }\n\n        // Determine percentage, if already visible\n        if (utils.is.event(event)) {\n            percent = 100 / clientRect.width * (event.pageX - clientRect.left);\n        } else if (utils.hasClass(this.elements.display.seekTooltip, visible)) {\n            percent = parseFloat(this.elements.display.seekTooltip.style.left, 10);\n        } else {\n            return;\n        }\n\n        // Set bounds\n        if (percent < 0) {\n            percent = 0;\n        } else if (percent > 100) {\n            percent = 100;\n        }\n\n        // Display the time a click would seek to\n        ui.updateTimeDisplay.call(this, this.elements.display.seekTooltip, this.duration / 100 * percent);\n\n        // Set position\n        this.elements.display.seekTooltip.style.left = `${percent}%`;\n\n        // Show/hide the tooltip\n        // If the event is a moues in/out and percentage is inside bounds\n        if (utils.is.event(event) && [\n            'mouseenter',\n            'mouseleave',\n        ].includes(event.type)) {\n            toggle(event.type === 'mouseenter');\n        }\n    },\n\n    // Hide/show a tab\n    toggleTab(setting, toggle) {\n        const tab = this.elements.settings.tabs[setting];\n        const pane = this.elements.settings.panes[setting];\n\n        utils.toggleHidden(tab, !toggle);\n        utils.toggleHidden(pane, !toggle);\n    },\n\n    // Set the quality menu\n    // TODO: Vimeo support\n    setQualityMenu(options) {\n        // Menu required\n        if (!utils.is.element(this.elements.settings.panes.quality)) {\n            return;\n        }\n\n        const type = 'quality';\n        const list = this.elements.settings.panes.quality.querySelector('ul');\n\n        // Set options if passed and filter based on config\n        if (utils.is.array(options)) {\n            this.options.quality = options.filter(quality => this.config.quality.options.includes(quality));\n        }\n\n        // Toggle the pane and tab\n        const toggle = !utils.is.empty(this.options.quality) && this.options.quality.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Empty the menu\n        utils.emptyElement(list);\n\n        // Get the badge HTML for HD, 4K etc\n        const getBadge = quality => {\n            let label = '';\n\n            switch (quality) {\n                case 2160:\n                    label = '4K';\n                    break;\n\n                case 1440:\n                case 1080:\n                case 720:\n                    label = 'HD';\n                    break;\n\n                case 576:\n                    label = 'SD';\n                    break;\n\n                default:\n                    break;\n            }\n\n            if (!label.length) {\n                return null;\n            }\n\n            return controls.createBadge.call(this, label);\n        };\n\n        // Sort options by the config and then render options\n        this.options.quality\n            .sort((a, b) => {\n                const sorting = this.config.quality.options;\n                return sorting.indexOf(a) > sorting.indexOf(b) ? 1 : -1;\n            })\n            .forEach(quality => {\n                const label = controls.getLabel.call(this, 'quality', quality);\n                controls.createMenuItem.call(this, quality, list, type, label, getBadge(quality));\n            });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Translate a value into a nice label\n    // TODO: Localisation\n    getLabel(setting, value) {\n        switch (setting) {\n            case 'speed':\n                return value === 1 ? i18n.get('normal', this.config) : `${value}&times;`;\n\n            case 'quality':\n                if (utils.is.number(value)) {\n                    return `${value}p`;\n                }\n\n                return utils.toTitleCase(value);\n\n            case 'captions':\n                return captions.getLabel.call(this);\n\n            default:\n                return null;\n        }\n    },\n\n    // Update the selected setting\n    updateSetting(setting, container, input) {\n        const pane = this.elements.settings.panes[setting];\n        let value = null;\n        let list = container;\n\n        switch (setting) {\n            case 'captions':\n                if (this.captions.active) {\n                    if (this.options.captions.length > 2 || !this.options.captions.some(lang => lang === 'enabled')) {\n                        value = this.captions.language;\n                    } else {\n                        value = 'enabled';\n                    }\n                } else {\n                    value = '';\n                }\n\n                break;\n\n            default:\n                value = !utils.is.empty(input) ? input : this[setting];\n\n                // Get default\n                if (utils.is.empty(value)) {\n                    value = this.config[setting].default;\n                }\n\n                // Unsupported value\n                if (!utils.is.empty(this.options[setting]) && !this.options[setting].includes(value)) {\n                    this.debug.warn(`Unsupported value of '${value}' for ${setting}`);\n                    return;\n                }\n\n                // Disabled value\n                if (!this.config[setting].options.includes(value)) {\n                    this.debug.warn(`Disabled value of '${value}' for ${setting}`);\n                    return;\n                }\n\n                break;\n        }\n\n        // Get the list if we need to\n        if (!utils.is.element(list)) {\n            list = pane && pane.querySelector('ul');\n        }\n\n        // If there's no list it means it's not been rendered...\n        if (!utils.is.element(list)) {\n            return;\n        }\n\n        // Update the label\n        const label = this.elements.settings.tabs[setting].querySelector(`.${this.config.classNames.menu.value}`);\n        label.innerHTML = controls.getLabel.call(this, setting, value);\n\n        // Find the radio option and check it\n        const target = list && list.querySelector(`input[value=\"${value}\"]`);\n\n        if (utils.is.element(target)) {\n            target.checked = true;\n        }\n    },\n\n    // Set the looping options\n    /* setLoopMenu() {\n        // Menu required\n        if (!utils.is.element(this.elements.settings.panes.loop)) {\n            return;\n        }\n\n        const options = ['start', 'end', 'all', 'reset'];\n        const list = this.elements.settings.panes.loop.querySelector('ul');\n\n        // Show the pane and tab\n        utils.toggleHidden(this.elements.settings.tabs.loop, false);\n        utils.toggleHidden(this.elements.settings.panes.loop, false);\n\n        // Toggle the pane and tab\n        const toggle = !utils.is.empty(this.loop.options);\n        controls.toggleTab.call(this, 'loop', toggle);\n\n        // Empty the menu\n        utils.emptyElement(list);\n\n        options.forEach(option => {\n            const item = utils.createElement('li');\n\n            const button = utils.createElement(\n                'button',\n                utils.extend(utils.getAttributesFromSelector(this.config.selectors.buttons.loop), {\n                    type: 'button',\n                    class: this.config.classNames.control,\n                    'data-plyr-loop-action': option,\n                }),\n                i18n.get(option, this.config)\n            );\n\n            if (['start', 'end'].includes(option)) {\n                const badge = controls.createBadge.call(this, '00:00');\n                button.appendChild(badge);\n            }\n\n            item.appendChild(button);\n            list.appendChild(item);\n        });\n    }, */\n\n    // Get current selected caption language\n    // TODO: rework this to user the getter in the API?\n\n\n    // Set a list of available captions languages\n    setCaptionsMenu() {\n        // TODO: Captions or language? Currently it's mixed\n        const type = 'captions';\n        const list = this.elements.settings.panes.captions.querySelector('ul');\n\n        // Toggle the pane and tab\n        const toggle = captions.getTracks.call(this).length;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Empty the menu\n        utils.emptyElement(list);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If there's no captions, bail\n        if (!toggle) {\n            return;\n        }\n\n        // Re-map the tracks into just the data we need\n        const tracks = captions.getTracks.call(this).map(track => ({\n            language: !utils.is.empty(track.language) ? track.language : 'enabled',\n            label: captions.getLabel.call(this, track),\n        }));\n\n        // Add the \"Disabled\" option to turn off captions\n        tracks.unshift({\n            language: '',\n            label: i18n.get('disabled', this.config),\n        });\n\n        // Generate options\n        tracks.forEach(track => {\n            controls.createMenuItem.call(\n                this,\n                track.language,\n                list,\n                'language',\n                track.label,\n                track.language !== 'enabled' ? controls.createBadge.call(this, track.language.toUpperCase()) : null,\n                track.language.toLowerCase() === this.captions.language.toLowerCase(),\n            );\n        });\n\n        // Store reference\n        this.options.captions = tracks.map(track => track.language);\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Set a list of available captions languages\n    setSpeedMenu(options) {\n        // Do nothing if not selected\n        if (!this.config.controls.includes('settings') || !this.config.settings.includes('speed')) {\n            return;\n        }\n\n        // Menu required\n        if (!utils.is.element(this.elements.settings.panes.speed)) {\n            return;\n        }\n\n        const type = 'speed';\n\n        // Set the speed options\n        if (utils.is.array(options)) {\n            this.options.speed = options;\n        } else if (this.isHTML5 || this.isVimeo) {\n            this.options.speed = [\n                0.5,\n                0.75,\n                1,\n                1.25,\n                1.5,\n                1.75,\n                2,\n            ];\n        }\n\n        // Set options if passed and filter based on config\n        this.options.speed = this.options.speed.filter(speed => this.config.speed.options.includes(speed));\n\n        // Toggle the pane and tab\n        const toggle = !utils.is.empty(this.options.speed) && this.options.speed.length > 1;\n        controls.toggleTab.call(this, type, toggle);\n\n        // Check if we need to toggle the parent\n        controls.checkMenu.call(this);\n\n        // If we're hiding, nothing more to do\n        if (!toggle) {\n            return;\n        }\n\n        // Get the list to populate\n        const list = this.elements.settings.panes.speed.querySelector('ul');\n\n        // Show the pane and tab\n        utils.toggleHidden(this.elements.settings.tabs.speed, false);\n        utils.toggleHidden(this.elements.settings.panes.speed, false);\n\n        // Empty the menu\n        utils.emptyElement(list);\n\n        // Create items\n        this.options.speed.forEach(speed => {\n            const label = controls.getLabel.call(this, 'speed', speed);\n            controls.createMenuItem.call(this, speed, list, type, label);\n        });\n\n        controls.updateSetting.call(this, type, list);\n    },\n\n    // Check if we need to hide/show the settings menu\n    checkMenu() {\n        const { tabs } = this.elements.settings;\n        const visible = !utils.is.empty(tabs) && Object.values(tabs).some(tab => !tab.hidden);\n\n        utils.toggleHidden(this.elements.settings.menu, !visible);\n    },\n\n    // Show/hide menu\n    toggleMenu(event) {\n        const { form } = this.elements.settings;\n        const button = this.elements.buttons.settings;\n\n        // Menu and button are required\n        if (!utils.is.element(form) || !utils.is.element(button)) {\n            return;\n        }\n\n        const show = utils.is.boolean(event) ? event : utils.is.element(form) && form.getAttribute('aria-hidden') === 'true';\n\n        if (utils.is.event(event)) {\n            const isMenuItem = utils.is.element(form) && form.contains(event.target);\n            const isButton = event.target === this.elements.buttons.settings;\n\n            // If the click was inside the form or if the click\n            // wasn't the button or menu item and we're trying to\n            // show the menu (a doc click shouldn't show the menu)\n            if (isMenuItem || (!isMenuItem && !isButton && show)) {\n                return;\n            }\n\n            // Prevent the toggle being caught by the doc listener\n            if (isButton) {\n                event.stopPropagation();\n            }\n        }\n\n        // Set form and button attributes\n        if (utils.is.element(button)) {\n            button.setAttribute('aria-expanded', show);\n        }\n\n        if (utils.is.element(form)) {\n            form.setAttribute('aria-hidden', !show);\n            utils.toggleClass(this.elements.container, this.config.classNames.menu.open, show);\n\n            if (show) {\n                form.removeAttribute('tabindex');\n            } else {\n                form.setAttribute('tabindex', -1);\n            }\n        }\n    },\n\n    // Get the natural size of a tab\n    getTabSize(tab) {\n        const clone = tab.cloneNode(true);\n        clone.style.position = 'absolute';\n        clone.style.opacity = 0;\n        clone.setAttribute('aria-hidden', false);\n\n        // Prevent input's being unchecked due to the name being identical\n        Array.from(clone.querySelectorAll('input[name]')).forEach(input => {\n            const name = input.getAttribute('name');\n            input.setAttribute('name', `${name}-clone`);\n        });\n\n        // Append to parent so we get the \"real\" size\n        tab.parentNode.appendChild(clone);\n\n        // Get the sizes before we remove\n        const width = clone.scrollWidth;\n        const height = clone.scrollHeight;\n\n        // Remove from the DOM\n        utils.removeElement(clone);\n\n        return {\n            width,\n            height,\n        };\n    },\n\n    // Toggle Menu\n    showTab(event) {\n        const { menu } = this.elements.settings;\n        const tab = event.target;\n        const show = tab.getAttribute('aria-expanded') === 'false';\n        const pane = document.getElementById(tab.getAttribute('aria-controls'));\n\n        // Nothing to show, bail\n        if (!utils.is.element(pane)) {\n            return;\n        }\n\n        // Are we targetting a tab? If not, bail\n        const isTab = pane.getAttribute('role') === 'tabpanel';\n        if (!isTab) {\n            return;\n        }\n\n        // Hide all other tabs\n        // Get other tabs\n        const current = menu.querySelector('[role=\"tabpanel\"][aria-hidden=\"false\"]');\n        const container = current.parentNode;\n\n        // Set other toggles to be expanded false\n        Array.from(menu.querySelectorAll(`[aria-controls=\"${current.getAttribute('id')}\"]`)).forEach(toggle => {\n            toggle.setAttribute('aria-expanded', false);\n        });\n\n        // If we can do fancy animations, we'll animate the height/width\n        if (support.transitions && !support.reducedMotion) {\n            // Set the current width as a base\n            container.style.width = `${current.scrollWidth}px`;\n            container.style.height = `${current.scrollHeight}px`;\n\n            // Get potential sizes\n            const size = controls.getTabSize.call(this, pane);\n\n            // Restore auto height/width\n            const restore = e => {\n                // We're only bothered about height and width on the container\n                if (e.target !== container || ![\n                    'width',\n                    'height',\n                ].includes(e.propertyName)) {\n                    return;\n                }\n\n                // Revert back to auto\n                container.style.width = '';\n                container.style.height = '';\n\n                // Only listen once\n                utils.off(container, utils.transitionEndEvent, restore);\n            };\n\n            // Listen for the transition finishing and restore auto height/width\n            utils.on(container, utils.transitionEndEvent, restore);\n\n            // Set dimensions to target\n            container.style.width = `${size.width}px`;\n            container.style.height = `${size.height}px`;\n        }\n\n        // Set attributes on current tab\n        current.setAttribute('aria-hidden', true);\n        current.setAttribute('tabindex', -1);\n\n        // Set attributes on target\n        pane.setAttribute('aria-hidden', !show);\n        tab.setAttribute('aria-expanded', show);\n        pane.removeAttribute('tabindex');\n\n        // Focus the first item\n        pane.querySelectorAll('button:not(:disabled), input:not(:disabled), [tabindex]')[0].focus();\n    },\n\n    // Build the default HTML\n    // TODO: Set order based on order in the config.controls array?\n    create(data) {\n        // Do nothing if we want no controls\n        if (utils.is.empty(this.config.controls)) {\n            return null;\n        }\n\n        // Create the container\n        const container = utils.createElement('div', utils.getAttributesFromSelector(this.config.selectors.controls.wrapper));\n\n        // Restart button\n        if (this.config.controls.includes('restart')) {\n            container.appendChild(controls.createButton.call(this, 'restart'));\n        }\n\n        // Rewind button\n        if (this.config.controls.includes('rewind')) {\n            container.appendChild(controls.createButton.call(this, 'rewind'));\n        }\n\n        // Play/Pause button\n        if (this.config.controls.includes('play')) {\n            container.appendChild(controls.createButton.call(this, 'play'));\n        }\n\n        // Fast forward button\n        if (this.config.controls.includes('fast-forward')) {\n            container.appendChild(controls.createButton.call(this, 'fast-forward'));\n        }\n\n        // Progress\n        if (this.config.controls.includes('progress')) {\n            const progress = utils.createElement('div', utils.getAttributesFromSelector(this.config.selectors.progress));\n\n            // Seek range slider\n            const seek = controls.createRange.call(this, 'seek', {\n                id: `plyr-seek-${data.id}`,\n            });\n            progress.appendChild(seek.label);\n            progress.appendChild(seek.input);\n\n            // Buffer progress\n            progress.appendChild(controls.createProgress.call(this, 'buffer'));\n\n            // TODO: Add loop display indicator\n\n            // Seek tooltip\n            if (this.config.tooltips.seek) {\n                const tooltip = utils.createElement(\n                    'span',\n                    {\n                        role: 'tooltip',\n                        class: this.config.classNames.tooltip,\n                    },\n                    '00:00',\n                );\n\n                progress.appendChild(tooltip);\n                this.elements.display.seekTooltip = tooltip;\n            }\n\n            this.elements.progress = progress;\n            container.appendChild(this.elements.progress);\n        }\n\n        // Media current time display\n        if (this.config.controls.includes('current-time')) {\n            container.appendChild(controls.createTime.call(this, 'currentTime'));\n        }\n\n        // Media duration display\n        if (this.config.controls.includes('duration')) {\n            container.appendChild(controls.createTime.call(this, 'duration'));\n        }\n\n        // Toggle captions button\n        if (this.config.controls.includes('captions')) {\n            container.appendChild(controls.createButton.call(this, 'captions'));\n        }\n\n        // Settings button / menu\n        if (this.config.controls.includes('settings') && !utils.is.empty(this.config.settings)) {\n            const menu = utils.createElement('div', {\n                class: 'plyr__menu',\n                hidden: '',\n            });\n\n            menu.appendChild(\n                controls.createButton.call(this, 'settings', {\n                    id: `plyr-settings-toggle-${data.id}`,\n                    'aria-haspopup': true,\n                    'aria-controls': `plyr-settings-${data.id}`,\n                    'aria-expanded': false,\n                }),\n            );\n\n            const form = utils.createElement('form', {\n                class: 'plyr__menu__container',\n                id: `plyr-settings-${data.id}`,\n                'aria-hidden': true,\n                'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n                role: 'tablist',\n                tabindex: -1,\n            });\n\n            const inner = utils.createElement('div');\n\n            const home = utils.createElement('div', {\n                id: `plyr-settings-${data.id}-home`,\n                'aria-hidden': false,\n                'aria-labelled-by': `plyr-settings-toggle-${data.id}`,\n                role: 'tabpanel',\n            });\n\n            // Create the tab list\n            const tabs = utils.createElement('ul', {\n                role: 'tablist',\n            });\n\n            // Build the tabs\n            this.config.settings.forEach(type => {\n                const tab = utils.createElement('li', {\n                    role: 'tab',\n                    hidden: '',\n                });\n\n                const button = utils.createElement(\n                    'button',\n                    utils.extend(utils.getAttributesFromSelector(this.config.selectors.buttons.settings), {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--forward`,\n                        id: `plyr-settings-${data.id}-${type}-tab`,\n                        'aria-haspopup': true,\n                        'aria-controls': `plyr-settings-${data.id}-${type}`,\n                        'aria-expanded': false,\n                    }),\n                    i18n.get(type, this.config),\n                );\n\n                const value = utils.createElement('span', {\n                    class: this.config.classNames.menu.value,\n                });\n\n                // Speed contains HTML entities\n                value.innerHTML = data[type];\n\n                button.appendChild(value);\n                tab.appendChild(button);\n                tabs.appendChild(tab);\n\n                this.elements.settings.tabs[type] = tab;\n            });\n\n            home.appendChild(tabs);\n            inner.appendChild(home);\n\n            // Build the panes\n            this.config.settings.forEach(type => {\n                const pane = utils.createElement('div', {\n                    id: `plyr-settings-${data.id}-${type}`,\n                    'aria-hidden': true,\n                    'aria-labelled-by': `plyr-settings-${data.id}-${type}-tab`,\n                    role: 'tabpanel',\n                    tabindex: -1,\n                    hidden: '',\n                });\n\n                const back = utils.createElement(\n                    'button',\n                    {\n                        type: 'button',\n                        class: `${this.config.classNames.control} ${this.config.classNames.control}--back`,\n                        'aria-haspopup': true,\n                        'aria-controls': `plyr-settings-${data.id}-home`,\n                        'aria-expanded': false,\n                    },\n                    i18n.get(type, this.config),\n                );\n\n                pane.appendChild(back);\n\n                const options = utils.createElement('ul');\n\n                pane.appendChild(options);\n                inner.appendChild(pane);\n\n                this.elements.settings.panes[type] = pane;\n            });\n\n            form.appendChild(inner);\n            menu.appendChild(form);\n            container.appendChild(menu);\n\n            this.elements.settings.form = form;\n            this.elements.settings.menu = menu;\n        }\n\n        // Picture in picture button\n        if (this.config.controls.includes('pip') && support.pip) {\n            container.appendChild(controls.createButton.call(this, 'pip'));\n        }\n\n        // Airplay button\n        if (this.config.controls.includes('airplay') && support.airplay) {\n            container.appendChild(controls.createButton.call(this, 'airplay'));\n        }\n\n        // Toggle mute button\n        if (this.config.controls.includes('mute')) {\n            container.appendChild(controls.createButton.call(this, 'mute'));\n        }\n\n        // Volume range control\n        if (this.config.controls.includes('volume')) {\n            const volume = utils.createElement('div', {\n                class: 'plyr__volume',\n            });\n\n            // Set the attributes\n            const attributes = {\n                max: 1,\n                step: 0.05,\n                value: this.config.volume,\n            };\n\n            // Create the volume range slider\n            const range = controls.createRange.call(\n                this,\n                'volume',\n                utils.extend(attributes, {\n                    id: `plyr-volume-${data.id}`,\n                }),\n            );\n            volume.appendChild(range.label);\n            volume.appendChild(range.input);\n\n            this.elements.volume = volume;\n\n            container.appendChild(volume);\n        }\n\n        // Toggle fullscreen button\n        if (this.config.controls.includes('fullscreen')) {\n            container.appendChild(controls.createButton.call(this, 'fullscreen'));\n        }\n\n        // Larger overlaid play button\n        if (this.config.controls.includes('play-large')) {\n            this.elements.container.appendChild(controls.createButton.call(this, 'play-large'));\n        }\n\n        this.elements.controls = container;\n\n        if (this.isHTML5) {\n            controls.setQualityMenu.call(this, html5.getQualityOptions.call(this));\n        }\n\n        controls.setSpeedMenu.call(this);\n\n        return container;\n    },\n\n    // Insert controls\n    inject() {\n        // Sprite\n        if (this.config.loadSprite) {\n            const icon = controls.getIconUrl.call(this);\n\n            // Only load external sprite using AJAX\n            if (icon.absolute) {\n                utils.loadSprite(icon.url, 'sprite-plyr');\n            }\n        }\n\n        // Create a unique ID\n        this.id = Math.floor(Math.random() * 10000);\n\n        // Null by default\n        let container = null;\n        this.elements.controls = null;\n\n        // HTML or Element passed as the option\n        if (utils.is.string(this.config.controls) || utils.is.element(this.config.controls)) {\n            container = this.config.controls;\n        } else if (utils.is.function(this.config.controls)) {\n            // A custom function to build controls\n            // The function can return a HTMLElement or String\n            container = this.config.controls({\n                id: this.id,\n                seektime: this.config.seekTime,\n                title: this.config.title,\n            });\n        } else {\n            // Create controls\n            container = controls.create.call(this, {\n                id: this.id,\n                seektime: this.config.seekTime,\n                speed: this.speed,\n                quality: this.quality,\n                captions: captions.getLabel.call(this),\n                // TODO: Looping\n                // loop: 'None',\n            });\n        }\n\n        // Controls container\n        let target;\n\n        // Inject to custom location\n        if (utils.is.string(this.config.selectors.controls.container)) {\n            target = document.querySelector(this.config.selectors.controls.container);\n        }\n\n        // Inject into the container by default\n        if (!utils.is.element(target)) {\n            target = this.elements.container;\n        }\n\n        // Inject controls HTML\n        if (utils.is.element(container)) {\n            target.appendChild(container);\n        } else if (container) {\n            target.insertAdjacentHTML('beforeend', container);\n        }\n\n        // Find the elements if need be\n        if (!utils.is.element(this.elements.controls)) {\n            utils.findElements.call(this);\n        }\n\n        // Edge sometimes doesn't finish the paint so force a redraw\n        if (window.navigator.userAgent.includes('Edge')) {\n            utils.repaint(target);\n        }\n\n        // Setup tooltips\n        if (this.config.tooltips.controls) {\n            const labels = utils.getElements.call(\n                this,\n                [\n                    this.config.selectors.controls.wrapper,\n                    ' ',\n                    this.config.selectors.labels,\n                    ' .',\n                    this.config.classNames.hidden,\n                ].join(''),\n            );\n\n            Array.from(labels).forEach(label => {\n                utils.toggleClass(label, this.config.classNames.hidden, false);\n                utils.toggleClass(label, this.config.classNames.tooltip, true);\n                label.setAttribute('role', 'tooltip');\n            });\n        }\n    },\n};\n\nexport default controls;\n","// ==========================================================================\n// Plyr Event Listeners\n// ==========================================================================\n\nimport utils from './utils';\nimport controls from './controls';\nimport ui from './ui';\n\n// Sniff out the browser\nconst browser = utils.getBrowser();\n\nclass Listeners {\n    constructor(player) {\n        this.player = player;\n        this.lastKey = null;\n\n        this.handleKey = this.handleKey.bind(this);\n        this.toggleMenu = this.toggleMenu.bind(this);\n        this.firstTouch = this.firstTouch.bind(this);\n    }\n\n    // Handle key presses\n    handleKey(event) {\n        const code = event.keyCode ? event.keyCode : event.which;\n        const pressed = event.type === 'keydown';\n        const repeat = pressed && code === this.lastKey;\n\n        // Bail if a modifier key is set\n        if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\n            return;\n        }\n\n        // If the event is bubbled from the media element\n        // Firefox doesn't get the keycode for whatever reason\n        if (!utils.is.number(code)) {\n            return;\n        }\n\n        // Seek by the number keys\n        const seekByKey = () => {\n            // Divide the max duration into 10th's and times by the number value\n            this.player.currentTime = this.player.duration / 10 * (code - 48);\n        };\n\n        // Handle the key on keydown\n        // Reset on keyup\n        if (pressed) {\n            // Which keycodes should we prevent default\n            const preventDefault = [\n                48,\n                49,\n                50,\n                51,\n                52,\n                53,\n                54,\n                56,\n                57,\n                32,\n                75,\n                38,\n                40,\n                77,\n                39,\n                37,\n                70,\n                67,\n                73,\n                76,\n                79,\n            ];\n\n            // Check focused element\n            // and if the focused element is not editable (e.g. text input)\n            // and any that accept key input http://webaim.org/techniques/keyboard/\n            const focused = utils.getFocusElement();\n            if (utils.is.element(focused) && utils.matches(focused, this.player.config.selectors.editable)) {\n                return;\n            }\n\n            // If the code is found prevent default (e.g. prevent scrolling for arrows)\n            if (preventDefault.includes(code)) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n\n            switch (code) {\n                case 48:\n                case 49:\n                case 50:\n                case 51:\n                case 52:\n                case 53:\n                case 54:\n                case 55:\n                case 56:\n                case 57:\n                    // 0-9\n                    if (!repeat) {\n                        seekByKey();\n                    }\n                    break;\n\n                case 32:\n                case 75:\n                    // Space and K key\n                    if (!repeat) {\n                        this.player.togglePlay();\n                    }\n                    break;\n\n                case 38:\n                    // Arrow up\n                    this.player.increaseVolume(0.1);\n                    break;\n\n                case 40:\n                    // Arrow down\n                    this.player.decreaseVolume(0.1);\n                    break;\n\n                case 77:\n                    // M key\n                    if (!repeat) {\n                        this.player.muted = !this.player.muted;\n                    }\n                    break;\n\n                case 39:\n                    // Arrow forward\n                    this.player.forward();\n                    break;\n\n                case 37:\n                    // Arrow back\n                    this.player.rewind();\n                    break;\n\n                case 70:\n                    // F key\n                    this.player.fullscreen.toggle();\n                    break;\n\n                case 67:\n                    // C key\n                    if (!repeat) {\n                        this.player.toggleCaptions();\n                    }\n                    break;\n\n                case 76:\n                    // L key\n                    this.player.loop = !this.player.loop;\n                    break;\n\n                /* case 73:\n                    this.setLoop('start');\n                    break;\n\n                case 76:\n                    this.setLoop();\n                    break;\n\n                case 79:\n                    this.setLoop('end');\n                    break; */\n\n                default:\n                    break;\n            }\n\n            // Escape is handle natively when in full screen\n            // So we only need to worry about non native\n            if (!this.player.fullscreen.enabled && this.player.fullscreen.active && code === 27) {\n                this.player.fullscreen.toggle();\n            }\n\n            // Store last code for next cycle\n            this.lastKey = code;\n        } else {\n            this.lastKey = null;\n        }\n    }\n\n    // Toggle menu\n    toggleMenu(event) {\n        controls.toggleMenu.call(this.player, event);\n    }\n\n    // Device is touch enabled\n    firstTouch() {\n        this.player.touch = true;\n\n        // Add touch class\n        utils.toggleClass(this.player.elements.container, this.player.config.classNames.isTouch, true);\n\n        // Clean up\n        utils.off(document.body, 'touchstart', this.firstTouch);\n    }\n\n    // Global window & document listeners\n    global(toggle = true) {\n        // Keyboard shortcuts\n        if (this.player.config.keyboard.global) {\n            utils.toggleListener(window, 'keydown keyup', this.handleKey, toggle, false);\n        }\n\n        // Click anywhere closes menu\n        utils.toggleListener(document.body, 'click', this.toggleMenu, toggle);\n\n        // Detect touch by events\n        utils.on(document.body, 'touchstart', this.firstTouch);\n    }\n\n    // Container listeners\n    container() {\n        // Keyboard shortcuts\n        if (!this.player.config.keyboard.global && this.player.config.keyboard.focused) {\n            utils.on(this.player.elements.container, 'keydown keyup', this.handleKey, false);\n        }\n\n        // Detect tab focus\n        // Remove class on blur/focusout\n        utils.on(this.player.elements.container, 'focusout', event => {\n            utils.toggleClass(event.target, this.player.config.classNames.tabFocus, false);\n        });\n\n        // Add classname to tabbed elements\n        utils.on(this.player.elements.container, 'keydown', event => {\n            if (event.keyCode !== 9) {\n                return;\n            }\n\n            // Delay the adding of classname until the focus has changed\n            // This event fires before the focusin event\n            setTimeout(() => {\n                utils.toggleClass(utils.getFocusElement(), this.player.config.classNames.tabFocus, true);\n            }, 0);\n        });\n\n        // Toggle controls visibility based on mouse movement\n        if (this.player.config.hideControls) {\n            // Toggle controls on mouse events and entering fullscreen\n            utils.on(this.player.elements.container, 'mouseenter mouseleave mousemove touchstart touchend touchmove enterfullscreen exitfullscreen', event => {\n                this.player.toggleControls(event);\n            });\n        }\n    }\n\n    // Listen for media events\n    media() {\n        // Time change on media\n        utils.on(this.player.media, 'timeupdate seeking', event => ui.timeUpdate.call(this.player, event));\n\n        // Display duration\n        utils.on(this.player.media, 'durationchange loadedmetadata', event => ui.durationUpdate.call(this.player, event));\n\n        // Check for audio tracks on load\n        // We can't use `loadedmetadata` as it doesn't seem to have audio tracks at that point\n        utils.on(this.player.media, 'loadeddata', () => {\n            utils.toggleHidden(this.player.elements.volume, !this.player.hasAudio);\n            utils.toggleHidden(this.player.elements.buttons.mute, !this.player.hasAudio);\n        });\n\n        // Handle the media finishing\n        utils.on(this.player.media, 'ended', () => {\n            // Show poster on end\n            if (this.player.isHTML5 && this.player.isVideo && this.player.config.showPosterOnEnd) {\n                // Restart\n                this.player.restart();\n\n                // Re-load media\n                this.player.media.load();\n            }\n        });\n\n        // Check for buffer progress\n        utils.on(this.player.media, 'progress playing', event => ui.updateProgress.call(this.player, event));\n\n        // Handle volume changes\n        utils.on(this.player.media, 'volumechange', event => ui.updateVolume.call(this.player, event));\n\n        // Handle play/pause\n        utils.on(this.player.media, 'playing play pause ended emptied', event => ui.checkPlaying.call(this.player, event));\n\n        // Loading state\n        utils.on(this.player.media, 'waiting canplay seeked playing', event => ui.checkLoading.call(this.player, event));\n\n        // Check if media failed to load\n        // utils.on(this.player.media, 'play', event => ui.checkFailed.call(this.player, event));\n\n        // If autoplay, then load advertisement if required\n        // TODO: Show some sort of loading state while the ad manager loads else there's a delay before ad shows\n        utils.on(this.player.media, 'playing', () => {\n            if (!this.player.ads) {\n                return;\n            }\n\n            // If ads are enabled, wait for them first\n            if (this.player.ads.enabled && !this.player.ads.initialized) {\n                // Wait for manager response\n                this.player.ads.managerPromise.then(() => this.player.ads.play()).catch(() => this.player.play());\n            }\n        });\n\n        // Click video\n        if (this.player.supported.ui && this.player.config.clickToPlay && !this.player.isAudio) {\n            // Re-fetch the wrapper\n            const wrapper = utils.getElement.call(this.player, `.${this.player.config.classNames.video}`);\n\n            // Bail if there's no wrapper (this should never happen)\n            if (!utils.is.element(wrapper)) {\n                return;\n            }\n\n            // On click play, pause ore restart\n            utils.on(wrapper, 'click', () => {\n                // Touch devices will just show controls (if we're hiding controls)\n                if (this.player.config.hideControls && this.player.touch && !this.player.paused) {\n                    return;\n                }\n\n                if (this.player.paused) {\n                    this.player.play();\n                } else if (this.player.ended) {\n                    this.player.restart();\n                    this.player.play();\n                } else {\n                    this.player.pause();\n                }\n            });\n        }\n\n        // Disable right click\n        if (this.player.supported.ui && this.player.config.disableContextMenu) {\n            utils.on(\n                this.player.elements.wrapper,\n                'contextmenu',\n                event => {\n                    event.preventDefault();\n                },\n                false,\n            );\n        }\n\n        // Volume change\n        utils.on(this.player.media, 'volumechange', () => {\n            // Save to storage\n            this.player.storage.set({ volume: this.player.volume, muted: this.player.muted });\n        });\n\n        // Speed change\n        utils.on(this.player.media, 'ratechange', () => {\n            // Update UI\n            controls.updateSetting.call(this.player, 'speed');\n\n            // Save to storage\n            this.player.storage.set({ speed: this.player.speed });\n        });\n\n        // Quality request\n        utils.on(this.player.media, 'qualityrequested', event => {\n            // Save to storage\n            this.player.storage.set({ quality: event.detail.quality });\n        });\n\n        // Quality change\n        utils.on(this.player.media, 'qualitychange', event => {\n            // Update UI\n            controls.updateSetting.call(this.player, 'quality', null, event.detail.quality);\n        });\n\n        // Caption language change\n        utils.on(this.player.media, 'languagechange', () => {\n            // Update UI\n            controls.updateSetting.call(this.player, 'captions');\n\n            // Save to storage\n            this.player.storage.set({ language: this.player.language });\n        });\n\n        // Captions toggle\n        utils.on(this.player.media, 'captionsenabled captionsdisabled', () => {\n            // Update UI\n            controls.updateSetting.call(this.player, 'captions');\n\n            // Save to storage\n            this.player.storage.set({ captions: this.player.captions.active });\n        });\n\n        // Proxy events to container\n        // Bubble up key events for Edge\n        utils.on(this.player.media, this.player.config.events.concat([\n            'keyup',\n            'keydown',\n        ]).join(' '), event => {\n            let detail = {};\n\n            // Get error details from media\n            if (event.type === 'error') {\n                detail = this.player.media.error;\n            }\n\n            utils.dispatchEvent.call(this.player, this.player.elements.container, event.type, true, detail);\n        });\n    }\n\n    // Listen for control events\n    controls() {\n        // IE doesn't support input event, so we fallback to change\n        const inputEvent = browser.isIE ? 'change' : 'input';\n\n        // Run default and custom handlers\n        const proxy = (event, defaultHandler, customHandlerKey) => {\n            const customHandler = this.player.config.listeners[customHandlerKey];\n            const hasCustomHandler = utils.is.function(customHandler);\n            let returned = true;\n\n            // Execute custom handler\n            if (hasCustomHandler) {\n                returned = customHandler.call(this.player, event);\n            }\n\n            // Only call default handler if not prevented in custom handler\n            if (returned && utils.is.function(defaultHandler)) {\n                defaultHandler.call(this.player, event);\n            }\n        };\n\n        // Trigger custom and default handlers\n        const on = (element, type, defaultHandler, customHandlerKey, passive = true) => {\n            const customHandler = this.player.config.listeners[customHandlerKey];\n            const hasCustomHandler = utils.is.function(customHandler);\n\n            utils.on(element, type, event => proxy(event, defaultHandler, customHandlerKey), passive && !hasCustomHandler);\n        };\n\n        // Play/pause toggle\n        on(this.player.elements.buttons.play, 'click', this.player.togglePlay, 'play');\n\n        // Pause\n        on(this.player.elements.buttons.restart, 'click', this.player.restart, 'restart');\n\n        // Rewind\n        on(this.player.elements.buttons.rewind, 'click', this.player.rewind, 'rewind');\n\n        // Rewind\n        on(this.player.elements.buttons.fastForward, 'click', this.player.forward, 'fastForward');\n\n        // Mute toggle\n        on(\n            this.player.elements.buttons.mute,\n            'click',\n            () => {\n                this.player.muted = !this.player.muted;\n            },\n            'mute',\n        );\n\n        // Captions toggle\n        on(this.player.elements.buttons.captions, 'click', this.player.toggleCaptions);\n\n        // Fullscreen toggle\n        on(\n            this.player.elements.buttons.fullscreen,\n            'click',\n            () => {\n                this.player.fullscreen.toggle();\n            },\n            'fullscreen',\n        );\n\n        // Picture-in-Picture\n        on(\n            this.player.elements.buttons.pip,\n            'click',\n            () => {\n                this.player.pip = 'toggle';\n            },\n            'pip',\n        );\n\n        // Airplay\n        on(this.player.elements.buttons.airplay, 'click', this.player.airplay, 'airplay');\n\n        // Settings menu\n        on(this.player.elements.buttons.settings, 'click', event => {\n            controls.toggleMenu.call(this.player, event);\n        });\n\n        // Settings menu\n        on(this.player.elements.settings.form, 'click', event => {\n            event.stopPropagation();\n\n            // Settings menu items - use event delegation as items are added/removed\n            if (utils.matches(event.target, this.player.config.selectors.inputs.language)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.language = event.target.value;\n                    },\n                    'language',\n                );\n            } else if (utils.matches(event.target, this.player.config.selectors.inputs.quality)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.quality = event.target.value;\n                    },\n                    'quality',\n                );\n            } else if (utils.matches(event.target, this.player.config.selectors.inputs.speed)) {\n                proxy(\n                    event,\n                    () => {\n                        this.player.speed = parseFloat(event.target.value);\n                    },\n                    'speed',\n                );\n            } else {\n                controls.showTab.call(this.player, event);\n            }\n        });\n\n        // Seek\n        on(\n            this.player.elements.inputs.seek,\n            inputEvent,\n            event => {\n                this.player.currentTime = event.target.value / event.target.max * this.player.duration;\n            },\n            'seek',\n        );\n\n        // Current time invert\n        // Only if one time element is used for both currentTime and duration\n        if (this.player.config.toggleInvert && !utils.is.element(this.player.elements.display.duration)) {\n            on(this.player.elements.display.currentTime, 'click', () => {\n                // Do nothing if we're at the start\n                if (this.player.currentTime === 0) {\n                    return;\n                }\n\n                this.player.config.invertTime = !this.player.config.invertTime;\n                ui.timeUpdate.call(this.player);\n            });\n        }\n\n        // Volume\n        on(\n            this.player.elements.inputs.volume,\n            inputEvent,\n            event => {\n                this.player.volume = event.target.value;\n            },\n            'volume',\n        );\n\n        // Polyfill for lower fill in <input type=\"range\"> for webkit\n        if (browser.isWebkit) {\n            on(utils.getElements.call(this.player, 'input[type=\"range\"]'), 'input', event => {\n                controls.updateRangeFill.call(this.player, event.target);\n            });\n        }\n\n        // Seek tooltip\n        on(this.player.elements.progress, 'mouseenter mouseleave mousemove', event => controls.updateSeekTooltip.call(this.player, event));\n\n        // Toggle controls visibility based on mouse movement\n        if (this.player.config.hideControls) {\n            // Watch for cursor over controls so they don't hide when trying to interact\n            on(this.player.elements.controls, 'mouseenter mouseleave', event => {\n                this.player.elements.controls.hover = !this.player.touch && event.type === 'mouseenter';\n            });\n\n            // Watch for cursor over controls so they don't hide when trying to interact\n            on(this.player.elements.controls, 'mousedown mouseup touchstart touchend touchcancel', event => {\n                this.player.elements.controls.pressed = [\n                    'mousedown',\n                    'touchstart',\n                ].includes(event.type);\n            });\n\n            // Focus in/out on controls\n            on(this.player.elements.controls, 'focusin focusout', event => {\n                this.player.toggleControls(event);\n            });\n        }\n\n        // Mouse wheel for volume\n        on(\n            this.player.elements.inputs.volume,\n            'wheel',\n            event => {\n                // Detect \"natural\" scroll - suppored on OS X Safari only\n                // Other browsers on OS X will be inverted until support improves\n                const inverted = event.webkitDirectionInvertedFromDevice;\n                const step = 1 / 50;\n                let direction = 0;\n\n                // Scroll down (or up on natural) to decrease\n                if (event.deltaY < 0 || event.deltaX > 0) {\n                    if (inverted) {\n                        this.player.decreaseVolume(step);\n                        direction = -1;\n                    } else {\n                        this.player.increaseVolume(step);\n                        direction = 1;\n                    }\n                }\n\n                // Scroll up (or down on natural) to increase\n                if (event.deltaY > 0 || event.deltaX < 0) {\n                    if (inverted) {\n                        this.player.increaseVolume(step);\n                        direction = 1;\n                    } else {\n                        this.player.decreaseVolume(step);\n                        direction = -1;\n                    }\n                }\n\n                // Don't break page scrolling at max and min\n                if ((direction === 1 && this.player.media.volume < 1) || (direction === -1 && this.player.media.volume > 0)) {\n                    event.preventDefault();\n                }\n            },\n            'volume',\n            false,\n        );\n    }\n\n    // Reset on destroy\n    clear() {\n        this.global(false);\n    }\n}\n\nexport default Listeners;\n","// ==========================================================================\n// Plyr storage\n// ==========================================================================\n\nimport utils from './utils';\n\nclass Storage {\n    constructor(player) {\n        this.enabled = player.config.storage.enabled;\n        this.key = player.config.storage.key;\n    }\n\n    // Check for actual support (see if we can use it)\n    static get supported() {\n        try {\n            if (!('localStorage' in window)) {\n                return false;\n            }\n\n            const test = '___test';\n\n            // Try to use it (it might be disabled, e.g. user is in private mode)\n            // see: https://github.com/sampotts/plyr/issues/131\n            window.localStorage.setItem(test, test);\n            window.localStorage.removeItem(test);\n\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    get(key) {\n        if (!Storage.supported) {\n            return null;\n        }\n\n        const store = window.localStorage.getItem(this.key);\n\n        if (utils.is.empty(store)) {\n            return null;\n        }\n\n        const json = JSON.parse(store);\n\n        return utils.is.string(key) && key.length ? json[key] : json;\n    }\n\n    set(object) {\n        // Bail if we don't have localStorage support or it's disabled\n        if (!Storage.supported || !this.enabled) {\n            return;\n        }\n\n        // Can only store objectst\n        if (!utils.is.object(object)) {\n            return;\n        }\n\n        // Get current storage\n        let storage = this.get();\n\n        // Default to empty object\n        if (utils.is.empty(storage)) {\n            storage = {};\n        }\n\n        // Update the working copy of the values\n        utils.extend(storage, object);\n\n        // Update storage\n        window.localStorage.setItem(this.key, JSON.stringify(storage));\n    }\n}\n\nexport default Storage;\n","// ==========================================================================\n// Advertisement plugin using Google IMA HTML5 SDK\n// Create an account with our ad partner, vi here:\n// https://www.vi.ai/publisher-video-monetization/\n// ==========================================================================\n\n/* global google */\n\nimport utils from '../utils';\nimport i18n from '../i18n';\n\nclass Ads {\n    /**\n     * Ads constructor.\n     * @param {object} player\n     * @return {Ads}\n     */\n    constructor(player) {\n        this.player = player;\n        this.publisherId = player.config.ads.publisherId;\n        this.enabled = player.isHTML5 && player.isVideo && player.config.ads.enabled && utils.is.string(this.publisherId) && this.publisherId.length;\n        this.playing = false;\n        this.initialized = false;\n        this.elements = {\n            container: null,\n            displayContainer: null,\n        };\n        this.manager = null;\n        this.loader = null;\n        this.cuePoints = null;\n        this.events = {};\n        this.safetyTimer = null;\n        this.countdownTimer = null;\n\n        // Setup a promise to resolve when the IMA manager is ready\n        this.managerPromise = new Promise((resolve, reject) => {\n            // The ad is loaded and ready\n            this.on('loaded', resolve);\n\n            // Ads failed\n            this.on('error', reject);\n        });\n\n        this.load();\n    }\n\n    /**\n     * Load the IMA SDK\n     */\n    load() {\n        if (this.enabled) {\n            // Check if the Google IMA3 SDK is loaded or load it ourselves\n            if (!utils.is.object(window.google) || !utils.is.object(window.google.ima)) {\n                utils\n                    .loadScript(this.player.config.urls.googleIMA.api)\n                    .then(() => {\n                        this.ready();\n                    })\n                    .catch(() => {\n                        // Script failed to load or is blocked\n                        this.trigger('error', new Error('Google IMA SDK failed to load'));\n                    });\n            } else {\n                this.ready();\n            }\n        }\n    }\n\n    /**\n     * Get the ads instance ready\n     */\n    ready() {\n        // Start ticking our safety timer. If the whole advertisement\n        // thing doesn't resolve within our set time; we bail\n        this.startSafetyTimer(12000, 'ready()');\n\n        // Clear the safety timer\n        this.managerPromise.then(() => {\n            this.clearSafetyTimer('onAdsManagerLoaded()');\n        });\n\n        // Set listeners on the Plyr instance\n        this.listeners();\n\n        // Setup the IMA SDK\n        this.setupIMA();\n    }\n\n    // Build the default tag URL\n    get tagUrl() {\n        const params = {\n            AV_PUBLISHERID: '58c25bb0073ef448b1087ad6',\n            AV_CHANNELID: '5a0458dc28a06145e4519d21',\n            AV_URL: location.hostname,\n            cb: Date.now(),\n            AV_WIDTH: 640,\n            AV_HEIGHT: 480,\n            AV_CDIM2: this.publisherId,\n        };\n\n        const base = 'https://go.aniview.com/api/adserver6/vast/';\n\n        return `${base}?${utils.buildUrlParams(params)}`;\n    }\n\n    /**\n     * In order for the SDK to display ads for our video, we need to tell it where to put them,\n     * so here we define our ad container. This div is set up to render on top of the video player.\n     * Using the code below, we tell the SDK to render ads within that div. We also provide a\n     * handle to the content video player - the SDK will poll the current time of our player to\n     * properly place mid-rolls. After we create the ad display container, we initialize it. On\n     * mobile devices, this initialization is done as the result of a user action.\n     */\n    setupIMA() {\n        // Create the container for our advertisements\n        this.elements.container = utils.createElement('div', {\n            class: this.player.config.classNames.ads,\n        });\n        this.player.elements.container.appendChild(this.elements.container);\n\n        // So we can run VPAID2\n        google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED);\n\n        // Set language\n        google.ima.settings.setLocale(this.player.config.ads.language);\n\n        // We assume the adContainer is the video container of the plyr element\n        // that will house the ads\n        this.elements.displayContainer = new google.ima.AdDisplayContainer(this.elements.container);\n\n        // Request video ads to be pre-loaded\n        this.requestAds();\n    }\n\n    /**\n     * Request advertisements\n     */\n    requestAds() {\n        const { container } = this.player.elements;\n\n        try {\n            // Create ads loader\n            this.loader = new google.ima.AdsLoader(this.elements.displayContainer);\n\n            // Listen and respond to ads loaded and error events\n            this.loader.addEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, event => this.onAdsManagerLoaded(event), false);\n            this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error), false);\n\n            // Request video ads\n            const request = new google.ima.AdsRequest();\n            request.adTagUrl = this.tagUrl;\n\n            // Specify the linear and nonlinear slot sizes. This helps the SDK\n            // to select the correct creative if multiple are returned\n            request.linearAdSlotWidth = container.offsetWidth;\n            request.linearAdSlotHeight = container.offsetHeight;\n            request.nonLinearAdSlotWidth = container.offsetWidth;\n            request.nonLinearAdSlotHeight = container.offsetHeight;\n\n            // We only overlay ads as we only support video.\n            request.forceNonLinearFullSlot = false;\n\n            this.loader.requestAds(request);\n        } catch (e) {\n            this.onAdError(e);\n        }\n    }\n\n    /**\n     * Update the ad countdown\n     * @param {boolean} start\n     */\n    pollCountdown(start = false) {\n        if (!start) {\n            clearInterval(this.countdownTimer);\n            this.elements.container.removeAttribute('data-badge-text');\n            return;\n        }\n\n        const update = () => {\n            const time = utils.formatTime(Math.max(this.manager.getRemainingTime(), 0));\n            const label = `${i18n.get('advertisement', this.player.config)} - ${time}`;\n            this.elements.container.setAttribute('data-badge-text', label);\n        };\n\n        this.countdownTimer = setInterval(update, 100);\n    }\n\n    /**\n     * This method is called whenever the ads are ready inside the AdDisplayContainer\n     * @param {Event} adsManagerLoadedEvent\n     */\n    onAdsManagerLoaded(event) {\n        // Get the ads manager\n        const settings = new google.ima.AdsRenderingSettings();\n\n        // Tell the SDK to save and restore content video state on our behalf\n        settings.restoreCustomPlaybackStateOnAdBreakComplete = true;\n        settings.enablePreloading = true;\n\n        // The SDK is polling currentTime on the contentPlayback. And needs a duration\n        // so it can determine when to start the mid- and post-roll\n        this.manager = event.getAdsManager(this.player, settings);\n\n        // Get the cue points for any mid-rolls by filtering out the pre- and post-roll\n        this.cuePoints = this.manager.getCuePoints();\n\n        // Add advertisement cue's within the time line if available\n        if (!utils.is.empty(this.cuePoints)) {\n            this.cuePoints.forEach(cuePoint => {\n                if (cuePoint !== 0 && cuePoint !== -1 && cuePoint < this.player.duration) {\n                    const seekElement = this.player.elements.progress;\n\n                    if (utils.is.element(seekElement)) {\n                        const cuePercentage = 100 / this.player.duration * cuePoint;\n                        const cue = utils.createElement('span', {\n                            class: this.player.config.classNames.cues,\n                        });\n\n                        cue.style.left = `${cuePercentage.toString()}%`;\n                        seekElement.appendChild(cue);\n                    }\n                }\n            });\n        }\n\n        // Get skippable state\n        // TODO: Skip button\n        // this.manager.getAdSkippableState();\n\n        // Set volume to match player\n        this.manager.setVolume(this.player.volume);\n\n        // Add listeners to the required events\n        // Advertisement error events\n        this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, error => this.onAdError(error));\n\n        // Advertisement regular events\n        Object.keys(google.ima.AdEvent.Type).forEach(type => {\n            this.manager.addEventListener(google.ima.AdEvent.Type[type], event => this.onAdEvent(event));\n        });\n\n        // Resolve our adsManager\n        this.trigger('loaded');\n    }\n\n    /**\n     * This is where all the event handling takes place. Retrieve the ad from the event. Some\n     * events (e.g. ALL_ADS_COMPLETED) don't have the ad object associated\n     * https://developers.google.com/interactive-media-ads/docs/sdks/html5/v3/apis#ima.AdEvent.Type\n     * @param {Event} event\n     */\n    onAdEvent(event) {\n        const { container } = this.player.elements;\n\n        // Retrieve the ad from the event. Some events (e.g. ALL_ADS_COMPLETED)\n        // don't have ad object associated\n        const ad = event.getAd();\n\n        // Proxy event\n        const dispatchEvent = type => {\n            const event = `ads${type.replace(/_/g, '').toLowerCase()}`;\n            utils.dispatchEvent.call(this.player, this.player.media, event);\n        };\n\n        switch (event.type) {\n            case google.ima.AdEvent.Type.LOADED:\n                // This is the first event sent for an ad - it is possible to determine whether the\n                // ad is a video ad or an overlay\n                this.trigger('loaded');\n\n                // Bubble event\n                dispatchEvent(event.type);\n\n                // Start countdown\n                this.pollCountdown(true);\n\n                if (!ad.isLinear()) {\n                    // Position AdDisplayContainer correctly for overlay\n                    ad.width = container.offsetWidth;\n                    ad.height = container.offsetHeight;\n                }\n\n                // console.info('Ad type: ' + event.getAd().getAdPodInfo().getPodIndex());\n                // console.info('Ad time: ' + event.getAd().getAdPodInfo().getTimeOffset());\n                break;\n\n            case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:\n                // All ads for the current videos are done. We can now request new advertisements\n                // in case the video is re-played\n\n                // Fire event\n                dispatchEvent(event.type);\n\n                // TODO: Example for what happens when a next video in a playlist would be loaded.\n                // So here we load a new video when all ads are done.\n                // Then we load new ads within a new adsManager. When the video\n                // Is started - after - the ads are loaded, then we get ads.\n                // You can also easily test cancelling and reloading by running\n                // player.ads.cancel() and player.ads.play from the console I guess.\n                // this.player.source = {\n                //     type: 'video',\n                //     title: 'View From A Blue Moon',\n                //     sources: [{\n                //         src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.mp4', type:\n                // 'video/mp4', }], poster:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.jpg', tracks:\n                // [ { kind: 'captions', label: 'English', srclang: 'en', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.en.vtt',\n                // default: true, }, { kind: 'captions', label: 'French', srclang: 'fr', src:\n                // 'https://cdn.plyr.io/static/demo/View_From_A_Blue_Moon_Trailer-HD.fr.vtt', }, ],\n                // };\n\n                // TODO: So there is still this thing where a video should only be allowed to start\n                // playing when the IMA SDK is ready or has failed\n\n                this.loadAds();\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:\n                // This event indicates the ad has started - the video player can adjust the UI,\n                // for example display a pause button and remaining time. Fired when content should\n                // be paused. This usually happens right before an ad is about to cover the content\n\n                dispatchEvent(event.type);\n\n                this.pauseContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:\n                // This event indicates the ad has finished - the video player can perform\n                // appropriate UI actions, such as removing the timer for remaining time detection.\n                // Fired when content should be resumed. This usually happens when an ad finishes\n                // or collapses\n\n                dispatchEvent(event.type);\n\n                this.pollCountdown();\n\n                this.resumeContent();\n\n                break;\n\n            case google.ima.AdEvent.Type.STARTED:\n            case google.ima.AdEvent.Type.MIDPOINT:\n            case google.ima.AdEvent.Type.COMPLETE:\n            case google.ima.AdEvent.Type.IMPRESSION:\n            case google.ima.AdEvent.Type.CLICK:\n                dispatchEvent(event.type);\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Any ad error handling comes through here\n     * @param {Event} event\n     */\n    onAdError(event) {\n        this.cancel();\n        this.player.debug.warn('Ads error', event);\n    }\n\n    /**\n     * Setup hooks for Plyr and window events. This ensures\n     * the mid- and post-roll launch at the correct time. And\n     * resize the advertisement when the player resizes\n     */\n    listeners() {\n        const { container } = this.player.elements;\n        let time;\n\n        // Add listeners to the required events\n        this.player.on('ended', () => {\n            this.loader.contentComplete();\n        });\n\n        this.player.on('seeking', () => {\n            time = this.player.currentTime;\n            return time;\n        });\n\n        this.player.on('seeked', () => {\n            const seekedTime = this.player.currentTime;\n\n            if (utils.is.empty(this.cuePoints)) {\n                return;\n            }\n\n            this.cuePoints.forEach((cuePoint, index) => {\n                if (time < cuePoint && cuePoint < seekedTime) {\n                    this.manager.discardAdBreak();\n                    this.cuePoints.splice(index, 1);\n                }\n            });\n        });\n\n        // Listen to the resizing of the window. And resize ad accordingly\n        // TODO: eventually implement ResizeObserver\n        window.addEventListener('resize', () => {\n            if (this.manager) {\n                this.manager.resize(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n            }\n        });\n    }\n\n    /**\n     * Initialize the adsManager and start playing advertisements\n     */\n    play() {\n        const { container } = this.player.elements;\n\n        if (!this.managerPromise) {\n            this.resumeContent();\n        }\n\n        // Play the requested advertisement whenever the adsManager is ready\n        this.managerPromise\n            .then(() => {\n                // Initialize the container. Must be done via a user action on mobile devices\n                this.elements.displayContainer.initialize();\n\n                try {\n                    if (!this.initialized) {\n                        // Initialize the ads manager. Ad rules playlist will start at this time\n                        this.manager.init(container.offsetWidth, container.offsetHeight, google.ima.ViewMode.NORMAL);\n\n                        // Call play to start showing the ad. Single video and overlay ads will\n                        // start at this time; the call will be ignored for ad rules\n                        this.manager.start();\n                    }\n\n                    this.initialized = true;\n                } catch (adError) {\n                    // An error may be thrown if there was a problem with the\n                    // VAST response\n                    this.onAdError(adError);\n                }\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Resume our video\n     */\n    resumeContent() {\n        // Hide the advertisement container\n        this.elements.container.style.zIndex = '';\n\n        // Ad is stopped\n        this.playing = false;\n\n        // Play our video\n        if (this.player.currentTime < this.player.duration) {\n            this.player.play();\n        }\n    }\n\n    /**\n     * Pause our video\n     */\n    pauseContent() {\n        // Show the advertisement container\n        this.elements.container.style.zIndex = 3;\n\n        // Ad is playing.\n        this.playing = true;\n\n        // Pause our video.\n        this.player.pause();\n    }\n\n    /**\n     * Destroy the adsManager so we can grab new ads after this. If we don't then we're not\n     * allowed to call new ads based on google policies, as they interpret this as an accidental\n     * video requests. https://developers.google.com/interactive-\n     * media-ads/docs/sdks/android/faq#8\n     */\n    cancel() {\n        // Pause our video\n        if (this.initialized) {\n            this.resumeContent();\n        }\n\n        // Tell our instance that we're done for now\n        this.trigger('error');\n\n        // Re-create our adsManager\n        this.loadAds();\n    }\n\n    /**\n     * Re-create our adsManager\n     */\n    loadAds() {\n        // Tell our adsManager to go bye bye\n        this.managerPromise\n            .then(() => {\n                // Destroy our adsManager\n                if (this.manager) {\n                    this.manager.destroy();\n                }\n\n                // Re-set our adsManager promises\n                this.managerPromise = new Promise(resolve => {\n                    this.on('loaded', resolve);\n                    this.player.debug.log(this.manager);\n                });\n\n                // Now request some new advertisements\n                this.requestAds();\n            })\n            .catch(() => {});\n    }\n\n    /**\n     * Handles callbacks after an ad event was invoked\n     * @param {string} event - Event type\n     */\n    trigger(event, ...args) {\n        const handlers = this.events[event];\n\n        if (utils.is.array(handlers)) {\n            handlers.forEach(handler => {\n                if (utils.is.function(handler)) {\n                    handler.apply(this, args);\n                }\n            });\n        }\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     * @return {Ads}\n     */\n    on(event, callback) {\n        if (!utils.is.array(this.events[event])) {\n            this.events[event] = [];\n        }\n\n        this.events[event].push(callback);\n\n        return this;\n    }\n\n    /**\n     * Setup a safety timer for when the ad network doesn't respond for whatever reason.\n     * The advertisement has 12 seconds to get its things together. We stop this timer when the\n     * advertisement is playing, or when a user action is required to start, then we clear the\n     * timer on ad ready\n     * @param {number} time\n     * @param {string} from\n     */\n    startSafetyTimer(time, from) {\n        this.player.debug.log(`Safety timer invoked from: ${from}`);\n\n        this.safetyTimer = setTimeout(() => {\n            this.cancel();\n            this.clearSafetyTimer('startSafetyTimer()');\n        }, time);\n    }\n\n    /**\n     * Clear our safety timer(s)\n     * @param {string} from\n     */\n    clearSafetyTimer(from) {\n        if (!utils.is.nullOrUndefined(this.safetyTimer)) {\n            this.player.debug.log(`Safety timer cleared from: ${from}`);\n\n            clearTimeout(this.safetyTimer);\n            this.safetyTimer = null;\n        }\n    }\n}\n\nexport default Ads;\n","// ==========================================================================\n// YouTube plugin\n// ==========================================================================\n\nimport utils from './../utils';\nimport controls from './../controls';\nimport ui from './../ui';\n\n// Standardise YouTube quality unit\nfunction mapQualityUnit(input) {\n    switch (input) {\n        case 'hd2160':\n            return 2160;\n\n        case 2160:\n            return 'hd2160';\n\n        case 'hd1440':\n            return 1440;\n\n        case 1440:\n            return 'hd1440';\n\n        case 'hd1080':\n            return 1080;\n\n        case 1080:\n            return 'hd1080';\n\n        case 'hd720':\n            return 720;\n\n        case 720:\n            return 'hd720';\n\n        case 'large':\n            return 480;\n\n        case 480:\n            return 'large';\n\n        case 'medium':\n            return 360;\n\n        case 360:\n            return 'medium';\n\n        case 'small':\n            return 240;\n\n        case 240:\n            return 'small';\n\n        default:\n            return 'default';\n    }\n}\n\nfunction mapQualityUnits(levels) {\n    if (utils.is.empty(levels)) {\n        return levels;\n    }\n\n    return utils.dedupe(levels.map(level => mapQualityUnit(level)));\n}\n\nconst youtube = {\n    setup() {\n        // Add embed class for responsive\n        utils.toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set aspect ratio\n        youtube.setAspectRatio.call(this);\n\n        // Setup API\n        if (utils.is.object(window.YT) && utils.is.function(window.YT.Player)) {\n            youtube.ready.call(this);\n        } else {\n            // Load the API\n            utils.loadScript(this.config.urls.youtube.api).catch(error => {\n                this.debug.warn('YouTube API failed to load', error);\n            });\n\n            // Setup callback for the API\n            // YouTube has it's own system of course...\n            window.onYouTubeReadyCallbacks = window.onYouTubeReadyCallbacks || [];\n\n            // Add to queue\n            window.onYouTubeReadyCallbacks.push(() => {\n                youtube.ready.call(this);\n            });\n\n            // Set callback to process queue\n            window.onYouTubeIframeAPIReady = () => {\n                window.onYouTubeReadyCallbacks.forEach(callback => {\n                    callback();\n                });\n            };\n        }\n    },\n\n    // Get the media title\n    getTitle(videoId) {\n        // Try via undocumented API method first\n        // This method disappears now and then though...\n        // https://github.com/sampotts/plyr/issues/709\n        if (utils.is.function(this.embed.getVideoData)) {\n            const { title } = this.embed.getVideoData();\n\n            if (utils.is.empty(title)) {\n                this.config.title = title;\n                ui.setTitle.call(this);\n                return;\n            }\n        }\n\n        // Or via Google API\n        const key = this.config.keys.google;\n        if (utils.is.string(key) && !utils.is.empty(key)) {\n            const url = `https://www.googleapis.com/youtube/v3/videos?id=${videoId}&key=${key}&fields=items(snippet(title))&part=snippet`;\n\n            utils\n                .fetch(url)\n                .then(result => {\n                    if (utils.is.object(result)) {\n                        this.config.title = result.items[0].snippet.title;\n                        ui.setTitle.call(this);\n                    }\n                })\n                .catch(() => {});\n        }\n    },\n\n    // Set aspect ratio\n    setAspectRatio() {\n        const ratio = this.config.ratio.split(':');\n        this.elements.wrapper.style.paddingBottom = `${100 / ratio[0] * ratio[1]}%`;\n    },\n\n    // API ready\n    ready() {\n        const player = this;\n\n        // Ignore already setup (race condition)\n        const currentId = player.media.getAttribute('id');\n        if (!utils.is.empty(currentId) && currentId.startsWith('youtube-')) {\n            return;\n        }\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (utils.is.empty(source)) {\n            source = player.media.getAttribute(this.config.attributes.embed.id);\n        }\n\n        // Replace the <iframe> with a <div> due to YouTube API issues\n        const videoId = utils.parseYouTubeId(source);\n        const id = utils.generateId(player.provider);\n        const container = utils.createElement('div', { id });\n        player.media = utils.replaceElement(container, player.media);\n\n        // Setup instance\n        // https://developers.google.com/youtube/iframe_api_reference\n        player.embed = new window.YT.Player(id, {\n            videoId,\n            playerVars: {\n                autoplay: player.config.autoplay ? 1 : 0, // Autoplay\n                controls: player.supported.ui ? 0 : 1, // Only show controls if not fully supported\n                rel: 0, // No related vids\n                showinfo: 0, // Hide info\n                iv_load_policy: 3, // Hide annotations\n                modestbranding: 1, // Hide logos as much as possible (they still show one in the corner when paused)\n                disablekb: 1, // Disable keyboard as we handle it\n                playsinline: 1, // Allow iOS inline playback\n\n                // Tracking for stats\n                // origin: window ? `${window.location.protocol}//${window.location.host}` : null,\n                widget_referrer: window ? window.location.href : null,\n\n                // Captions are flaky on YouTube\n                cc_load_policy: player.captions.active ? 1 : 0,\n                cc_lang_pref: player.config.captions.language,\n            },\n            events: {\n                onError(event) {\n                    // If we've already fired an error, don't do it again\n                    // YouTube fires onError twice\n                    if (utils.is.object(player.media.error)) {\n                        return;\n                    }\n\n                    const detail = {\n                        code: event.data,\n                    };\n\n                    // Messages copied from https://developers.google.com/youtube/iframe_api_reference#onError\n                    switch (event.data) {\n                        case 2:\n                            detail.message =\n                                'The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.';\n                            break;\n\n                        case 5:\n                            detail.message =\n                                'The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.';\n                            break;\n\n                        case 100:\n                            detail.message =\n                                'The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.';\n                            break;\n\n                        case 101:\n                        case 150:\n                            detail.message = 'The owner of the requested video does not allow it to be played in embedded players.';\n                            break;\n\n                        default:\n                            detail.message = 'An unknown error occured';\n                            break;\n                    }\n\n                    player.media.error = detail;\n\n                    utils.dispatchEvent.call(player, player.media, 'error');\n                },\n                onPlaybackQualityChange() {\n                    utils.dispatchEvent.call(player, player.media, 'qualitychange', false, {\n                        quality: player.media.quality,\n                    });\n                },\n                onPlaybackRateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get current speed\n                    player.media.playbackRate = instance.getPlaybackRate();\n\n                    utils.dispatchEvent.call(player, player.media, 'ratechange');\n                },\n                onReady(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Get the title\n                    youtube.getTitle.call(player, videoId);\n\n                    // Create a faux HTML5 API using the YouTube API\n                    player.media.play = () => {\n                        instance.playVideo();\n                    };\n\n                    player.media.pause = () => {\n                        instance.pauseVideo();\n                    };\n\n                    player.media.stop = () => {\n                        instance.stopVideo();\n                    };\n\n                    player.media.duration = instance.getDuration();\n                    player.media.paused = true;\n\n                    // Seeking\n                    player.media.currentTime = 0;\n                    Object.defineProperty(player.media, 'currentTime', {\n                        get() {\n                            return Number(instance.getCurrentTime());\n                        },\n                        set(time) {\n                            // Vimeo will automatically play on seek\n                            const { paused } = player.media;\n\n                            // Set seeking flag\n                            player.media.seeking = true;\n\n                            // Trigger seeking\n                            utils.dispatchEvent.call(player, player.media, 'seeking');\n\n                            // Seek after events sent\n                            instance.seekTo(time);\n\n                            // Restore pause state\n                            if (paused) {\n                                player.pause();\n                            }\n                        },\n                    });\n\n                    // Playback speed\n                    Object.defineProperty(player.media, 'playbackRate', {\n                        get() {\n                            return instance.getPlaybackRate();\n                        },\n                        set(input) {\n                            instance.setPlaybackRate(input);\n                        },\n                    });\n\n                    // Quality\n                    Object.defineProperty(player.media, 'quality', {\n                        get() {\n                            return mapQualityUnit(instance.getPlaybackQuality());\n                        },\n                        set(input) {\n                            const quality = input;\n\n                            // Set via API\n                            instance.setPlaybackQuality(mapQualityUnit(quality));\n\n                            // Trigger request event\n                            utils.dispatchEvent.call(player, player.media, 'qualityrequested', false, {\n                                quality,\n                            });\n                        },\n                    });\n\n                    // Volume\n                    let { volume } = player.config;\n                    Object.defineProperty(player.media, 'volume', {\n                        get() {\n                            return volume;\n                        },\n                        set(input) {\n                            volume = input;\n                            instance.setVolume(volume * 100);\n                            utils.dispatchEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Muted\n                    let { muted } = player.config;\n                    Object.defineProperty(player.media, 'muted', {\n                        get() {\n                            return muted;\n                        },\n                        set(input) {\n                            const toggle = utils.is.boolean(input) ? input : muted;\n                            muted = toggle;\n                            instance[toggle ? 'mute' : 'unMute']();\n                            utils.dispatchEvent.call(player, player.media, 'volumechange');\n                        },\n                    });\n\n                    // Source\n                    Object.defineProperty(player.media, 'currentSrc', {\n                        get() {\n                            return instance.getVideoUrl();\n                        },\n                    });\n\n                    // Ended\n                    Object.defineProperty(player.media, 'ended', {\n                        get() {\n                            return player.currentTime === player.duration;\n                        },\n                    });\n\n                    // Get available speeds\n                    player.options.speed = instance.getAvailablePlaybackRates();\n\n                    // Set the tabindex to avoid focus entering iframe\n                    if (player.supported.ui) {\n                        player.media.setAttribute('tabindex', -1);\n                    }\n\n                    utils.dispatchEvent.call(player, player.media, 'timeupdate');\n                    utils.dispatchEvent.call(player, player.media, 'durationchange');\n\n                    // Reset timer\n                    clearInterval(player.timers.buffering);\n\n                    // Setup buffering\n                    player.timers.buffering = setInterval(() => {\n                        // Get loaded % from YouTube\n                        player.media.buffered = instance.getVideoLoadedFraction();\n\n                        // Trigger progress only when we actually buffer something\n                        if (player.media.lastBuffered === null || player.media.lastBuffered < player.media.buffered) {\n                            utils.dispatchEvent.call(player, player.media, 'progress');\n                        }\n\n                        // Set last buffer point\n                        player.media.lastBuffered = player.media.buffered;\n\n                        // Bail if we're at 100%\n                        if (player.media.buffered === 1) {\n                            clearInterval(player.timers.buffering);\n\n                            // Trigger event\n                            utils.dispatchEvent.call(player, player.media, 'canplaythrough');\n                        }\n                    }, 200);\n\n                    // Rebuild UI\n                    setTimeout(() => ui.build.call(player), 50);\n                },\n                onStateChange(event) {\n                    // Get the instance\n                    const instance = event.target;\n\n                    // Reset timer\n                    clearInterval(player.timers.playing);\n\n                    // Handle events\n                    // -1   Unstarted\n                    // 0    Ended\n                    // 1    Playing\n                    // 2    Paused\n                    // 3    Buffering\n                    // 5    Video cued\n                    switch (event.data) {\n                        case -1:\n                            // Update scrubber\n                            utils.dispatchEvent.call(player, player.media, 'timeupdate');\n\n                            // Get loaded % from YouTube\n                            player.media.buffered = instance.getVideoLoadedFraction();\n                            utils.dispatchEvent.call(player, player.media, 'progress');\n\n                            break;\n\n                        case 0:\n                            player.media.paused = true;\n\n                            // YouTube doesn't support loop for a single video, so mimick it.\n                            if (player.media.loop) {\n                                // YouTube needs a call to `stopVideo` before playing again\n                                instance.stopVideo();\n                                instance.playVideo();\n                            } else {\n                                utils.dispatchEvent.call(player, player.media, 'ended');\n                            }\n\n                            break;\n\n                        case 1:\n                            // If we were seeking, fire seeked event\n                            if (player.media.seeking) {\n                                utils.dispatchEvent.call(player, player.media, 'seeked');\n                            }\n                            player.media.seeking = false;\n\n                            // Only fire play if paused before\n                            if (player.media.paused) {\n                                utils.dispatchEvent.call(player, player.media, 'play');\n                            }\n                            player.media.paused = false;\n\n                            utils.dispatchEvent.call(player, player.media, 'playing');\n\n                            // Poll to get playback progress\n                            player.timers.playing = setInterval(() => {\n                                utils.dispatchEvent.call(player, player.media, 'timeupdate');\n                            }, 50);\n\n                            // Check duration again due to YouTube bug\n                            // https://github.com/sampotts/plyr/issues/374\n                            // https://code.google.com/p/gdata-issues/issues/detail?id=8690\n                            if (player.media.duration !== instance.getDuration()) {\n                                player.media.duration = instance.getDuration();\n                                utils.dispatchEvent.call(player, player.media, 'durationchange');\n                            }\n\n                            // Get quality\n\n                            // Disable quality controls on youtube due to bugs and lack of support\n                            // https://github.com/sampotts/plyr/issues/1149#issuecomment-412530577\n                            // controls.setQualityMenu.call(player, mapQualityUnits(instance.getAvailableQualityLevels()));\n\n                            break;\n\n                        case 2:\n                            player.media.paused = true;\n\n                            utils.dispatchEvent.call(player, player.media, 'pause');\n\n                            break;\n\n                        default:\n                            break;\n                    }\n\n                    utils.dispatchEvent.call(player, player.elements.container, 'statechange', false, {\n                        code: event.data,\n                    });\n                },\n            },\n        });\n    },\n};\n\nexport default youtube;\n","// ==========================================================================\n// Vimeo plugin\n// ==========================================================================\n\nimport utils from './../utils';\nimport captions from './../captions';\nimport controls from './../controls';\nimport ui from './../ui';\n\nconst vimeo = {\n    setup() {\n        // Add embed class for responsive\n        utils.toggleClass(this.elements.wrapper, this.config.classNames.embed, true);\n\n        // Set intial ratio\n        vimeo.setAspectRatio.call(this);\n\n        // Load the API if not already\n        if (!utils.is.object(window.Vimeo)) {\n            utils\n                .loadScript(this.config.urls.vimeo.api)\n                .then(() => {\n                    vimeo.ready.call(this);\n                })\n                .catch(error => {\n                    this.debug.warn('Vimeo API failed to load', error);\n                });\n        } else {\n            vimeo.ready.call(this);\n        }\n    },\n\n    // Set aspect ratio\n    // For Vimeo we have an extra 300% height <div> to hide the standard controls and UI\n    setAspectRatio(input) {\n        const ratio = utils.is.string(input) ? input.split(':') : this.config.ratio.split(':');\n        const padding = 100 / ratio[0] * ratio[1];\n        this.elements.wrapper.style.paddingBottom = `${padding}%`;\n\n        if (this.supported.ui) {\n            const height = 240;\n            const offset = (height - padding) / (height / 50);\n\n            this.media.style.transform = `translateY(-${offset}%)`;\n        }\n    },\n\n    // API Ready\n    ready() {\n        const player = this;\n\n        // Get Vimeo params for the iframe\n        const options = {\n            loop: player.config.loop.active,\n            autoplay: player.autoplay,\n            byline: false,\n            portrait: false,\n            title: false,\n            speed: true,\n            transparent: 0,\n            gesture: 'media',\n            playsinline: !this.config.fullscreen.iosNative,\n            quality: player.config.quality.default,\n        };\n        const params = utils.buildUrlParams(options);\n\n        // Get the source URL or ID\n        let source = player.media.getAttribute('src');\n\n        // Get from <div> if needed\n        if (utils.is.empty(source)) {\n            source = player.media.getAttribute(this.config.attributes.embed.id);\n        }\n\n        const id = utils.parseVimeoId(source);\n\n        // Build an iframe\n        const iframe = utils.createElement('iframe');\n        const src = `https://player.vimeo.com/video/${id}?${params}`;\n        iframe.setAttribute('src', src);\n        iframe.setAttribute('allowfullscreen', '');\n        iframe.setAttribute('allowtransparency', '');\n        iframe.setAttribute('allow', 'autoplay');\n\n        // Inject the package\n        const wrapper = utils.createElement('div');\n        wrapper.appendChild(iframe);\n        player.media = utils.replaceElement(wrapper, player.media);\n\n        // Setup instance\n        // https://github.com/vimeo/player.js\n        player.embed = new window.Vimeo.Player(iframe);\n\n        player.media.paused = true;\n        player.media.currentTime = 0;\n\n        // Disable native text track rendering\n        if (player.supported.ui) {\n            player.embed.disableTextTrack();\n        }\n\n        // Create a faux HTML5 API using the Vimeo API\n        player.media.play = () => {\n            player.embed.play().then(() => {\n                player.media.paused = false;\n            });\n        };\n\n        player.media.pause = () => {\n            player.embed.pause().then(() => {\n                player.media.paused = true;\n            });\n        };\n\n        player.media.stop = () => {\n            player.pause();\n            player.currentTime = 0;\n        };\n\n        // Seeking\n        let { currentTime } = player.media;\n        Object.defineProperty(player.media, 'currentTime', {\n            get() {\n                return currentTime;\n            },\n            set(time) {\n                // Get current paused state\n                // Vimeo will automatically play on seek\n                const { paused } = player.media;\n\n                // Set seeking flag\n                player.media.seeking = true;\n\n                // Trigger seeking\n                utils.dispatchEvent.call(player, player.media, 'seeking');\n\n                // Seek after events\n                player.embed.setCurrentTime(time).catch(() => {\n                    // Do nothing\n                });\n\n                // Restore pause state\n                if (paused) {\n                    player.pause();\n                }\n            },\n        });\n\n        // Playback speed\n        let speed = player.config.speed.selected;\n        Object.defineProperty(player.media, 'playbackRate', {\n            get() {\n                return speed;\n            },\n            set(input) {\n                player.embed\n                    .setPlaybackRate(input)\n                    .then(() => {\n                        speed = input;\n                        utils.dispatchEvent.call(player, player.media, 'ratechange');\n                    })\n                    .catch(error => {\n                        // Hide menu item (and menu if empty)\n                        if (error.name === 'Error') {\n                            controls.setSpeedMenu.call(player, []);\n                        }\n                    });\n            },\n        });\n\n        // Volume\n        let { volume } = player.config;\n        Object.defineProperty(player.media, 'volume', {\n            get() {\n                return volume;\n            },\n            set(input) {\n                player.embed.setVolume(input).then(() => {\n                    volume = input;\n                    utils.dispatchEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Muted\n        let { muted } = player.config;\n        Object.defineProperty(player.media, 'muted', {\n            get() {\n                return muted;\n            },\n            set(input) {\n                const toggle = utils.is.boolean(input) ? input : false;\n\n                player.embed.setVolume(toggle ? 0 : player.config.volume).then(() => {\n                    muted = toggle;\n                    utils.dispatchEvent.call(player, player.media, 'volumechange');\n                });\n            },\n        });\n\n        // Loop\n        let { loop } = player.config;\n        Object.defineProperty(player.media, 'loop', {\n            get() {\n                return loop;\n            },\n            set(input) {\n                const toggle = utils.is.boolean(input) ? input : player.config.loop.active;\n\n                player.embed.setLoop(toggle).then(() => {\n                    loop = toggle;\n                });\n            },\n        });\n\n        // Source\n        let currentSrc;\n        player.embed\n            .getVideoUrl()\n            .then(value => {\n                currentSrc = value;\n            })\n            .catch(error => {\n                this.debug.warn(error);\n            });\n\n        Object.defineProperty(player.media, 'currentSrc', {\n            get() {\n                return currentSrc;\n            },\n        });\n\n        // Ended\n        Object.defineProperty(player.media, 'ended', {\n            get() {\n                return player.currentTime === player.duration;\n            },\n        });\n\n        // Set aspect ratio based on video size\n        Promise.all([\n            player.embed.getVideoWidth(),\n            player.embed.getVideoHeight(),\n        ]).then(dimensions => {\n            const ratio = utils.getAspectRatio(dimensions[0], dimensions[1]);\n            vimeo.setAspectRatio.call(this, ratio);\n        });\n\n        // Set autopause\n        player.embed.setAutopause(player.config.autopause).then(state => {\n            player.config.autopause = state;\n        });\n\n        // Get title\n        player.embed.getVideoTitle().then(title => {\n            player.config.title = title;\n            ui.setTitle.call(this);\n        });\n\n        // Get current time\n        player.embed.getCurrentTime().then(value => {\n            currentTime = value;\n            utils.dispatchEvent.call(player, player.media, 'timeupdate');\n        });\n\n        // Get duration\n        player.embed.getDuration().then(value => {\n            player.media.duration = value;\n            utils.dispatchEvent.call(player, player.media, 'durationchange');\n        });\n\n        // Get captions\n        player.embed.getTextTracks().then(tracks => {\n            player.media.textTracks = tracks;\n            captions.setup.call(player);\n        });\n\n        player.embed.on('cuechange', data => {\n            let cue = null;\n\n            if (data.cues.length) {\n                cue = utils.stripHTML(data.cues[0].text);\n            }\n\n            captions.setText.call(player, cue);\n        });\n\n        player.embed.on('loaded', () => {\n            if (utils.is.element(player.embed.element) && player.supported.ui) {\n                const frame = player.embed.element;\n\n                // Fix keyboard focus issues\n                // https://github.com/sampotts/plyr/issues/317\n                frame.setAttribute('tabindex', -1);\n            }\n        });\n\n        player.embed.on('play', () => {\n            // Only fire play if paused before\n            if (player.media.paused) {\n                utils.dispatchEvent.call(player, player.media, 'play');\n            }\n            player.media.paused = false;\n            utils.dispatchEvent.call(player, player.media, 'playing');\n        });\n\n        player.embed.on('pause', () => {\n            player.media.paused = true;\n            utils.dispatchEvent.call(player, player.media, 'pause');\n        });\n\n        player.embed.on('timeupdate', data => {\n            player.media.seeking = false;\n            currentTime = data.seconds;\n            utils.dispatchEvent.call(player, player.media, 'timeupdate');\n        });\n\n        player.embed.on('progress', data => {\n            player.media.buffered = data.percent;\n            utils.dispatchEvent.call(player, player.media, 'progress');\n\n            // Check all loaded\n            if (parseInt(data.percent, 10) === 1) {\n                utils.dispatchEvent.call(player, player.media, 'canplaythrough');\n            }\n\n            // Get duration as if we do it before load, it gives an incorrect value\n            // https://github.com/sampotts/plyr/issues/891\n            player.embed.getDuration().then(value => {\n                if (value !== player.media.duration) {\n                    player.media.duration = value;\n                    utils.dispatchEvent.call(player, player.media, 'durationchange');\n                }\n            });\n        });\n\n        player.embed.on('seeked', () => {\n            player.media.seeking = false;\n            utils.dispatchEvent.call(player, player.media, 'seeked');\n            utils.dispatchEvent.call(player, player.media, 'play');\n        });\n\n        player.embed.on('ended', () => {\n            player.media.paused = true;\n            utils.dispatchEvent.call(player, player.media, 'ended');\n        });\n\n        player.embed.on('error', detail => {\n            player.media.error = detail;\n            utils.dispatchEvent.call(player, player.media, 'error');\n        });\n\n        // Rebuild UI\n        setTimeout(() => ui.build.call(player), 0);\n    },\n};\n\nexport default vimeo;\n","// ==========================================================================\n// Plyr Media\n// ==========================================================================\n\nimport support from './support';\nimport utils from './utils';\nimport youtube from './plugins/youtube';\nimport vimeo from './plugins/vimeo';\nimport html5 from './html5';\nimport ui from './ui';\n\n// Sniff out the browser\nconst browser = utils.getBrowser();\n\nconst media = {\n    // Setup media\n    setup() {\n        // If there's no media, bail\n        if (!this.media) {\n            this.debug.warn('No media element found!');\n            return;\n        }\n\n        // Add type class\n        utils.toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', this.type), true);\n\n        // Add provider class\n        utils.toggleClass(this.elements.container, this.config.classNames.provider.replace('{0}', this.provider), true);\n\n        // Add video class for embeds\n        // This will require changes if audio embeds are added\n        if (this.isEmbed) {\n            utils.toggleClass(this.elements.container, this.config.classNames.type.replace('{0}', 'video'), true);\n        }\n\n        if (this.supported.ui) {\n            // Check for picture-in-picture support\n            utils.toggleClass(this.elements.container, this.config.classNames.pip.supported, support.pip && this.isHTML5 && this.isVideo);\n\n            // Check for airplay support\n            utils.toggleClass(this.elements.container, this.config.classNames.airplay.supported, support.airplay && this.isHTML5);\n\n            // If there's no autoplay attribute, assume the video is stopped and add state class\n            utils.toggleClass(this.elements.container, this.config.classNames.stopped, this.config.autoplay);\n\n            // Add iOS class\n            utils.toggleClass(this.elements.container, this.config.classNames.isIos, browser.isIos);\n\n            // Add touch class\n            utils.toggleClass(this.elements.container, this.config.classNames.isTouch, this.touch);\n        }\n\n        // Inject the player wrapper\n        if (this.isVideo) {\n            // Create the wrapper div\n            this.elements.wrapper = utils.createElement('div', {\n                class: this.config.classNames.video,\n            });\n\n            // Wrap the video in a container\n            utils.wrap(this.media, this.elements.wrapper);\n        }\n\n        if (this.isEmbed) {\n            switch (this.provider) {\n                case 'youtube':\n                    youtube.setup.call(this);\n                    break;\n\n                case 'vimeo':\n                    vimeo.setup.call(this);\n                    break;\n\n                default:\n                    break;\n            }\n        } else if (this.isHTML5) {\n            ui.setTitle.call(this);\n\n            html5.extend.call(this);\n        }\n    },\n};\n\nexport default media;\n","// ==========================================================================\n// Plyr source update\n// ==========================================================================\n\nimport { providers } from './types';\nimport utils from './utils';\nimport html5 from './html5';\nimport media from './media';\nimport ui from './ui';\nimport support from './support';\n\nconst source = {\n    // Add elements to HTML5 media (source, tracks, etc)\n    insertElements(type, attributes) {\n        if (utils.is.string(attributes)) {\n            utils.insertElement(type, this.media, {\n                src: attributes,\n            });\n        } else if (utils.is.array(attributes)) {\n            attributes.forEach(attribute => {\n                utils.insertElement(type, this.media, attribute);\n            });\n        }\n    },\n\n    // Update source\n    // Sources are not checked for support so be careful\n    change(input) {\n        if (!utils.is.object(input) || !('sources' in input) || !input.sources.length) {\n            this.debug.warn('Invalid source format');\n            return;\n        }\n\n        // Cancel current network requests\n        html5.cancelRequests.call(this);\n\n        // Destroy instance and re-setup\n        this.destroy.call(\n            this,\n            () => {\n                // Reset quality options\n                this.options.quality = [];\n\n                // Remove elements\n                utils.removeElement(this.media);\n                this.media = null;\n\n                // Reset class name\n                if (utils.is.element(this.elements.container)) {\n                    this.elements.container.removeAttribute('class');\n                }\n\n                // Set the type and provider\n                this.type = input.type;\n                this.provider = !utils.is.empty(input.sources[0].provider) ? input.sources[0].provider : providers.html5;\n\n                // Check for support\n                this.supported = support.check(this.type, this.provider, this.config.playsinline);\n\n                // Create new markup\n                switch (`${this.provider}:${this.type}`) {\n                    case 'html5:video':\n                        this.media = utils.createElement('video');\n                        break;\n\n                    case 'html5:audio':\n                        this.media = utils.createElement('audio');\n                        break;\n\n                    case 'youtube:video':\n                    case 'vimeo:video':\n                        this.media = utils.createElement('div', {\n                            src: input.sources[0].src,\n                        });\n                        break;\n\n                    default:\n                        break;\n                }\n\n                // Inject the new element\n                this.elements.container.appendChild(this.media);\n\n                // Autoplay the new source?\n                if (utils.is.boolean(input.autoplay)) {\n                    this.config.autoplay = input.autoplay;\n                }\n\n                // Set attributes for audio and video\n                if (this.isHTML5) {\n                    if (this.config.crossorigin) {\n                        this.media.setAttribute('crossorigin', '');\n                    }\n                    if (this.config.autoplay) {\n                        this.media.setAttribute('autoplay', '');\n                    }\n                    if ('poster' in input) {\n                        this.media.setAttribute('poster', input.poster);\n                    }\n                    if (this.config.loop.active) {\n                        this.media.setAttribute('loop', '');\n                    }\n                    if (this.config.muted) {\n                        this.media.setAttribute('muted', '');\n                    }\n                    if (this.config.playsinline) {\n                        this.media.setAttribute('playsinline', '');\n                    }\n                }\n\n                // Restore class hook\n                ui.addStyleHook.call(this);\n\n                // Set new sources for html5\n                if (this.isHTML5) {\n                    source.insertElements.call(this, 'source', input.sources);\n                }\n\n                // Set video title\n                this.config.title = input.title;\n\n                // Set up from scratch\n                media.setup.call(this);\n\n                // HTML5 stuff\n                if (this.isHTML5) {\n                    // Setup captions\n                    if ('tracks' in input) {\n                        source.insertElements.call(this, 'track', input.tracks);\n                    }\n\n                    // Load HTML5 sources\n                    this.media.load();\n                }\n\n                // If HTML5 or embed but not fully supported, setupInterface and call ready now\n                if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n                    // Setup interface\n                    ui.build.call(this);\n                }\n\n                // Update the fullscreen support\n                this.fullscreen.update();\n            },\n            true,\n        );\n    },\n};\n\nexport default source;\n","// ==========================================================================\n// Plyr\n// plyr.js v3.2.1\n// https://github.com/sampotts/plyr\n// License: The MIT License (MIT)\n// ==========================================================================\n\nimport { providers, types } from './types';\nimport defaults from './defaults';\nimport support from './support';\nimport utils from './utils';\n\nimport Console from './console';\nimport Fullscreen from './fullscreen';\nimport Listeners from './listeners';\nimport Storage from './storage';\nimport Ads from './plugins/ads';\n\nimport captions from './captions';\nimport controls from './controls';\nimport media from './media';\nimport source from './source';\nimport ui from './ui';\n\n// Private properties\n// TODO: Use a WeakMap for private globals\n// const globals = new WeakMap();\n\n// Plyr instance\nclass Plyr {\n    constructor(target, options) {\n        this.timers = {};\n\n        // State\n        this.ready = false;\n        this.loading = false;\n        this.failed = false;\n\n        // Touch device\n        this.touch = support.touch;\n\n        // Set the media element\n        this.media = target;\n\n        // String selector passed\n        if (utils.is.string(this.media)) {\n            this.media = document.querySelectorAll(this.media);\n        }\n\n        // jQuery, NodeList or Array passed, use first element\n        if ((window.jQuery && this.media instanceof jQuery) || utils.is.nodeList(this.media) || utils.is.array(this.media)) {\n            // eslint-disable-next-line\n            this.media = this.media[0];\n        }\n\n        // Set config\n        this.config = utils.extend(\n            {},\n            defaults,\n            options || {},\n            (() => {\n                try {\n                    return JSON.parse(this.media.getAttribute('data-plyr-config'));\n                } catch (e) {\n                    return {};\n                }\n            })(),\n        );\n\n        // Elements cache\n        this.elements = {\n            container: null,\n            buttons: {},\n            display: {},\n            progress: {},\n            inputs: {},\n            settings: {\n                menu: null,\n                panes: {},\n                tabs: {},\n            },\n            captions: null,\n        };\n\n        // Captions\n        this.captions = {\n            active: null,\n            currentTrack: null,\n        };\n\n        // Fullscreen\n        this.fullscreen = {\n            active: false,\n        };\n\n        // Options\n        this.options = {\n            speed: [],\n            quality: [],\n            captions: [],\n        };\n\n        // Debugging\n        // TODO: move to globals\n        this.debug = new Console(this.config.debug);\n\n        // Log config options and support\n        this.debug.log('Config', this.config);\n        this.debug.log('Support', support);\n\n        // We need an element to setup\n        if (utils.is.nullOrUndefined(this.media) || !utils.is.element(this.media)) {\n            this.debug.error('Setup failed: no suitable element passed');\n            return;\n        }\n\n        // Bail if the element is initialized\n        if (this.media.plyr) {\n            this.debug.warn('Target already setup');\n            return;\n        }\n\n        // Bail if not enabled\n        if (!this.config.enabled) {\n            this.debug.error('Setup failed: disabled by config');\n            return;\n        }\n\n        // Bail if disabled or no basic support\n        // You may want to disable certain UAs etc\n        if (!support.check().api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        // Cache original element state for .destroy()\n        // TODO: Investigate a better solution as I suspect this causes reported double load issues?\n        setTimeout(() => {\n            const clone = this.media.cloneNode(true);\n\n            // Prevent the clone autoplaying\n            if (clone.getAttribute('autoplay')) {\n                clone.pause();\n            }\n\n            this.elements.original = clone;\n        }, 0);\n\n        // Set media type based on tag or data attribute\n        // Supported: video, audio, vimeo, youtube\n        const type = this.media.tagName.toLowerCase();\n\n        // Embed properties\n        let iframe = null;\n        let url = null;\n        let params = null;\n\n        // Different setup based on type\n        switch (type) {\n            case 'div':\n                // Find the frame\n                iframe = this.media.querySelector('iframe');\n\n                // <iframe> type\n                if (utils.is.element(iframe)) {\n                    // Detect provider\n                    url = iframe.getAttribute('src');\n                    this.provider = utils.getProviderByUrl(url);\n\n                    // Rework elements\n                    this.elements.container = this.media;\n                    this.media = iframe;\n\n                    // Reset classname\n                    this.elements.container.className = '';\n\n                    // Get attributes from URL and set config\n                    params = utils.getUrlParams(url);\n                    if (!utils.is.empty(params)) {\n                        const truthy = [\n                            '1',\n                            'true',\n                        ];\n\n                        if (truthy.includes(params.autoplay)) {\n                            this.config.autoplay = true;\n                        }\n                        if (truthy.includes(params.loop)) {\n                            this.config.loop.active = true;\n                        }\n\n                        // TODO: replace fullscreen.iosNative with this playsinline config option\n                        // YouTube requires the playsinline in the URL\n                        if (this.isYouTube) {\n                            this.config.playsinline = truthy.includes(params.playsinline);\n                        } else {\n                            this.config.playsinline = true;\n                        }\n                    }\n                } else {\n                    // <div> with attributes\n                    this.provider = this.media.getAttribute(this.config.attributes.embed.provider);\n\n                    // Remove attribute\n                    this.media.removeAttribute(this.config.attributes.embed.provider);\n                }\n\n                // Unsupported or missing provider\n                if (utils.is.empty(this.provider) || !Object.keys(providers).includes(this.provider)) {\n                    this.debug.error('Setup failed: Invalid provider');\n                    return;\n                }\n\n                // Audio will come later for external providers\n                this.type = types.video;\n\n                break;\n\n            case 'video':\n            case 'audio':\n                this.type = type;\n                this.provider = providers.html5;\n\n                // Get config from attributes\n                if (this.media.hasAttribute('crossorigin')) {\n                    this.config.crossorigin = true;\n                }\n                if (this.media.hasAttribute('autoplay')) {\n                    this.config.autoplay = true;\n                }\n                if (this.media.hasAttribute('playsinline')) {\n                    this.config.playsinline = true;\n                }\n                if (this.media.hasAttribute('muted')) {\n                    this.config.muted = true;\n                }\n                if (this.media.hasAttribute('loop')) {\n                    this.config.loop.active = true;\n                }\n\n                break;\n\n            default:\n                this.debug.error('Setup failed: unsupported type');\n                return;\n        }\n\n        // Check for support again but with type\n        this.supported = support.check(this.type, this.provider, this.config.playsinline);\n\n        // If no support for even API, bail\n        if (!this.supported.api) {\n            this.debug.error('Setup failed: no support');\n            return;\n        }\n\n        // Create listeners\n        this.listeners = new Listeners(this);\n\n        // Setup local storage for user settings\n        this.storage = new Storage(this);\n\n        // Store reference\n        this.media.plyr = this;\n\n        // Wrap media\n        if (!utils.is.element(this.elements.container)) {\n            this.elements.container = utils.createElement('div');\n            utils.wrap(this.media, this.elements.container);\n        }\n\n        // Allow focus to be captured\n        this.elements.container.setAttribute('tabindex', 0);\n\n        // Add style hook\n        ui.addStyleHook.call(this);\n\n        // Setup media\n        media.setup.call(this);\n\n        // Listen for events if debugging\n        if (this.config.debug) {\n            utils.on(this.elements.container, this.config.events.join(' '), event => {\n                this.debug.log(`event: ${event.type}`);\n            });\n        }\n\n        // Setup interface\n        // If embed but not fully supported, build interface now to avoid flash of controls\n        if (this.isHTML5 || (this.isEmbed && !this.supported.ui)) {\n            ui.build.call(this);\n        }\n\n        // Container listeners\n        this.listeners.container();\n\n        // Global listeners\n        this.listeners.global();\n\n        // Setup fullscreen\n        this.fullscreen = new Fullscreen(this);\n\n        // Setup ads if provided\n        this.ads = new Ads(this);\n\n        // Autoplay if required\n        if (this.config.autoplay) {\n            this.play();\n        }\n    }\n\n    // ---------------------------------------\n    // API\n    // ---------------------------------------\n\n    /**\n     * Types and provider helpers\n     */\n    get isHTML5() {\n        return Boolean(this.provider === providers.html5);\n    }\n    get isEmbed() {\n        return Boolean(this.isYouTube || this.isVimeo);\n    }\n    get isYouTube() {\n        return Boolean(this.provider === providers.youtube);\n    }\n    get isVimeo() {\n        return Boolean(this.provider === providers.vimeo);\n    }\n    get isVideo() {\n        return Boolean(this.type === types.video);\n    }\n    get isAudio() {\n        return Boolean(this.type === types.audio);\n    }\n\n    /**\n     * Play the media, or play the advertisement (if they are not blocked)\n     */\n    play() {\n        if (!utils.is.function(this.media.play)) {\n            return null;\n        }\n\n        // If ads are enabled, wait for them first\n        /* if (this.ads.enabled && !this.ads.initialized) {\n            return this.ads.managerPromise.then(() => this.ads.play()).catch(() => this.media.play());\n        } */\n\n        // Return the promise (for HTML5)\n        return this.media.play();\n    }\n\n    /**\n     * Pause the media\n     */\n    pause() {\n        if (!this.playing || !utils.is.function(this.media.pause)) {\n            return;\n        }\n\n        this.media.pause();\n    }\n\n    /**\n     * Get paused state\n     */\n    get paused() {\n        return Boolean(this.media.paused);\n    }\n\n    /**\n     * Get playing state\n     */\n    get playing() {\n        return Boolean(this.ready && !this.paused && !this.ended && (this.isHTML5 ? this.media.readyState > 2 : true));\n    }\n\n    /**\n     * Get ended state\n     */\n    get ended() {\n        return Boolean(this.media.ended);\n    }\n\n    /**\n     * Toggle playback based on current status\n     * @param {boolean} input\n     */\n    togglePlay(input) {\n        // Toggle based on current state if nothing passed\n        const toggle = utils.is.boolean(input) ? input : !this.playing;\n\n        if (toggle) {\n            this.play();\n        } else {\n            this.pause();\n        }\n    }\n\n    /**\n     * Stop playback\n     */\n    stop() {\n        if (this.isHTML5) {\n            this.media.load();\n        } else if (utils.is.function(this.media.stop)) {\n            this.media.stop();\n        }\n    }\n\n    /**\n     * Restart playback\n     */\n    restart() {\n        this.currentTime = 0;\n    }\n\n    /**\n     * Rewind\n     * @param {number} seekTime - how far to rewind in seconds. Defaults to the config.seekTime\n     */\n    rewind(seekTime) {\n        this.currentTime = this.currentTime - (utils.is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Fast forward\n     * @param {number} seekTime - how far to fast forward in seconds. Defaults to the config.seekTime\n     */\n    forward(seekTime) {\n        this.currentTime = this.currentTime + (utils.is.number(seekTime) ? seekTime : this.config.seekTime);\n    }\n\n    /**\n     * Seek to a time\n     * @param {number} input - where to seek to in seconds. Defaults to 0 (the start)\n     */\n    set currentTime(input) {\n        let targetTime = 0;\n\n        if (utils.is.number(input)) {\n            targetTime = input;\n        }\n\n        // Normalise targetTime\n        if (targetTime < 0) {\n            targetTime = 0;\n        } else if (targetTime > this.duration) {\n            targetTime = this.duration;\n        }\n\n        // Set\n        this.media.currentTime = targetTime;\n\n        // Logging\n        this.debug.log(`Seeking to ${this.currentTime} seconds`);\n    }\n\n    /**\n     * Get current time\n     */\n    get currentTime() {\n        return Number(this.media.currentTime);\n    }\n\n    /**\n     * Get buffered\n     */\n    get buffered() {\n        const { buffered } = this.media;\n\n        // YouTube / Vimeo return a float between 0-1\n        if (utils.is.number(buffered)) {\n            return buffered;\n        }\n\n        // HTML5\n        // TODO: Handle buffered chunks of the media\n        // (i.e. seek to another section buffers only that section)\n        if (buffered && buffered.length && this.duration > 0) {\n            return buffered.end(0) / this.duration;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Get seeking status\n     */\n    get seeking() {\n        return Boolean(this.media.seeking);\n    }\n\n    /**\n     * Get the duration of the current media\n     */\n    get duration() {\n        // Faux duration set via config\n        const fauxDuration = parseFloat(this.config.duration);\n\n        // True duration\n        const realDuration = this.media ? Number(this.media.duration) : 0;\n\n        // If custom duration is funky, use regular duration\n        return !Number.isNaN(fauxDuration) ? fauxDuration : realDuration;\n    }\n\n    /**\n     * Set the player volume\n     * @param {number} value - must be between 0 and 1. Defaults to the value from local storage and config.volume if not set in storage\n     */\n    set volume(value) {\n        let volume = value;\n        const max = 1;\n        const min = 0;\n\n        if (utils.is.string(volume)) {\n            volume = Number(volume);\n        }\n\n        // Load volume from storage if no value specified\n        if (!utils.is.number(volume)) {\n            volume = this.storage.get('volume');\n        }\n\n        // Use config if all else fails\n        if (!utils.is.number(volume)) {\n            ({ volume } = this.config);\n        }\n\n        // Maximum is volumeMax\n        if (volume > max) {\n            volume = max;\n        }\n        // Minimum is volumeMin\n        if (volume < min) {\n            volume = min;\n        }\n\n        // Update config\n        this.config.volume = volume;\n\n        // Set the player volume\n        this.media.volume = volume;\n\n        // If muted, and we're increasing volume manually, reset muted state\n        if (!utils.is.empty(value) && this.muted && volume > 0) {\n            this.muted = false;\n        }\n    }\n\n    /**\n     * Get the current player volume\n     */\n    get volume() {\n        return Number(this.media.volume);\n    }\n\n    /**\n     * Increase volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    increaseVolume(step) {\n        const volume = this.media.muted ? 0 : this.volume;\n        this.volume = volume + (utils.is.number(step) ? step : 1);\n    }\n\n    /**\n     * Decrease volume\n     * @param {boolean} step - How much to decrease by (between 0 and 1)\n     */\n    decreaseVolume(step) {\n        const volume = this.media.muted ? 0 : this.volume;\n        this.volume = volume - (utils.is.number(step) ? step : 1);\n    }\n\n    /**\n     * Set muted state\n     * @param {boolean} mute\n     */\n    set muted(mute) {\n        let toggle = mute;\n\n        // Load muted state from storage\n        if (!utils.is.boolean(toggle)) {\n            toggle = this.storage.get('muted');\n        }\n\n        // Use config if all else fails\n        if (!utils.is.boolean(toggle)) {\n            toggle = this.config.muted;\n        }\n\n        // Update config\n        this.config.muted = toggle;\n\n        // Set mute on the player\n        this.media.muted = toggle;\n    }\n\n    /**\n     * Get current muted state\n     */\n    get muted() {\n        return Boolean(this.media.muted);\n    }\n\n    /**\n     * Check if the media has audio\n     */\n    get hasAudio() {\n        // Assume yes for all non HTML5 (as we can't tell...)\n        if (!this.isHTML5) {\n            return true;\n        }\n\n        if (this.isAudio) {\n            return true;\n        }\n\n        // Get audio tracks\n        return (\n            Boolean(this.media.mozHasAudio) ||\n            Boolean(this.media.webkitAudioDecodedByteCount) ||\n            Boolean(this.media.audioTracks && this.media.audioTracks.length)\n        );\n    }\n\n    /**\n     * Set playback speed\n     * @param {number} speed - the speed of playback (0.5-2.0)\n     */\n    set speed(input) {\n        let speed = null;\n\n        if (utils.is.number(input)) {\n            speed = input;\n        }\n\n        if (!utils.is.number(speed)) {\n            speed = this.storage.get('speed');\n        }\n\n        if (!utils.is.number(speed)) {\n            speed = this.config.speed.selected;\n        }\n\n        // Set min/max\n        if (speed < 0.1) {\n            speed = 0.1;\n        }\n        if (speed > 2.0) {\n            speed = 2.0;\n        }\n\n        if (!this.config.speed.options.includes(speed)) {\n            this.debug.warn(`Unsupported speed (${speed})`);\n            return;\n        }\n\n        // Update config\n        this.config.speed.selected = speed;\n\n        // Set media speed\n        this.media.playbackRate = speed;\n    }\n\n    /**\n     * Get current playback speed\n     */\n    get speed() {\n        return Number(this.media.playbackRate);\n    }\n\n    /**\n     * Set playback quality\n     * Currently HTML5 & YouTube only\n     * @param {number} input - Quality level\n     */\n    set quality(input) {\n        let quality = null;\n\n        if (!utils.is.empty(input)) {\n            quality = Number(input);\n        }\n\n        if (!utils.is.number(quality) || quality === 0) {\n            quality = this.storage.get('quality');\n        }\n\n        if (!utils.is.number(quality)) {\n            quality = this.config.quality.selected;\n        }\n\n        if (!utils.is.number(quality)) {\n            quality = this.config.quality.default;\n        }\n\n        if (!this.options.quality.length) {\n            return;\n        }\n\n        if (!this.options.quality.includes(quality)) {\n            const closest = utils.closest(this.options.quality, quality);\n            this.debug.warn(`Unsupported quality option: ${quality}, using ${closest} instead`);\n            quality = closest;\n        }\n\n        // Update config\n        this.config.quality.selected = quality;\n\n        // Set quality\n        this.media.quality = quality;\n    }\n\n    /**\n     * Get current quality level\n     */\n    get quality() {\n        return this.media.quality;\n    }\n\n    /**\n     * Toggle loop\n     * TODO: Finish fancy new logic. Set the indicator on load as user may pass loop as config\n     * @param {boolean} input - Whether to loop or not\n     */\n    set loop(input) {\n        const toggle = utils.is.boolean(input) ? input : this.config.loop.active;\n        this.config.loop.active = toggle;\n        this.media.loop = toggle;\n\n        // Set default to be a true toggle\n        /* const type = ['start', 'end', 'all', 'none', 'toggle'].includes(input) ? input : 'toggle';\n\n        switch (type) {\n            case 'start':\n                if (this.config.loop.end && this.config.loop.end <= this.currentTime) {\n                    this.config.loop.end = null;\n                }\n                this.config.loop.start = this.currentTime;\n                // this.config.loop.indicator.start = this.elements.display.played.value;\n                break;\n\n            case 'end':\n                if (this.config.loop.start >= this.currentTime) {\n                    return this;\n                }\n                this.config.loop.end = this.currentTime;\n                // this.config.loop.indicator.end = this.elements.display.played.value;\n                break;\n\n            case 'all':\n                this.config.loop.start = 0;\n                this.config.loop.end = this.duration - 2;\n                this.config.loop.indicator.start = 0;\n                this.config.loop.indicator.end = 100;\n                break;\n\n            case 'toggle':\n                if (this.config.loop.active) {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = null;\n                } else {\n                    this.config.loop.start = 0;\n                    this.config.loop.end = this.duration - 2;\n                }\n                break;\n\n            default:\n                this.config.loop.start = 0;\n                this.config.loop.end = null;\n                break;\n        } */\n    }\n\n    /**\n     * Get current loop state\n     */\n    get loop() {\n        return Boolean(this.media.loop);\n    }\n\n    /**\n     * Set new media source\n     * @param {object} input - The new source object (see docs)\n     */\n    set source(input) {\n        source.change.call(this, input);\n    }\n\n    /**\n     * Get current source\n     */\n    get source() {\n        return this.media.currentSrc;\n    }\n\n    /**\n     * Set the poster image for a HTML5 video\n     * @param {input} - the URL for the new poster image\n     */\n    set poster(input) {\n        if (!this.isHTML5 || !this.isVideo) {\n            this.debug.warn('Poster can only be set on HTML5 video');\n            return;\n        }\n\n        if (utils.is.string(input)) {\n            this.media.setAttribute('poster', input);\n        }\n    }\n\n    /**\n     * Get the current poster image\n     */\n    get poster() {\n        if (!this.isHTML5 || !this.isVideo) {\n            return null;\n        }\n\n        return this.media.getAttribute('poster');\n    }\n\n    /**\n     * Set the autoplay state\n     * @param {boolean} input - Whether to autoplay or not\n     */\n    set autoplay(input) {\n        const toggle = utils.is.boolean(input) ? input : this.config.autoplay;\n        this.config.autoplay = toggle;\n    }\n\n    /**\n     * Get the current autoplay state\n     */\n    get autoplay() {\n        return Boolean(this.config.autoplay);\n    }\n\n    /**\n     * Toggle captions\n     * @param {boolean} input - Whether to enable captions\n     */\n    toggleCaptions(input) {\n        // If there's no full support\n        if (!this.supported.ui) {\n            return;\n        }\n\n        // If the method is called without parameter, toggle based on current value\n        const show = utils.is.boolean(input) ? input : !this.elements.container.classList.contains(this.config.classNames.captions.active);\n\n        // Nothing to change...\n        if (this.captions.active === show) {\n            return;\n        }\n\n        // Set global\n        this.captions.active = show;\n\n        // Toggle state\n        utils.toggleState(this.elements.buttons.captions, this.captions.active);\n\n        // Add class hook\n        utils.toggleClass(this.elements.container, this.config.classNames.captions.active, this.captions.active);\n\n        // Trigger an event\n        utils.dispatchEvent.call(this, this.media, this.captions.active ? 'captionsenabled' : 'captionsdisabled');\n    }\n\n    /**\n     * Set the captions language\n     * @param {string} - Two character ISO language code (e.g. EN, FR, PT, etc)\n     */\n    set language(input) {\n        // Nothing specified\n        if (!utils.is.string(input)) {\n            return;\n        }\n\n        // If empty string is passed, assume disable captions\n        if (utils.is.empty(input)) {\n            this.toggleCaptions(false);\n            return;\n        }\n\n        // Normalize\n        const language = input.toLowerCase();\n\n        // Check for support\n        if (!this.options.captions.includes(language)) {\n            this.debug.warn(`Unsupported language option: ${language}`);\n            return;\n        }\n\n        // Ensure captions are enabled\n        this.toggleCaptions(true);\n\n        // Enabled only\n        if (language === 'enabled') {\n            return;\n        }\n\n        // If nothing to change, bail\n        if (this.language === language) {\n            return;\n        }\n\n        // Update config\n        this.captions.language = language;\n\n        // Clear caption\n        captions.setText.call(this, null);\n\n        // Update captions\n        captions.setLanguage.call(this);\n\n        // Trigger an event\n        utils.dispatchEvent.call(this, this.media, 'languagechange');\n    }\n\n    /**\n     * Get the current captions language\n     */\n    get language() {\n        return this.captions.language;\n    }\n\n    /**\n     * Toggle picture-in-picture playback on WebKit/MacOS\n     * TODO: update player with state, support, enabled\n     * TODO: detect outside changes\n     */\n    set pip(input) {\n        const states = {\n            pip: 'picture-in-picture',\n            inline: 'inline',\n        };\n\n        // Bail if no support\n        if (!support.pip) {\n            return;\n        }\n\n        // Toggle based on current state if not passed\n        const toggle = utils.is.boolean(input) ? input : this.pip === states.inline;\n\n        // Toggle based on current state\n        this.media.webkitSetPresentationMode(toggle ? states.pip : states.inline);\n    }\n\n    /**\n     * Get the current picture-in-picture state\n     */\n    get pip() {\n        if (!support.pip) {\n            return null;\n        }\n\n        return this.media.webkitPresentationMode;\n    }\n\n    /**\n     * Trigger the airplay dialog\n     * TODO: update player with state, support, enabled\n     */\n    airplay() {\n        // Show dialog if supported\n        if (support.airplay) {\n            this.media.webkitShowPlaybackTargetPicker();\n        }\n    }\n\n    /**\n     * Toggle the player controls\n     * @param {boolean} toggle - Whether to show the controls\n     */\n    toggleControls(toggle) {\n        // We need controls of course...\n        if (!utils.is.element(this.elements.controls)) {\n            return;\n        }\n\n        // Don't hide if no UI support or it's audio\n        if (!this.supported.ui || this.isAudio) {\n            return;\n        }\n\n        let delay = 0;\n        let show = toggle;\n        let isEnterFullscreen = false;\n\n        // Get toggle state if not set\n        if (!utils.is.boolean(toggle)) {\n            if (utils.is.event(toggle)) {\n                // Is the enter fullscreen event\n                isEnterFullscreen = toggle.type === 'enterfullscreen';\n\n                // Events that show the controls\n                const showEvents = [\n                    'touchstart',\n                    'touchmove',\n                    'mouseenter',\n                    'mousemove',\n                    'focusin',\n                ];\n\n                // Events that delay hiding\n                const delayEvents = [\n                    'touchmove',\n                    'touchend',\n                    'mousemove',\n                ];\n\n                // Whether to show controls\n                show = showEvents.includes(toggle.type);\n\n                // Delay hiding on move events\n                if (delayEvents.includes(toggle.type)) {\n                    delay = 2000;\n                }\n\n                // Delay a little more for keyboard users\n                if (!this.touch && toggle.type === 'focusin') {\n                    delay = 3000;\n                    utils.toggleClass(this.elements.controls, this.config.classNames.noTransition, true);\n                }\n            } else {\n                show = utils.hasClass(this.elements.container, this.config.classNames.hideControls);\n            }\n        }\n\n        // Clear timer on every call\n        clearTimeout(this.timers.controls);\n\n        // If the mouse is not over the controls, set a timeout to hide them\n        if (show || this.paused || this.loading) {\n            // Check if controls toggled\n            const toggled = utils.toggleClass(this.elements.container, this.config.classNames.hideControls, false);\n\n            // Trigger event\n            if (toggled) {\n                utils.dispatchEvent.call(this, this.media, 'controlsshown');\n            }\n\n            // Always show controls when paused or if touch\n            if (this.paused || this.loading) {\n                return;\n            }\n\n            // Delay for hiding on touch\n            if (this.touch) {\n                delay = 3000;\n            }\n        }\n\n        // If toggle is false or if we're playing (regardless of toggle),\n        // then set the timer to hide the controls\n        if (!show || this.playing) {\n            this.timers.controls = setTimeout(() => {\n                // We need controls of course...\n                if (!utils.is.element(this.elements.controls)) {\n                    return;\n                }\n\n                // If the mouse is over the controls (and not entering fullscreen), bail\n                if ((this.elements.controls.pressed || this.elements.controls.hover) && !isEnterFullscreen) {\n                    return;\n                }\n\n                // Restore transition behaviour\n                if (!utils.hasClass(this.elements.container, this.config.classNames.hideControls)) {\n                    utils.toggleClass(this.elements.controls, this.config.classNames.noTransition, false);\n                }\n\n                // Check if controls toggled\n                const toggled = utils.toggleClass(this.elements.container, this.config.classNames.hideControls, true);\n\n                // Trigger event and close menu\n                if (toggled) {\n                    utils.dispatchEvent.call(this, this.media, 'controlshidden');\n\n                    if (this.config.controls.includes('settings') && !utils.is.empty(this.config.settings)) {\n                        controls.toggleMenu.call(this, false);\n                    }\n                }\n            }, delay);\n        }\n    }\n\n    /**\n     * Add event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    on(event, callback) {\n        utils.on(this.elements.container, event, callback);\n    }\n\n    /**\n     * Remove event listeners\n     * @param {string} event - Event type\n     * @param {function} callback - Callback for when event occurs\n     */\n    off(event, callback) {\n        utils.off(this.elements.container, event, callback);\n    }\n\n    /**\n     * Destroy an instance\n     * Event listeners are removed when elements are removed\n     * http://stackoverflow.com/questions/12528049/if-a-dom-element-is-removed-are-its-listeners-also-removed-from-memory\n     * @param {function} callback - Callback for when destroy is complete\n     * @param {boolean} soft - Whether it's a soft destroy (for source changes etc)\n     */\n    destroy(callback, soft = false) {\n        if (!this.ready) {\n            return;\n        }\n\n        const done = () => {\n            // Reset overflow (incase destroyed while in fullscreen)\n            document.body.style.overflow = '';\n\n            // GC for embed\n            this.embed = null;\n\n            // If it's a soft destroy, make minimal changes\n            if (soft) {\n                if (Object.keys(this.elements).length) {\n                    // Remove elements\n                    utils.removeElement(this.elements.buttons.play);\n                    utils.removeElement(this.elements.captions);\n                    utils.removeElement(this.elements.controls);\n                    utils.removeElement(this.elements.wrapper);\n\n                    // Clear for GC\n                    this.elements.buttons.play = null;\n                    this.elements.captions = null;\n                    this.elements.controls = null;\n                    this.elements.wrapper = null;\n                }\n\n                // Callback\n                if (utils.is.function(callback)) {\n                    callback();\n                }\n            } else {\n                // Unbind listeners\n                this.listeners.clear();\n\n                // Replace the container with the original element provided\n                utils.replaceElement(this.elements.original, this.elements.container);\n\n                // Event\n                utils.dispatchEvent.call(this, this.elements.original, 'destroyed', true);\n\n                // Callback\n                if (utils.is.function(callback)) {\n                    callback.call(this.elements.original);\n                }\n\n                // Reset state\n                this.ready = false;\n\n                // Clear for garbage collection\n                setTimeout(() => {\n                    this.elements = null;\n                    this.media = null;\n                }, 200);\n            }\n        };\n\n        // Stop playback\n        this.stop();\n\n        // Type specific stuff\n        switch (`${this.provider}:${this.type}`) {\n            case 'html5:video':\n            case 'html5:audio':\n                // Clear timeout\n                clearTimeout(this.timers.loading);\n\n                // Restore native video controls\n                ui.toggleNativeControls.call(this, true);\n\n                // Clean up\n                done();\n\n                break;\n\n            case 'youtube:video':\n                // Clear timers\n                clearInterval(this.timers.buffering);\n                clearInterval(this.timers.playing);\n\n                // Destroy YouTube API\n                if (this.embed !== null && utils.is.function(this.embed.destroy)) {\n                    this.embed.destroy();\n                }\n\n                // Clean up\n                done();\n\n                break;\n\n            case 'vimeo:video':\n                // Destroy Vimeo API\n                // then clean up (wait, to prevent postmessage errors)\n                if (this.embed !== null) {\n                    this.embed.unload().then(done);\n                }\n\n                // Vimeo does not always return\n                setTimeout(done, 200);\n\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    /**\n     * Check for support for a mime type (HTML5 only)\n     * @param {string} type - Mime type\n     */\n    supports(type) {\n        return support.mime.call(this, type);\n    }\n\n    /**\n     * Check for support\n     * @param {string} type - Player type (audio/video)\n     * @param {string} provider - Provider (html5/youtube/vimeo)\n     * @param {bool} inline - Where player has `playsinline` sttribute\n     */\n    static supported(type, provider, inline) {\n        return support.check(type, provider, inline);\n    }\n\n    /**\n     * Load an SVG sprite into the page\n     * @param {string} url - URL for the SVG sprite\n     * @param {string} [id] - Unique ID\n     */\n    static loadSprite(url, id) {\n        return utils.loadSprite(url, id);\n    }\n}\n\nexport default Plyr;\n"]}